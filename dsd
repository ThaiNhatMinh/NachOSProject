[33mcommit c37bc6a7fbaea221264c952f5ef734214c694bac[m
Author: Thai Nhat Minh <t.n.minh1997@gmail.com>
Date:   Wed Oct 25 00:44:31 2017 +0700

    Init commit

[1mdiff --git a/COPYRIGHT b/COPYRIGHT[m
[1mnew file mode 100755[m
[1mindex 0000000..0892ced[m
[1m--- /dev/null[m
[1m+++ b/COPYRIGHT[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mCopyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32mAll rights reserved.[m
[32m+[m
[32m+[m[32mPermission to use, copy, modify, and distribute this software and its[m
[32m+[m[32mdocumentation for any purpose, without fee, and without written agreement is[m
[32m+[m[32mhereby granted, provided that the above copyright notice and the following[m
[32m+[m[32mtwo paragraphs appear in all copies of this software.[m
[32m+[m
[32m+[m[32mIN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR[m
[32m+[m[32mDIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT[m
[32m+[m[32mOF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF[m
[32m+[m[32mCALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.[m
[32m+[m
[32m+[m[32mTHE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,[m
[32m+[m[32mINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY[m
[32m+[m[32mAND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS[m
[32m+[m[32mON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO[m
[32m+[m[32mPROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.[m
[1mdiff --git a/README b/README[m
[1mnew file mode 100755[m
[1mindex 0000000..41ec75c[m
[1m--- /dev/null[m
[1m+++ b/README[m
[36m@@ -0,0 +1,365 @@[m
[32m+[m[32mThis README file describes the Nachos release.  Comments, questions,[m
[32m+[m[32mand bug reports are always welcome, and can be directed to[m[41m [m
[32m+[m[32mnachos@cs.berkeley.edu (for now, an alias to just me, Tom Anderson), or[m[41m [m
[32m+[m[32mto the alt.os.nachos newsgroup.[m
[32m+[m
[32m+[m[32mNachos is instructional software for teaching undergraduate, and potentially[m
[32m+[m[32mgraduate, level operating systems courses.  The Nachos distribution[m
[32m+[m[32mcomes with:[m[41m [m
[32m+[m
[32m+[m[32m   an overview paper[m
[32m+[m[32m   simple baseline code for a working operating system[m
[32m+[m[32m   a simulator for a generic personal computer/workstation[m
[32m+[m[32m   sample assignments[m
[32m+[m[32m   a C++ primer (Nachos is written in an easy-to-learn subset of C++,[m[41m [m
[32m+[m[32m     and the primer helps teach C programmers our subset)[m
[32m+[m
[32m+[m[32mThe assignments illustrate and explore all areas of modern operating[m
[32m+[m[32msystems, including threads and concurrency, multiprogramming,[m[41m [m
[32m+[m[32msystem calls, virtual memory, software-loaded TLB's, file systems,[m[41m [m
[32m+[m[32mnetwork protocols, remote procedure call, and distributed systems.[m
[32m+[m
[32m+[m[32mThe most up to date version of nachos is linked to the file called,[m[41m [m
[32m+[m[32mnachos.tar.Z.  On Jan. 20, 1993, this version was nachos-3.1.tar.Z,[m
[32m+[m[32mbut it will be periodically updated as bugs are fixed and features added.[m
[32m+[m[32mREMEMBER TO TURN BINARY MODE ON WHEN RETRIEVING .Z FILES.[m
[32m+[m
[32m+[m[32mTo get started, you should:[m
[32m+[m[32m  1. use ftp to fetch the nachos.tar.Z file (turning on binary mode first)[m
[32m+[m[32m  2. uncompress nachos.tar.Z[m
[32m+[m[32m  3. tar -xf nachos.tar[m
[32m+[m[32m  4. lpr nachos.ps  -- print out the paper describing nachos[m
[32m+[m[32m  5. lpr doc/*.ps  -- print out the sample assignments[m
[32m+[m[32m  6. cd code; make print -- print out the nachos source code[m
[32m+[m[32m  7. cd code/c++example; lpr *.ps *.h *.cc -- print out C++ primer[m
[32m+[m[32m  8. if you have no DEC MIPS workstations available at your site, you[m[41m [m
[32m+[m[32m      will need to install the gcc cross-compiler on your system.  See[m
[32m+[m[32m      the instructions at the end of this file.[m
[32m+[m[32m  9. edit code/Makefile.dep to specify host machine type[m[41m [m
[32m+[m[32m     if cross-compiling (cf. step 8) you also need to:[m
[32m+[m[32m        edit code/test/Makefile and code/bin/Makefile[m
[32m+[m[32m  10. cd code; make all -- compile nachos source code[m
[32m+[m
[32m+[m[32mVersion 3 has been used for a semester at Berkeley by over a[m[41m [m
[32m+[m[32mhundred students, so most of the bugs are out of the system.[m
[32m+[m[32mHowever, there are likely to be some remaining problems; if you[m
[32m+[m[32mfind these, please send e-mail to nachos@cs.berkeley.edu (particularly[m
[32m+[m[32mif you have a fix :-).[m
[32m+[m
[32m+[m[32mAt present, Nachos runs on several platforms, including:[m[41m [m
[32m+[m[32m  DEC MIPS, running Ultrix[m
[32m+[m[32m  SUN SPARCstations (only tested on SunOS, not Solaris, though)[m
[32m+[m[32m  HP PA-RISC, running HP-UX[m
[32m+[m[32m  386 boxes, running 386BSD UNIX or FreeBSD[m
[32m+[m
[32m+[m[32mNotably we do not currently support:[m
[32m+[m[32m  PC Windows[m[41m [m
[32m+[m[32m  Macintosh[m
[32m+[m[32m  non-SPARC SUN workstations[m
[32m+[m[32mHowever, PC and Macintosh support is under development.  The main change[m
[32m+[m[32mthat you need to make to support another platform is an implementation[m
[32m+[m[32mof the low-level machine-dependent context switch code, in threads/switch.s.[m
[32m+[m[32mSeveral example architectures are now supported in switch.s.[m
[32m+[m
[32m+[m[32mThe basic Nachos system was written for a MIPS workstation.  It has[m
[32m+[m[32mbeen ported to other platforms, but as of now, there are a few gotchas.[m
[32m+[m[32mThe Nachos kernel and machine simulator run directly on the host machine,[m
[32m+[m[32mbut user-level programs running on top of Nachos are simulated instruction-by-[m
[32m+[m[32minstruction.  The simulator assumes MIPS object code, in little endian format.[m
[32m+[m[32mIt would take much more work to complete the port and change the CPU[m[41m [m
[32m+[m[32msimulator to simulate other instruction sets (although this is under[m
[32m+[m[32minvestigation).  Keeping the MIPS CPU causes a few problems:[m
[32m+[m
[32m+[m[32m1) You have to generate user-level code for the simulated machine.[m
[32m+[m[32mIf you have a heterogeneous environment with some MIPS and non-MIPS[m[41m [m
[32m+[m[32mworkstations, this isn't so hard -- students only need to compile a few[m[41m [m
[32m+[m[32msmall user programs.  But if you only have non-MIPS machines, you need to[m[41m [m
[32m+[m[32mget gcc to cross-compile to the DEC MIPS.  Gcc only recently has been fixed[m[41m [m
[32m+[m[32mto support this, and the instructions for how to do this are listed below.[m
[32m+[m[32mIf you are unable to get the cross-compiler to work, do not despair.[m
[32m+[m[32mThe distribution comes with a few simple user programs (pre-compiled to[m
[32m+[m[32mMIPS object code) that students can use to test out Nachos kernel services.[m
[32m+[m
[32m+[m[32m2) The Nachos kernel runs runs native mode while the user programs[m
[32m+[m[32mruns on the simulated CPU.  This is a little weird on the non-MIPS workstations[m
[32m+[m[32mbecause the user programs are using little endian (typically) and the kernel is[m
[32m+[m[32musing big endian.  Some information (such as the argv[] array) that[m
[32m+[m[32mis passed between the kernel and the user though user memory must be[m
[32m+[m[32mbyte swapped.  (Unfortunately, this isn't as easy to fix as simply[m
[32m+[m[32mcross-compiling to the SGI MIPS, which is big endian; in a few places,[m
[32m+[m[32mthe simulation assumes little endian format.  We're working on fixing this.)[m[41m [m
[32m+[m
[32m+[m[32mThe end of this file contains the procedure for constructing a cross-compiler[m
[32m+[m[32mto the MIPS, using the gcc toolkit.[m
[32m+[m
[32m+[m[32mVersion 3.1 Release Notes[m
[32m+[m[32m--------------------------[m
[32m+[m
[32m+[m[32mPrimarily, fixed up problems with cross-compiled environment.[m
[32m+[m
[32m+[m
[32m+[m[32mVersion 3 Release Notes[m
[32m+[m[32m-----------------------[m
[32m+[m
[32m+[m[32mNote that version 2 is still available, in[m[41m [m
[32m+[m[32m  ftp.cs.berkeley.edu:ucb/nachos/version2[m
[32m+[m
[32m+[m
[32m+[m[32mThere are several major changes for version 3, relative to earlier versions:[m
[32m+[m
[32m+[m[32m1. Extensive comments.  All procedures and data structures now have[m
[32m+[m[32m  commented explanations.  Hopefully, this will help make it easier for[m
[32m+[m[32m  students (and professors) to read and understand the baseline system.[m
[32m+[m[32m  In writing the comments, I realized that we continue to lack an "overall"[m[41m [m
[32m+[m[32m  roadmap to the system; Nachos deals with conceptually hard issues[m
[32m+[m[32m  in a bunch of places in the code, and I think students would find a roadmap[m
[32m+[m[32m  helpful.  I am plotting how to do this; for now, my apologies for[m[41m [m
[32m+[m[32m  anything that seems unduly complex and opaque.  Any suggestions[m
[32m+[m[32m  for places that need better explanations are welcome.[m
[32m+[m
[32m+[m[32m2. Modifications to improve portability, along with ports to several more[m
[32m+[m[32m  platforms.  All machine dependencies are now isolated into only a few[m[41m [m
[32m+[m[32m  locations (primarily, switch.h/switch.s, and sysdep.h/sysdep.cc), making[m
[32m+[m[32m  it much easier to port Nachos to new platforms.  This is evidenced by[m
[32m+[m[32m  the fact that the HP PA-RISC and 386UNIX ports were each completed in a[m
[32m+[m[32m  few days worth of concentrated effort.  There is now a common code base,[m
[32m+[m[32m  so the separate code base for SPARCs in Version 2 is no longer needed.[m
[32m+[m
[32m+[m[32m3. The directory structure has been simplified and made more generic.[m
[32m+[m[32m  Instead of directories named for the assignments that I give, I have[m
[32m+[m[32m  named them after topic areas: threads, userprog, vm, filesys, and network.[m
[32m+[m[32m  Each represents a single assignment, but there is a large amount[m
[32m+[m[32m  of flexibility now in choosing the order to cover these topics.[m
[32m+[m[32m  Here is the dependency graph:[m
[32m+[m
[32m+[m[32m  threads -> userprog -> vm[m
[32m+[m	[32m  -> filesys[m
[32m+[m	[32m  -> network[m
[32m+[m
[32m+[m[32m  In other words, all other assignments rely on you covering threads first,[m[41m [m
[32m+[m[32m  but the next assignment after that could be either multiprogramming,[m
[32m+[m[32m  the file system, or network support.  The only other constraint is that[m
[32m+[m[32m  the virtual memory stuff relies on the user programming assignment[m
[32m+[m[32m  being completed [NOTE however that we provide no code for the virtual[m
[32m+[m[32m  memory assignment, so it could be easily folded into the userprog[m[41m [m
[32m+[m[32m  assignment.][m
[32m+[m
[32m+[m[32m  Also, the userprog and vm assignments rely on there being a file system[m
[32m+[m[32m  to fetch executables and to serve as backing store for virtual memory pages.[m
[32m+[m[32m  A "stub" version of the file system is provided to allow these assignments[m
[32m+[m[32m  to be done first; the stub version is not needed if file systems[m
[32m+[m[32m  are covered before user programming and virtual memory.[m
[32m+[m
[32m+[m[32m4. More extensive options with respect to the sample assignments.[m
[32m+[m[32m  I have now three semesters of experience in teaching with Nachos.[m
[32m+[m[32m  My assignments have varied slightly from semester to semester, and[m
[32m+[m[32m  I have now compiled all of these versions into the sample assignments[m
[32m+[m[32m  [with comments as to which portions I assigned in any given semester].[m
[32m+[m[32m  The expectation is that you will subset the portion that you find most[m
[32m+[m[32m  interesting; if you have suggestions for what I might include in the[m
[32m+[m[32m  sample assignments, I would be happy to hear them.  Hopefully, from[m[41m [m
[32m+[m[32m  this point on, any changes to the sample assignments will only be to add[m[41m [m
[32m+[m[32m  further options.[m
[32m+[m
[32m+[m[32m  Over the long term, it seems to me we will each need to vary the[m
[32m+[m[32m  assignments, to prevent widespread sharing of solution sets.[m
[32m+[m
[32m+[m[32m5. Support for a software-loaded Translation Lookaside Buffer.  This[m
[32m+[m[32m  can be disabled (turning the machine simulation back to using simple[m
[32m+[m[32m  linear page tables) for those who want to avoid the added complexity,[m
[32m+[m[32m  but it is a feature of many modern architectures, and I think it[m
[32m+[m[32m  is a good illustration of caching issues.  This is the only substantive[m
[32m+[m[32m  change for this version.[m
[32m+[m
[32m+[m[32m  One advantage is that it allows a *lot* more flexibility in the[m[41m [m
[32m+[m[32m  VM assignment -- for instance, a student could build a flat one-level[m[41m [m
[32m+[m[32m  page table, segmentation plus paging, an inverted page table, etc.[m[41m  [m
[32m+[m[32m  This is all without modifying the hardware emulation.  Also, this could[m[41m [m
[32m+[m[32m  also lead to issues such as shared memory segments between address spaces,[m
[32m+[m[32m  which couldn't be supported in the current model.[m
[32m+[m
[32m+[m[32m  One consequence is that there are now a new object code format for[m
[32m+[m[32m  Nachos user programs.  The standard UNIX format, COFF, is way too[m[41m [m
[32m+[m[32m  complicated.  I have a simplified format, NOFF (Nachos Object Format),[m
[32m+[m[32m  which simply identifies the code, data, and bss segments.  By default,[m[41m [m
[32m+[m[32m  these segments are concatenated together (as in earlier versions of[m
[32m+[m[32m  Nachos), beginning at location 0, but with the software loaded TLB,[m
[32m+[m[32m  you have the flexibility to do something smarter.[m
[32m+[m
[32m+[m[32m  The converter from COFF to NOFF has been ported to run on all of the[m
[32m+[m[32m  supported machines.[m
[32m+[m
[32m+[m
[32m+[m[32mFuture plans:[m
[32m+[m
[32m+[m[32m1. Known bugs[m[41m [m
[32m+[m[32m    a. Nachos has a memory leak that causes it to increase its[m[41m [m
[32m+[m[32m       virtual memory size over time, even if Nachos is not doing anything.[m[41m [m
[32m+[m
[32m+[m[32m2. Planned ports (other suggestions welcome):[m
[32m+[m[32m    a. M/S Windows (somewhere between Jan and June 94)[m
[32m+[m[32m    b. Macintosh (ditto)[m
[32m+[m[32m    c. DEC Alpha (as soon as it gets a reliable g++)[m
[32m+[m
[32m+[m[32m3. Nachos user's guide and roadmap (not under development yet, so[m[41m [m
[32m+[m[32m     definite target date.  Maybe end of summer 94)[m
[32m+[m[32m  This would come in two parts -- first, a student guide that[m
[32m+[m[32m  would walk students through the baseline code, explaining how[m
[32m+[m[32m  the system works, and also to explain a bit of the underlying machine[m[41m [m
[32m+[m[32m  emulation.  At Berkeley, we devote about an hour per week in section[m[41m [m
[32m+[m[32m  to going through the code, but it would be helpful (particularly for[m[41m [m
[32m+[m[32m  those schools without discussion sections) to have this written down.[m
[32m+[m[32m  I've found in all three semesters I've taught the course that students really[m[41m [m
[32m+[m[32m  do end up repeating many of the same questions.[m
[32m+[m
[32m+[m[32m  The second part would be an instructor's guide -- how do you[m
[32m+[m[32m  get Nachos up and running on various systems, how the internals[m
[32m+[m[32m  of the machine emulation work, how much time each of the assignments[m
[32m+[m[32m  takes, etc.[m[41m  [m
[32m+[m
[32m+[m[32m  The result would replace the existing sample assignments with[m[41m [m
[32m+[m[32m  something more helpful.[m[41m [m
[32m+[m[32m  (The downside is that some parts of Nachos build on other parts,[m
[32m+[m[32m  so I have to be clear about these dependencies.)[m
[32m+[m
[32m+[m[32m4. New development -- this is in semi-priority order.[m
[32m+[m
[32m+[m[32ma. Modify the network simulation to be performance accurate, by[m
[32m+[m[32m   using Chandy-Misra conservative simulation techniques to[m
[32m+[m[32m   keep the clocks on each simulated Nachos machine in sync.[m[41m  [m
[32m+[m[32m   I have a prototype implementation of this, so this isn't all that[m[41m [m
[32m+[m[32m   difficult.  I'll make sure to leave an option to disable this, to go back[m
[32m+[m[32m   to the way the simulation works now, for backward compatibility.[m
[32m+[m
[32m+[m[32mb. Modify the file system to do write ahead logging for reliability.[m
[32m+[m[32m   I talk about transactions in my class, and having example code[m
[32m+[m[32m   would be really useful, at least for me.  Again, I have a prototype[m[41m [m
[32m+[m[32m   implementation of this, and I'll make sure that it can be disabled.[m
[32m+[m
[32m+[m[32mc. Write an RPC stub generator (actually, simplify the one used in Mach,[m
[32m+[m[32m   and convert it to generate Nachos network messages).  I think[m
[32m+[m[32m   the students would get a lot out of seeing a working RPC system,[m
[32m+[m[32m   and I think I can do this in a way that would be simple enough[m
[32m+[m[32m   for most students to easily understand.  As it stands, I have[m
[32m+[m[32m   the feeling most of my students don't understand the mechanics of[m
[32m+[m[32m   setting up an RPC connection, which at present, I can only describe[m
[32m+[m[32m   verbally.[m
[32m+[m
[32m+[m[32m   At first, I'm likely to do only a C-to-C stub generator, rather[m
[32m+[m[32m   than a C++ stub generator.  Although the latter would obviously fit[m[41m [m
[32m+[m[32m   into Nachos better, it's also harder![m
[32m+[m
[32m+[m[32md. Modify Nachos to insert interrupts at arbitrary points in the code.[m
[32m+[m[32m   Currently, interrupts (such as timer expiring) only occur when[m[41m [m
[32m+[m[32m   Nachos is executing user-level code, or when the Nachos kernel calls[m
[32m+[m[32m   the enable interrupt routine.  A different (better?) approach would[m
[32m+[m[32m   be to check for interrupts on every procedure entry within the Nachos[m
[32m+[m[32m   kernel; we could do this by modifying the compiler-inserted "mcount"[m[41m [m
[32m+[m[32m   routine for performance profiling.[m
[32m+[m
[32m+[m[32mAgain, comments on how to improve Nachos are always welcome.[m
[32m+[m
[32m+[m[32mTom Anderson[m
[32m+[m[32mtea@cs.berkeley.edu[m
[32m+[m[32mnachos@cs.berkeley.edu[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mBuilding a gcc cross-compiler[m
[32m+[m[32m-----------------------------[m
[32m+[m[32mThe gcc distribution has fairly good documentation on how to do this,[m
[32m+[m[32mbut since I walked through it, I figured I would just give you a recipe.[m
[32m+[m[32mThe following works from the SPARC to the DEC MIPS; if you want a[m[41m [m
[32m+[m[32mcross-compiler to a different platform (eg, the HP Snakes), you'll need[m
[32m+[m[32mto just alter this procedure slightly.[m
[32m+[m
[32m+[m[32mNOTE: we don't need the full cross-compiled environment.  In particular,[m
[32m+[m[32mNachos user programs include none of the standard UNIX library or system[m
[32m+[m[32mcall stubs, and it assumes its own crt.s (assembly language assist for[m
[32m+[m[32mstarting a program running).  This makes this significantly simpler,[m
[32m+[m[32mand it vastly reduces the size of (and overall simplifies) the resulting[m[41m [m
[32m+[m[32mobject code.[m
[32m+[m
[32m+[m[32m# To build a cross-compiler using the gnu tools:[m
[32m+[m
[32m+[m[32m# grab the tools via anonymous ftp[m
[32m+[m[32m% ftp prep.ai.mit.edu[m
[32m+[m
[32m+[m[32m ftp> cd /pub/gnu[m
[32m+[m[32m# REMEMBER TO SET BINARY MODE[m
[32m+[m[32m ftp> binary[m
[32m+[m[32m# get gcc, binutils, gas -- these or later versions[m
[32m+[m[32m ftp> get gcc-2.4.5.tar.gz[m[41m	[m
[32m+[m[32m ftp> get binutils-2.2.1.tar.gz[m
[32m+[m[32m ftp> get gas-2.1.1.tar.gz[m
[32m+[m[32m ftp> quit[m
[32m+[m
[32m+[m[32m# gunzip decompresses the tar files[m
[32m+[m[32m# you can also get gunzip from prep.ai.mit.edu[m
[32m+[m[32m% gunzip *[m
[32m+[m
[32m+[m[32m# where the executables are to go, usually /usr/local[m
[32m+[m[32m% setenv gccLocal /usr/local[m[41m 	[m
[32m+[m
[32m+[m[32m# de-tar the files[m
[32m+[m[32m% tar -xf gas-2.1.1.tar[m
[32m+[m[32m% tar -xf binutils-2.2.1.tar[m
[32m+[m[32m% tar -xf gcc-2.4.5.tar[m
[32m+[m[32m% mkdir tar[m
[32m+[m[32m% mv *.tar tar[m
[32m+[m
[32m+[m[32m# build gas and binutils first[m
[32m+[m[32m% cd gas*[m[41m [m
[32m+[m
[32m+[m[32m% ./configure --host=sparc-sun-sunos4.1.3 --target=decstation-ultrix[m[41m [m
[32m+[m	[32m--prefix $gccLocal[m
[32m+[m
[32m+[m[32m% make[m
[32m+[m
[32m+[m[32m% make install[m
[32m+[m
[32m+[m[32m% cd ../bin*[m[41m [m
[32m+[m
[32m+[m[32m% ./configure --host=sparc-sun-sunos4.1.3 --target=decstation-ultrix[m[41m [m
[32m+[m	[32m--prefix $gccLocal[m
[32m+[m
[32m+[m[32m% make[m
[32m+[m
[32m+[m[32m% make install[m
[32m+[m
[32m+[m[32m% cd ../gcc*[m
[32m+[m
[32m+[m[32m% ./configure --host=sparc-sun-sunos4.1.3 --target=decstation-ultrix[m
[32m+[m	[32m--with-gnu-as --with-gnu-ld --prefix $gccLocal[m
[32m+[m[41m   [m	[32m--local-prefix $gccLocal[m
[32m+[m
[32m+[m[32m# Afer building the cross-compiler, the Makefile is going to try to[m
[32m+[m[32m# use it to build a set of libraries, and a couple test cases.[m
[32m+[m[32m# Unfortunately, the libraries depend on UNIX headers (such as stdio.h).[m
[32m+[m[32m#[m
[32m+[m[32m# Since Nachos user programs don't need these headers (they'd be[m
[32m+[m[32m# wrong anyway, since Nachos doesn't support the standard UNIX syscall[m
[32m+[m[32m# interface), we need to fake out the Makefile.[m
[32m+[m
[32m+[m[32m# create a dummy lib files, to keep make happy[m[41m [m
[32m+[m[32m% ar r libgcc.a /dev/null[m
[32m+[m[32m% ar r libgcc2.a /dev/null[m
[32m+[m
[32m+[m[32m# Delete the following lines from the Makefile[m
[32m+[m[32m#     ENQUIRE = enquire[m
[32m+[m[32m#     CROSS_TEST = cross-test[m
[32m+[m[32m% vi Makefile[m
[32m+[m
[32m+[m[32m% make LANGUAGES=c[m
[32m+[m
[32m+[m[32m# at this point you may get an error building libgcc2; ignore it and proceed.[m
[32m+[m
[32m+[m[32m% make install LANGUAGES=c[m
[32m+[m
[32m+[m[32m# at this point, the cross-compiler and subsidiary tools[m
[32m+[m[32m# are now installed, in $gccLocal/decstation-ultrix/bin[m
[32m+[m
[32m+[m[32m# one last thing --[m
[32m+[m[32m#   you need to edit nachos/code/test/Makefile to use the[m
[32m+[m[32m#   gcc cross-compilation tools you have just built, instead of using[m[41m [m
[32m+[m[32m#   normal gcc.[m
[1mdiff --git a/c++example/Makefile b/c++example/Makefile[m
[1mnew file mode 100755[m
[1mindex 0000000..2daf7e0[m
[1m--- /dev/null[m
[1m+++ b/c++example/Makefile[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mall: stack inheritstack templatestack[m
[32m+[m
[32m+[m[32mstack: stack.h stack.cc[m
[32m+[m	[32mg++ -o stack stack.cc[m
[32m+[m
[32m+[m[32minheritstack: inheritstack.h inheritstack.cc list.h list.cc[m
[32m+[m	[32mg++ -o inheritstack inheritstack.cc list.cc[m
[32m+[m
[32m+[m[32mtemplatestack: templatestack.h templatestack.cc[m
[32m+[m	[32mg++ -o templatestack templatestack.cc[m
[1mdiff --git a/c++example/c++.ps b/c++example/c++.ps[m
[1mnew file mode 100755[m
[1mindex 0000000..bf950b4[m
[1m--- /dev/null[m
[1m+++ b/c++example/c++.ps[m
[36m@@ -0,0 +1,2760 @@[m
[32m+[m[32m%!PS-Adobe-2.0[m
[32m+[m[32m%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software[m
[32m+[m[32m%%Title: c++.dvi[m
[32m+[m[32m%%Pages: 23[m
[32m+[m[32m%%PageOrder: Ascend[m
[32m+[m[32m%%BoundingBox: 0 0 612 792[m
[32m+[m[32m%%EndComments[m
[32m+[m[32m%DVIPSCommandLine: dvips -o c++.ps c++.dvi[m
[32m+[m[32m%DVIPSParameters: dpi=300, comments removed[m
[32m+[m[32m%DVIPSSource:  TeX output 1995.08.30:1654[m
[32m+[m[32m%%BeginProcSet: tex.pro[m
[32m+[m[32m/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N[m
[32m+[m[32m/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72[m
[32m+[m[32mmul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}[m
[32m+[m[32mifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale[m
[32m+[m[32misls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div[m
[32m+[m[32mhsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul[m
[32m+[m[32mTR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}[m
[32m+[m[32mforall round exch round exch]setmatrix}N /@landscape{/isls true N}B[m
[32m+[m[32m/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B[m
[32m+[m[32m/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{[m
[32m+[m[32m/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N[m
[32m+[m[32mstring /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N[m
[32m+[m[32mend dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{[m
[32m+[m[32m/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0][m
[32m+[m[32mN df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup[m
[32m+[m[32mlength 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{[m
[32m+[m[32m128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub[m
[32m+[m[32mget 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data[m
[32m+[m[32mdup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N[m
[32m+[m[32m/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup[m
[32m+[m[32m/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx[m
[32m+[m[32m0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff[m
[32m+[m[32msetcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff[m
[32m+[m[32m.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}[m
[32m+[m[32mif nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup[m
[32m+[m[32mlength 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{[m
[32m+[m[32mcc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin[m
[32m+[m[32m0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul[m
[32m+[m[32madd .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage[m
[32m+[m[32muserdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook[m
[32m+[m[32mknown{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X[m
[32m+[m[32m/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for[m
[32m+[m[32m65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0[m
[32m+[m[32m0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V[m
[32m+[m[32m{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7[m
[32m+[m[32mgetinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}[m
[32m+[m[32mifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false[m
[32m+[m[32mRMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1[m
[32m+[m[32mfalse RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform[m
[32m+[m[32mround exch round exch itransform moveto rulex 0 rlineto 0 ruley neg[m
[32m+[m[32mrlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail[m
[32m+[m[32m{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}[m
[32m+[m[32mB /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{[m
[32m+[m[32m4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{[m
[32m+[m[32mp 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p[m
[32m+[m[32ma}B /bos{/SS save N}B /eos{SS restore}B end[m
[32m+[m[32m%%EndProcSet[m
[32m+[m[32mTeXDict begin 40258437 52099154 1000 300 300 (c++.dvi)[m
[32m+[m[32m@start /Fa 25 118 df<00000600000000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F0000007FFFFFFFFFE0FF[m
[32m+[m[32mFFFFFFFFF0FFFFFFFFFFF07FFFFFFFFFE000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F00000000000F00000000[m
[32m+[m[32m000F00000000000F00000000000F00000000000F00000000000F0000000000060000002C[m
[32m+[m[32m2E7CA535>43 D<1C003E007F00FF80FF80FF807F003E001C0009097B8813>46[m
[32m+[m[32mD<000E00001E00007E0007FE00FFFE00FFFE00F8FE0000FE0000FE0000FE0000FE0000FE[m
[32m+[m[32m0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE[m
[32m+[m[32m0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE[m
[32m+[m[32m007FFFFE7FFFFE7FFFFE17277BA622>49 D<00FF800003FFF0000FFFFC001F03FE003800[m
[32m+[m[32mFF007C007F80FE003FC0FF003FC0FF003FE0FF001FE0FF001FE07E001FE03C003FE00000[m
[32m+[m[32m3FE000003FC000003FC000007F8000007F000000FE000000FC000001F8000003F0000003[m
[32m+[m[32mE00000078000000F0000001E0000003C00E0007000E000E000E001C001C0038001C00700[m
[32m+[m[32m01C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF80FFFFFF80FFFFFF801B277DA622>[m
[32m+[m[32mI<007F800003FFF00007FFF8000F81FE001F00FE003F80FF003F807F803F807F803F807F[m
[32m+[m[32m801F807F800F007F800000FF000000FF000000FE000001FC000001F8000007F00000FFC0[m
[32m+[m[32m0000FFF0000001FC000000FE0000007F0000007F8000003FC000003FC000003FE000003F[m
[32m+[m[32mE03C003FE07E003FE0FF003FE0FF003FE0FF003FC0FF007FC07E007F807C007F003F01FE[m
[32m+[m[32m001FFFFC0007FFF00000FF80001B277DA622>I<00000E0000001E0000003E0000007E00[m
[32m+[m[32m0000FE000000FE000001FE000003FE0000077E00000E7E00000E7E00001C7E0000387E00[m
[32m+[m[32m00707E0000E07E0000E07E0001C07E0003807E0007007E000E007E000E007E001C007E00[m
[32m+[m[32m38007E0070007E00E0007E00FFFFFFF8FFFFFFF8FFFFFFF80000FE000000FE000000FE00[m
[32m+[m[32m0000FE000000FE000000FE000000FE000000FE00003FFFF8003FFFF8003FFFF81D277EA6[m
[32m+[m[32m22>I<FFFFFFFC0000FFFFFFFF8000FFFFFFFFC00003F8001FF00003F8000FF80003F800[m
[32m+[m[32m07FC0003F80003FC0003F80003FC0003F80003FE0003F80001FE0003F80001FE0003F800[m
[32m+[m[32m01FE0003F80003FE0003F80003FC0003F80003FC0003F80007F80003F8000FF00003F800[m
[32m+[m[32m1FE00003F800FFC00003FFFFFE000003FFFFFFE00003F80007F00003F80003FC0003F800[m
[32m+[m[32m01FE0003F80001FE0003F80000FF0003F80000FF0003F80000FF8003F80000FF8003F800[m
[32m+[m[32m00FF8003F80000FF8003F80000FF8003F80000FF8003F80000FF0003F80001FF0003F800[m
[32m+[m[32m03FE0003F80007FC0003F8001FF800FFFFFFFFF000FFFFFFFFC000FFFFFFFE000029297D[m
[32m+[m[32mA831>66 D<00003FF001800003FFFE0380000FFFFF8780003FF007DF8000FF8001FF8001[m
[32m+[m[32mFE00007F8003FC00003F8007F000001F800FF000000F801FE0000007801FE0000007803F[m
[32m+[m[32mC0000007803FC0000003807FC0000003807F80000003807F8000000000FF8000000000FF[m
[32m+[m[32m8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF[m
[32m+[m[32m8000000000FF80000000007F80000000007F80000000007FC0000003803FC0000003803F[m
[32m+[m[32mC0000003801FE0000003801FE0000007000FF00000070007F000000E0003FC00001E0001[m
[32m+[m[32mFE00003C0000FF8000F800003FF007E000000FFFFFC0000003FFFF000000003FF8000029[m
[32m+[m[32m297CA832>I<FFFFFFFFE0FFFFFFFFE0FFFFFFFFE003FC001FE003FC0007F003FC0001F0[m
[32m+[m[32m03FC0001F003FC0000F003FC00007003FC00007003FC00007003FC00007803FC00E03803[m
[32m+[m[32mFC00E03803FC00E03803FC00E00003FC01E00003FC01E00003FC07E00003FFFFE00003FF[m
[32m+[m[32mFFE00003FFFFE00003FC07E00003FC01E00003FC01E00003FC00E00003FC00E00003FC00[m
[32m+[m[32mE00003FC00E00003FC00000003FC00000003FC00000003FC00000003FC00000003FC0000[m
[32m+[m[32m0003FC00000003FC00000003FC000000FFFFFC0000FFFFFC0000FFFFFC000025297EA82B[m
[32m+[m[32m>70 D<FFFFFCFFFFFCFFFFFC01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00[m
[32m+[m[32m01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00[m
[32m+[m[32m01FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE00[m
[32m+[m[32m01FE0001FE0001FE00FFFFFCFFFFFCFFFFFC16297EA81A>73 D<0000FFE000000007FFFC[m
[32m+[m[32m0000003FC07F8000007F001FC00001FC0007F00003F80003F80007F00001FC000FF00001[m
[32m+[m[32mFE001FE00000FF001FE00000FF003FC000007F803FC000007F807FC000007FC07F800000[m
[32m+[m[32m3FC07F8000003FC07F8000003FC0FF8000003FE0FF8000003FE0FF8000003FE0FF800000[m
[32m+[m[32m3FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF800000[m
[32m+[m[32m3FE07F8000003FC07FC000007FC07FC000007FC03FC000007F803FC000007F801FE00000[m
[32m+[m[32mFF001FE00000FF000FF00001FE0007F00001FC0003F80003F80001FC0007F00000FF001F[m
[32m+[m[32mE000003FC07F8000000FFFFE00000000FFE000002B297CA834>79[m
[32m+[m[32mD<7FFFFFFFFFC07FFFFFFFFFC07FFFFFFFFFC07F803FC03FC07E003FC007C078003FC003[m
[32m+[m[32mC078003FC003C070003FC001C0F0003FC001E0F0003FC001E0E0003FC000E0E0003FC000[m
[32m+[m[32mE0E0003FC000E0E0003FC000E0E0003FC000E000003FC0000000003FC0000000003FC000[m
[32m+[m[32m0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000[m
[32m+[m[32m0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000[m
[32m+[m[32m0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000[m
[32m+[m[32m0000003FC00000007FFFFFE000007FFFFFE000007FFFFFE0002B287EA730>84[m
[32m+[m[32mD<03FF80000FFFF0001F01F8003F807E003F807E003F803F001F003F800E003F8000003F[m
[32m+[m[32m8000003F8000003F80000FFF8000FFFF8007FC3F800FE03F803F803F803F003F807F003F[m
[32m+[m[32m80FE003F80FE003F80FE003F80FE003F807E007F807F00DF803F839FFC0FFF0FFC01FC03[m
[32m+[m[32mFC1E1B7E9A21>97 D<003FF80000FFFE0003F01F0007E03F800FC03F801F803F803F801F[m
[32m+[m[32m007F000E007F0000007F000000FF000000FF000000FF000000FF000000FF000000FF0000[m
[32m+[m[32m00FF0000007F0000007F0000007F8000003F8001C01F8001C00FC0038007E0070003F01E[m
[32m+[m[32m0000FFFC00003FE0001A1B7E9A1F>99 D<003FE00001FFF80003F07E0007C01F000F801F[m
[32m+[m[32m801F800F803F800FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFF[m
[32m+[m[32mE0FF000000FF000000FF0000007F0000007F0000007F0000003F8000E01F8000E00FC001[m
[32m+[m[32mC007E0038003F81F0000FFFE00001FF0001B1B7E9A20>101 D<FFE0000000FFE0000000[m
[32m+[m[32mFFE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000F[m
[32m+[m[32mE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE07F00000FE1[m
[32m+[m[32mFFC0000FE787E0000FEE03F0000FF803F0000FF803F8000FF003F8000FF003F8000FE003[m
[32m+[m[32mF8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8[m
[32m+[m[32m000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800[m
[32m+[m[32m0FE003F800FFFE3FFF80FFFE3FFF80FFFE3FFF80212A7DA926>104[m
[32m+[m[32mD<07000F801FC03FE03FE03FE01FC00F8007000000000000000000000000000000FFE0FF[m
[32m+[m[32mE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F[m
[32m+[m[32mE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14>I<FFE0FFE0FFE00FE00FE00FE00FE0[m
[32m+[m[32m0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0[m
[32m+[m[32m0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A[m
[32m+[m[32m7DA914>108 D<FFC07F800FF000FFC1FFE03FFC00FFC383F0707E000FC603F8C07F000F[m
[32m+[m[32mCC01F9803F000FD801FF003F800FF001FE003F800FF001FE003F800FE001FC003F800FE0[m
[32m+[m[32m01FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001[m
[32m+[m[32mFC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC[m
[32m+[m[32m003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F80FFFE1FFFC3[m
[32m+[m[32mFFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A>I<FFC07F0000FFC1FFC000FFC787[m
[32m+[m[32mE0000FCE03F0000FD803F0000FD803F8000FF003F8000FF003F8000FE003F8000FE003F8[m
[32m+[m[32m000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800[m
[32m+[m[32m0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800FF[m
[32m+[m[32mFE3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>I<FFE1FE0000FFE7FF8000FFFE07E000[m
[32m+[m[32m0FF803F0000FF001F8000FE000FC000FE000FE000FE000FF000FE0007F000FE0007F000F[m
[32m+[m[32mE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0[m
[32m+[m[32m007F000FE000FF000FE000FF000FE000FE000FE001FC000FF001F8000FF803F0000FFE0F[m
[32m+[m[32mE0000FEFFF80000FE1FC00000FE00000000FE00000000FE00000000FE00000000FE00000[m
[32m+[m[32m000FE00000000FE00000000FE00000000FE0000000FFFE000000FFFE000000FFFE000000[m
[32m+[m[32m21277E9A26>112 D<FFC1F0FFC7FCFFCE3E0FD87F0FD87F0FF07F0FF03E0FF01C0FE000[m
[32m+[m[32m0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000[m
[32m+[m[32m0FE0000FE0000FE000FFFF00FFFF00FFFF00181B7E9A1C>114 D<03FE300FFFF01E03F0[m
[32m+[m[32m3800F0700070F00070F00070F80070FE0000FFE0007FFE007FFF803FFFE01FFFF007FFF8[m
[32m+[m[32m00FFF80007FC6000FCE0007CE0003CF0003CF00038F80038FC0070FF01E0F7FFC0C1FF00[m
[32m+[m[32m161B7E9A1B>I<00700000700000700000700000F00000F00000F00001F00003F00003F0[m
[32m+[m[32m0007F0001FFFF0FFFFF0FFFFF007F00007F00007F00007F00007F00007F00007F00007F0[m
[32m+[m[32m0007F00007F00007F00007F00007F00007F03807F03807F03807F03807F03807F03803F0[m
[32m+[m[32m3803F87001F86000FFC0001F8015267FA51B>I<FFE03FF800FFE03FF800FFE03FF8000F[m
[32m+[m[32mE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0[m
[32m+[m[32m03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003[m
[32m+[m[32mF8000FE003F8000FE003F8000FE003F8000FE007F80007E007F80007E00FF80003F03BFF[m
[32m+[m[32m8001FFF3FF80003FC3FF80211B7D9A26>I E /Fb 34 122 df<387CFEFFFF7F3B030303[m
[32m+[m[32m06060C1C18702008117C8610>44 D<387CFEFEFE7C3807077C8610>46[m
[32m+[m[32mD<0003FE0080001FFF818000FF01E38001F8003F8003E0001F8007C0000F800F80000780[m
[32m+[m[32m1F800007803F000003803F000003807F000001807E000001807E00000180FE00000000FE[m
[32m+[m[32m00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E00[m
[32m+[m[32m0000007E000001807F000001803F000001803F000003801F800003000F8000030007C000[m
[32m+[m[32m060003F0000C0001F800380000FF00F000001FFFC0000003FE000021227DA128>67[m
[32m+[m[32mD<FFFFFF8000FFFFFFF00007F003FC0007F0007E0007F0003F0007F0001F8007F0000FC0[m
[32m+[m[32m07F00007E007F00007E007F00007F007F00003F007F00003F007F00003F007F00003F807[m
[32m+[m[32mF00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F0[m
[32m+[m[32m0003F807F00003F007F00003F007F00003F007F00007E007F00007E007F0000FC007F000[m
[32m+[m[32m1F8007F0003F0007F0007E0007F003FC00FFFFFFF000FFFFFF800025227EA12B>I<FFFF[m
[32m+[m[32mFFF8FFFFFFF807F001F807F0007807F0003807F0001807F0001C07F0001C07F0000C07F0[m
[32m+[m[32m000C07F0180C07F0180C07F0180007F0180007F0380007F0780007FFF80007FFF80007F0[m
[32m+[m[32m780007F0380007F0180007F0180007F0180007F0180007F0000007F0000007F0000007F0[m
[32m+[m[32m000007F0000007F0000007F0000007F00000FFFFC000FFFFC0001E227EA123>70[m
[32m+[m[32mD<FFFF83FFFEFFFF83FFFE07F0001FC007F0001FC007F0001FC007F0001FC007F0001FC0[m
[32m+[m[32m07F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007[m
[32m+[m[32mF0001FC007FFFFFFC007FFFFFFC007F0001FC007F0001FC007F0001FC007F0001FC007F0[m
[32m+[m[32m001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F0001FC007F000[m
[32m+[m[32m1FC007F0001FC007F0001FC007F0001FC0FFFF83FFFEFFFF83FFFE27227EA12C>72[m
[32m+[m[32mD<FFF000000FFFFFF800001FFF07F800001FE006FC000037E006FC000037E006FC000037[m
[32m+[m[32mE0067E000067E0067E000067E0063F0000C7E0063F0000C7E0061F800187E0061F800187[m
[32m+[m[32mE0060FC00307E0060FC00307E0060FC00307E00607E00607E00607E00607E00603F00C07[m
[32m+[m[32mE00603F00C07E00601F81807E00601F81807E00601F81807E00600FC3007E00600FC3007[m
[32m+[m[32mE006007E6007E006007E6007E006003FC007E006003FC007E006001F8007E006001F8007[m
[32m+[m[32mE006001F8007E006000F0007E0FFF00F00FFFFFFF00600FFFF30227EA135>77[m
[32m+[m[32mD<0007FC0000003FFF800000FC07E00003F001F80007E000FC000FC0007E001F80003F00[m
[32m+[m[32m1F80003F003F00001F803F00001F807F00001FC07E00000FC07E00000FC0FE00000FE0FE[m
[32m+[m[32m00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00[m
[32m+[m[32m000FE07E00000FC07F00001FC07F00001FC03F00001F803F80003F801F80003F000FC000[m
[32m+[m[32m7E0007E000FC0003F001F80000FC07E000003FFF80000007FC000023227DA12A>79[m
[32m+[m[32mD<FFFFFF00FFFFFFE007F007F007F001FC07F000FC07F0007E07F0007E07F0007F07F000[m
[32m+[m[32m7F07F0007F07F0007F07F0007F07F0007E07F0007E07F000FC07F001FC07F007F007FFFF[m
[32m+[m[32mE007FFFF0007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F000[m
[32m+[m[32m0007F0000007F0000007F0000007F0000007F00000FFFF8000FFFF800020227EA126>I<[m
[32m+[m[32mFFFFFE0000FFFFFFC00007F007F00007F001F80007F000FC0007F0007E0007F0007F0007[m
[32m+[m[32mF0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000FC0007F0[m
[32m+[m[32m01F80007F007F00007FFFFC00007FFFF800007F00FE00007F007F00007F003F80007F001[m
[32m+[m[32mFC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC[m
[32m+[m[32m0007F001FC0607F000FE0607F000FF0CFFFF803FF8FFFF800FF027227EA12A>82[m
[32m+[m[32mD<01FE0207FF861F01FE3C007E7C001E78000E78000EF80006F80006FC0006FC0000FF00[m
[32m+[m[32m00FFE0007FFF007FFFC03FFFF01FFFF80FFFFC03FFFE003FFE0003FE00007F00003F0000[m
[32m+[m[32m3FC0001FC0001FC0001FE0001EE0001EF0003CFC003CFF00F8C7FFE080FF8018227DA11F[m
[32m+[m[32m>I<0FFC003FFF807E07C07E03E07E01E07E01F03C01F00001F00001F0003FF003FDF01F[m
[32m+[m[32mC1F03F01F07E01F0FC01F0FC01F0FC01F0FC01F07E02F07E0CF81FF87F07E03F18167E95[m
[32m+[m[32m1B>97 D<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F000000[m
[32m+[m[32m1F0000001F0000001F0000001F0000001F0000001F0FE0001F3FF8001FE07C001F803E00[m
[32m+[m[32m1F001F001F000F801F000F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC0[m
[32m+[m[32m1F000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C3FF800180FC000[m
[32m+[m[32m1A237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC00[m
[32m+[m[32m00FC0000FC0000FC0000FC00007C00007E00007E00003E00181F00300FC06007FFC000FF[m
[32m+[m[32m0015167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E00[m
[32m+[m[32m00003E0000003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE00[m
[32m+[m[32m1F007E003E003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00[m
[32m+[m[32mFC003E00FC003E00FC003E007C003E007C003E003E007E001F00FE000F83BE0007FF3FC0[m
[32m+[m[32m01FC3FC01A237EA21F>I<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC[m
[32m+[m[32m00F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003[m
[32m+[m[32mFFC000FF0015167E951A>I<001FC0007FE000F1F001E3F003E3F007C3F007C1E007C000[m
[32m+[m[32m07C00007C00007C00007C00007C000FFFE00FFFE0007C00007C00007C00007C00007C000[m
[32m+[m[32m07C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C000[m
[32m+[m[32m07C0003FFC003FFC00142380A211>I<01FE0F0007FFBF800F87C7801F03E7801E01E000[m
[32m+[m[32m3E01F0003E01F0003E01F0003E01F0003E01F0001E01E0001F03E0000F87C0000FFF8000[m
[32m+[m[32m09FE000018000000180000001C0000001FFFE0000FFFF80007FFFE001FFFFF003C003F00[m
[32m+[m[32m78000F80F0000780F0000780F0000780F000078078000F003C001E001F007C000FFFF800[m
[32m+[m[32m01FFC00019217F951C>I<FF000000FF0000001F0000001F0000001F0000001F0000001F[m
[32m+[m[32m0000001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF8001F[m
[32m+[m[32m307C001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F[m
[32m+[m[32m003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FF[m
[32m+[m[32mE1FFC0FFE1FFC01A237EA21F>I<1C003E007F007F007F003E001C000000000000000000[m
[32m+[m[32m000000000000FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F00[m
[32m+[m[32m1F001F001F001F001F00FFE0FFE00B247EA310>I<0038007C00FE00FE00FE007C003800[m
[32m+[m[32m0000000000000000000000000003FE03FE003E003E003E003E003E003E003E003E003E00[m
[32m+[m[32m3E003E003E003E003E003E003E003E003E003E003E003E003E003E783EFC3EFC3CFC7C78[m
[32m+[m[32mF87FE01F800F2E83A311>I<FF00FF001F001F001F001F001F001F001F001F001F001F00[m
[32m+[m[32m1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00[m
[32m+[m[32m1F001F001F00FFE0FFE00B237EA210>108 D<FF07F007F000FF1FFC1FFC001F303E303E[m
[32m+[m[32m001F403E403E001F801F801F001F801F801F001F001F001F001F001F001F001F001F001F[m
[32m+[m[32m001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F[m
[32m+[m[32m001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE0FF[m
[32m+[m[32mE0FFE0FFE0FFE02B167E9530>I<FF07E000FF1FF8001F307C001F403C001F803E001F80[m
[32m+[m[32m3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F00[m
[32m+[m[32m3E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1FFC01A167E951F>[m
[32m+[m[32mI<00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007CFC007EFC007EFC007EFC00[m
[32m+[m[32m7EFC007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E007FFC000FE0017167E951C[m
[32m+[m[32m>I<FF0FE000FF3FF8001FE07C001F803E001F001F001F001F801F001F801F000FC01F00[m
[32m+[m[32m0FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F001F801F001F801F80[m
[32m+[m[32m3F001FC03E001FE0FC001F3FF8001F0FC0001F0000001F0000001F0000001F0000001F00[m
[32m+[m[32m00001F0000001F0000001F000000FFE00000FFE000001A207E951F>I<FE1F00FE3FC01E[m
[32m+[m[32m67E01EC7E01E87E01E87E01F83C01F00001F00001F00001F00001F00001F00001F00001F[m
[32m+[m[32m00001F00001F00001F00001F00001F0000FFF000FFF00013167E9517>114[m
[32m+[m[32mD<0FF3003FFF00781F00600700E00300E00300F00300FC00007FE0007FF8003FFE000FFF[m
[32m+[m[32m0001FF00000F80C00780C00380E00380E00380F00700FC0E00EFFC00C7F00011167E9516[m
[32m+[m[32m>I<0180000180000180000180000380000380000780000780000F80003F8000FFFF00FF[m
[32m+[m[32mFF000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F[m
[32m+[m[32m81800F81800F81800F81800F81800F830007C30003FE0000F80011207F9F16>I<FF01FE[m
[32m+[m[32m00FF01FE001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E[m
[32m+[m[32m001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F007E001F00FE[m
[32m+[m[32m000F81BE0007FF3FC001FC3FC01A167E951F>I<FFE01FE0FFE01FE01F8007000F800600[m
[32m+[m[32m0FC00E0007C00C0007E00C0003E0180003E0180001F0300001F0300000F8600000F86000[m
[32m+[m[32m007CC000007CC000007FC000003F8000003F8000001F0000001F0000000E0000000E0000[m
[32m+[m[32m1B167F951E>I<FFE3FF07F8FFE3FF07F81F007800C01F807C01C00F807C01800F807C01[m
[32m+[m[32m8007C07E030007C0DE030007C0DE070003E1DF060003E18F060001F18F8C0001F3078C00[m
[32m+[m[32m01F3078C0000FF07D80000FE03D80000FE03F800007C01F000007C01F000003C01E00000[m
[32m+[m[32m3800E000003800E00025167F9528>I<FFE07FC0FFE07FC00F801C0007C0380003E07000[m
[32m+[m[32m03F0600001F8C00000F98000007F8000003F0000001F0000001F8000003FC0000037C000[m
[32m+[m[32m0063E00000C1F00001C0F8000380FC0007007E000E003E00FF80FFE0FF80FFE01B167F95[m
[32m+[m[32m1E>I<FFE01FE0FFE01FE01F8007000F8006000FC00E0007C00C0007E00C0003E0180003[m
[32m+[m[32mE0180001F0300001F0300000F8600000F86000007CC000007CC000007FC000003F800000[m
[32m+[m[32m3F8000001F0000001F0000000E0000000E0000000C0000000C00000018000078180000FC[m
[32m+[m[32m380000FC300000FC60000069C000007F8000001F0000001B207F951E>I[m
[32m+[m[32mE /Fc 27 122 df<0000030000000300000007000000070000000F0000000F0000001F00[m
[32m+[m[32m00002F0000002F0000004F8000004F800000878000008780000107800002078000020780[m
[32m+[m[32m00040780000407800008078000180780001007800020078000200780007FFFC0004003C0[m
[32m+[m[32m008003C0018003C0010003C0020003C0020003C0040003C0040003C00C0003C03C0007E0[m
[32m+[m[32mFF003FFC1E237DA224>65 D<00007F00800003808100000E00630000380027000070001F[m
[32m+[m[32m0000E0000E0001C0000E000380000E000700000E000F000004000E000004001E00000400[m
[32m+[m[32m3C000004003C00000800780000000078000000007800000000F000000000F000000000F0[m
[32m+[m[32m00000000F000000000F000000000E000000000E000002000E000002000E000004000E000[m
[32m+[m[32m004000F00000800070000080007000010000380002000018000400001C00080000060030[m
[32m+[m[32m00000381C0000000FE000000212479A223>67 D<00FF800007FC000F80000F80000F8000[m
[32m+[m[32m1780000F80001780001780002F000013C0002F000013C0004F000013C0008F000023C000[m
[32m+[m[32m9E000023C0011E000023C0011E000023C0021E000043C0043C000043C0043C000043C008[m
[32m+[m[32m3C000041E0083C000081E01078000081E02078000081E02078000081E04078000101E040[m
[32m+[m[32mF0000101E080F0000101E100F0000101E100F0000200F201E0000200F201E0000200F401[m
[32m+[m[32mE0000200F801E0000400F803C0000400F003C0000400F003C0000C00E003C0001E00C007[m
[32m+[m[32mC000FF80C07FF8002E227DA12C>77 D<0000FE0000078380000C00E00038007000700038[m
[32m+[m[32m00E0003801C0001C0380001C0700001C0F00001E1E00001E1C00001E3C00001E3C00001E[m
[32m+[m[32m7800001E7800001E7800001EF000003CF000003CF000003CF0000078F0000078E0000078[m
[32m+[m[32mE00000F0E00000F0E00001E0E00001C0F00003C0F00007807000070078000E0038001C00[m
[32m+[m[32m1C0038000E00E0000703800001FC00001F2479A225>79 D<00F8C00185C00705C00E0380[m
[32m+[m[32m0E03801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E10F01C20[m
[32m+[m[32m701C20703C20305C40308C400F078014157B9419>97 D<03C01F80038003800380070007[m
[32m+[m[32m00070007000E000E000E000E001C001CF81D0C1E0E3C0638073807380F700F700F700F70[m
[32m+[m[32m0FE01EE01EE01EE03CE038E038607060E031C01F0010237BA216>I<007E0001C1000301[m
[32m+[m[32m800703800E07801C07803C0000380000780000780000780000F00000F00000F00000F000[m
[32m+[m[32m00F00100700100700200300C001830000FC00011157B9416>I<00003C0003F800003800[m
[32m+[m[32m00380000380000700000700000700000700000E00000E00000E00000E00001C000F9C001[m
[32m+[m[32m85C00705C00E03800E03801C03803C0380380700780700780700780700F00E00F00E00F0[m
[32m+[m[32m0E00F00E10F01C20701C20703C20305C40308C400F078016237BA219>I<00F803840E02[m
[32m+[m[32m1C023C0238027804F018FFE0F000F000E000E000E000E000E002E0026004701830600F80[m
[32m+[m[32m0F157A9416>I<00003E0000470000CF00018F0001860003800003800003800007000007[m
[32m+[m[32m00000700000700000700000E0000FFF0000E00000E00000E00001C00001C00001C00001C[m
[32m+[m[32m00001C0000380000380000380000380000380000700000700000700000700000700000E0[m
[32m+[m[32m0000E00000E00000E00000C00001C00001C000718000F18000F300006200003C0000182D[m
[32m+[m[32m82A20F>I<001F180030B800E0B801C07001C0700380700780700700E00F00E00F00E00F[m
[32m+[m[32m00E01E01C01E01C01E01C01E01C01E03800E03800E0780060B8006170001E70000070000[m
[32m+[m[32m0700000E00000E00000E00701C00F01800F0300060E0003F8000151F7E9416>I<00F000[m
[32m+[m[32m0FE00000E00000E00000E00001C00001C00001C00001C000038000038000038000038000[m
[32m+[m[32m070000071F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C0[m
[32m+[m[32m380380380380380380380704700708700E08700E10700610E006206003C016237DA219>[m
[32m+[m[32mI<00C001E001C001C0000000000000000000000000000000001E00230043004300870087[m
[32m+[m[32m0087000E000E001C001C001C00380038003840708070807080710032001C000B217BA00F[m
[32m+[m[32m>I<0000E00001E00001E00000C000000000000000000000000000000000000000000000[m
[32m+[m[32m0000001E0000230000438000838000838001038001038000070000070000070000070000[m
[32m+[m[32m0E00000E00000E00000E00001C00001C00001C00001C0000380000380000380000380000[m
[32m+[m[32m700000700000700070E000F0C000F180006300003C0000132B82A00F>I<00F00007E000[m
[32m+[m[32m00E00000E00000E00001C00001C00001C00001C000038000038000038000038000070000[m
[32m+[m[32m0701E00702100704700E08F00E10F00E20600E40001D80001E00001FC0001C7000383800[m
[32m+[m[32m383800381C00381C20703840703840703840701880E01880600F0014237DA216>I<01E0[m
[32m+[m[32m0FC001C001C001C0038003800380038007000700070007000E000E000E000E001C001C00[m
[32m+[m[32m1C001C0038003800380038007000700070007100E200E200E200E200640038000B237CA2[m
[32m+[m[32m0C>I<1C0F80F8002610C10C004760660600878078070087807807008700700700870070[m
[32m+[m[32m07000E00E00E000E00E00E000E00E00E000E00E00E001C01C01C001C01C01C001C01C01C[m
[32m+[m[32m001C01C03820380380384038038070403803807080380380308070070031003003001E00[m
[32m+[m[32m23157B9428>I<380F804C30C04E40608E80708F00708E00708E00701C00E01C00E01C00[m
[32m+[m[32mE01C00E03801C03801C03801C0380384700388700308700708700310E003106001E01615[m
[32m+[m[32m7B941B>I<007E0001C3000381800701C00E01C01C01E03C01E03801E07801E07801E078[m
[32m+[m[32m01E0F003C0F003C0F00380F00780700700700E00700C0030180018700007C00013157B94[m
[32m+[m[32m19>I<01C1F002621804741C08780C08700E08700E08701E00E01E00E01E00E01E00E01E[m
[32m+[m[32m01C03C01C03C01C03C01C07803807003807003C0E003C1C0072380071E00070000070000[m
[32m+[m[32m0E00000E00000E00000E00001C00001C00001C0000FFC000171F7F9419>I<1C1F002620[m
[32m+[m[32m804741C08783C08703C08701808700000E00000E00000E00000E00001C00001C00001C00[m
[32m+[m[32m001C000038000038000038000038000070000030000012157B9415>114[m
[32m+[m[32mD<00FC000183000200800401800C03800C03000C00000F00000FF00007FC0003FE00003E[m
[32m+[m[32m00000F00000700700700F00600F00600E004004008002030001FC00011157D9414>I<00[m
[32m+[m[32mC001C001C001C001C003800380038003800700FFF8070007000E000E000E000E001C001C[m
[32m+[m[32m001C001C003800380038003810702070207040708031001E000D1F7C9E10>I<1E006023[m
[32m+[m[32m00E04380E04381C08381C08701C08701C00703800E03800E03800E03801C07001C07001C[m
[32m+[m[32m07001C07081C0E10180E101C0E101C1E200C262007C3C015157B941A>I<1C01802603C0[m
[32m+[m[32m4707C04703C08701C08E00C08E00C00E00801C00801C00801C0080380100380100380100[m
[32m+[m[32m3802003802003804003808001808000C300007C00012157B9416>I<1E0060E02300E0F0[m
[32m+[m[32m4380E1F04381C0F08381C0708701C0308701C030070380200E0380200E0380200E038020[m
[32m+[m[32m1C0700401C0700401C0700401C0700801C0700801C0701001C0F01000C0B020006138400[m
[32m+[m[32m03E0F8001C157B9420>I<1E00302300704380704380E08380E08700E08700E00701C00E[m
[32m+[m[32m01C00E01C00E01C01C03801C03801C03801C03801C07001C07001C07001C0F000C3E0003[m
[32m+[m[32mCE00000E00000E00001C00601C00F03800F03000E0600080C0004380003E0000141F7B94[m
[32m+[m[32m18>121 D E /Fd 77 127 df<60F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F060000000[m
[32m+[m[32m00000060F0F060041E759D1A>33 D<701CF01EF01EF01EF01EF01EF01EF01E701C701C70[m
[32m+[m[32m1C701C701C600C0F0E7B9D1A>I<01818003C3C003C3C003C3C003C3C003C3C003C3C07F[m
[32m+[m[32mFFF0FFFFF8FFFFF8FFFFF80787800787800787800F8F800F0F000F0F000F0F000F0F00FF[m
[32m+[m[32mFFF8FFFFF8FFFFF87FFFF01E1E001E1E001E1E001E1E001E1E001E1E000C0C00151E7E9D[m
[32m+[m[32m1A>I<1800C03C01E07E01E07E03E0E703C0E703C0E707C0E70780E70F80E70F00E70F00[m
[32m+[m[32m7E1F007E1E003C1E00183E00003C00007C0000780000780000F80000F00000F00001F000[m
[32m+[m[32m01E00003E00003C00003C0C007C3F00783F00787380F87380F07381F07381E07381E0738[m
[32m+[m[32m3E07383C03F03C03F01800C015277EA21A>37 D<00E00003F00007F8000738000E1C000E[m
[32m+[m[32m1C000E1C000E1C000E38000E39FC0E71FC07F1FC07E1C007C1C00781C00783800F83801F[m
[32m+[m[32mC3803DC70078E70070EE00E07E00E07E00E03C08E03C1CE07E1C70FF1C7FE7F83FC3F80F[m
[32m+[m[32m00E0161E7F9D1A>I<183C3E1E0E0E0E0E0E1C1C38F8F060070F779D1A>I<0038007800F0[m
[32m+[m[32m01E003C007800F000E001C001C0038003800700070007000E000E000E000E000E000E000[m
[32m+[m[32mE000E000E000E000700070007000380038001C001C000E000F00078003C001E000F80078[m
[32m+[m[32m00380D2878A21A>I<6000F00078003C001E000F000780038001C001C000E000E0007000[m
[32m+[m[32m700070003800380038003800380038003800380038003800700070007000E000E001C001[m
[32m+[m[32mC0038007800F001E003C007800F00060000D287CA21A>I<00E00000E00000E00000E000[m
[32m+[m[32m00E000F0E1E0FCE7E07EEFC01FFF0007FC0001F00007FC001FFF007EEFC0FCE7E0F0E1E0[m
[32m+[m[32m00E00000E00000E00000E00000E00013157D991A>I<0030000078000078000078000078[m
[32m+[m[32m000078000078000078000078007FFFF0FFFFF8FFFFF87FFFF00078000078000078000078[m
[32m+[m[32m0000780000780000780000780000300015167E991A>I<183E7E7F3F1F070E0E1CFCF860[m
[32m+[m[32m080D77851A>I<7FFFC0FFFFE0FFFFE07FFFC013047D901A>I<3078FCFC7830060676851A[m
[32m+[m[32m>I<0000C00001E00001E00003E00003C00007C0000780000F80000F00000F00001F0000[m
[32m+[m[32m1E00003E00003C00007C0000780000780000F80000F00001F00001E00003E00003C00003[m
[32m+[m[32mC00007C0000780000F80000F00001F00001E00001E00003E00003C00007C0000780000F8[m
[32m+[m[32m0000F00000F0000060000013277DA21A>I<01F00007FC000FFE001F1F001C0700380380[m
[32m+[m[32m3803807001C07001C07001C0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0[m
[32m+[m[32mE000E0F001E07001C07001C07803C03803803C07801C07001F1F000FFE0007FC0001F000[m
[32m+[m[32m131E7D9D1A>I<00C001C001C003C007C00FC07FC0FDC071C001C001C001C001C001C001[m
[32m+[m[32mC001C001C001C001C001C001C001C001C001C001C001C001C07FFF7FFF7FFF101E7B9D1A[m
[32m+[m[32m>I<03F8000FFE001FFF803C07C07801E07000E0E00070F00070F0007060007000007000[m
[32m+[m[32m00700000E00000E00001C00003C0000780000F00001E00003C0000780000F00003E00007[m
[32m+[m[32mC0000F00001E00703C00707FFFF0FFFFF07FFFF0141E7D9D1A>I<03FC000FFF003FFFC0[m
[32m+[m[32m3C03E07800E07800707800700000700000700000E00001E00007C003FF8003FF0003FFC0[m
[32m+[m[32m0003E00000E0000070000078000038000038600038F00038F00078E000707000E07E03E0[m
[32m+[m[32m3FFFC00FFF0001FC00151E7E9D1A>I<3FFFC07FFFC07FFFC07000007000007000007000[m
[32m+[m[32m0070000070000070000070000071F8007FFE007FFF807E07C07801C03000E00000E00000[m
[32m+[m[32m70000070000070600070F00070F000E0E001E07003C07C0F803FFF000FFE0003F000141E[m
[32m+[m[32m7D9D1A>53 D<007E0001FF8003FFC00781E00F01E01E01E03C00C0380000700000700000[m
[32m+[m[32m700000E1F800E7FE00FFFF00FE0780F803C0F001C0F000E0F000E0E000E0F000E07000E0[m
[32m+[m[32m7000E07001C03801C03C03801E0F800FFF0007FC0001F000131E7D9D1A>I<E00000FFFF[m
[32m+[m[32mF8FFFFF8FFFFF0E000E0E001C00003C0000780000F00000E00001C00001C000038000038[m
[32m+[m[32m0000700000700000E00000E00000E00001C00001C00001C00001C0000380000380000380[m
[32m+[m[32m00038000038000038000038000038000151F7E9E1A>I<01FC0007FF001FFFC01F07C03C[m
[32m+[m[32m01E07800F07000707000707000707800F03800E01E03C00FFF8003FE0007FF001F8FC03C[m
[32m+[m[32m01E07800F0700070E00038E00038E00038E00038F000787000707800F03E03E01FFFC007[m
[32m+[m[32mFF0001FC00151E7E9D1A>I<01F00007FC001FFE003E0F003807807003807001C0E001C0[m
[32m+[m[32mE001C0E001E0E000E0E000E0E001E07001E07803E03C0FE01FFFE00FFCE003F0E00001C0[m
[32m+[m[32m0001C00001C0000380600380F00700F00F00F03E007FFC003FF0000FC000131E7D9D1A>[m
[32m+[m[32mI<3078FCFC78300000000000000000003078FCFC7830061576941A>I<183C7E7E3C1800[m
[32m+[m[32m0000000000000000183C7E7E3E1E0E0E1C3CF8F060071C77941A>I<0000C00003E00007[m
[32m+[m[32mE0000FC0003F80007E0000FC0003F80007E0000FC0003F80007E0000FC0000FC00007E00[m
[32m+[m[32m003F80000FC00007E00003F80000FC00007E00003F80000FC00007E00003E00000C0131A[m
[32m+[m[32m7D9B1A>I<7FFFF0FFFFF8FFFFF87FFFF00000000000000000000000007FFFF0FFFFF8FF[m
[32m+[m[32mFFF87FFFF0150C7E941A>I<600000F80000FC00007E00003F80000FC00007E00003F800[m
[32m+[m[32m00FC00007E00003F80000FC00007E00007E0000FC0003F80007E0000FC0003F80007E000[m
[32m+[m[32m0FC0003F80007E0000FC0000F80000600000131A7D9B1A>I<07FC001FFF007FFF807803[m
[32m+[m[32mC0E001E0F000E0F000E06001E00003C0000F80001F00003C0000780000700000E00000E0[m
[32m+[m[32m0000E00000E00000E00000C00000000000000000000000000000000000000000C00001E0[m
[32m+[m[32m0001E00000C000131E7D9D1A>I<003800007C00007C00006C0000EE0000EE0000EE0000[m
[32m+[m[32mC60000C60001C70001C70001C7000183000383800383800383800383800701C00701C007[m
[32m+[m[32mFFC007FFC00FFFE00E00E00E00E00E00E01E00F01C00707F01FCFF83FE7F01FC171E7F9D[m
[32m+[m[32m1A>65 D<FFFE00FFFF80FFFFC01C03E01C00E01C00F01C00701C00701C00701C00701C00[m
[32m+[m[32mE01C01E01C07C01FFF801FFF801FFFC01C01E01C00F01C00701C00381C00381C00381C00[m
[32m+[m[32m381C00381C00781C00F01C01F0FFFFE0FFFFC0FFFF00151E7E9D1A>I<007C3801FF3807[m
[32m+[m[32mFFF80F83F81E00F81C0078380078380038700038700038700000E00000E00000E00000E0[m
[32m+[m[32m0000E00000E00000E00000E000007000007000387000383800383800381C00701E00F00F[m
[32m+[m[32m83E007FFC001FF80007C00151E7E9D1A>I<7FFE00FFFF007FFF801C07C01C01E01C00F0[m
[32m+[m[32m1C00701C00781C00381C00381C003C1C001C1C001C1C001C1C001C1C001C1C001C1C001C[m
[32m+[m[32m1C001C1C003C1C00381C00381C00781C00701C00F01C01E01C07C07FFFC0FFFF007FFE00[m
[32m+[m[32m161E7F9D1A>I<FFFFF8FFFFF8FFFFF81C00381C00381C00381C00381C00001C00001C00[m
[32m+[m[32m001C0E001C0E001C0E001FFE001FFE001FFE001C0E001C0E001C0E001C00001C00001C00[m
[32m+[m[32m001C001C1C001C1C001C1C001C1C001CFFFFFCFFFFFCFFFFFC161E7E9D1A>I<FFFFF8FF[m
[32m+[m[32mFFF8FFFFF81C00381C00381C00381C00381C00001C00001C00001C07001C07001C07001F[m
[32m+[m[32mFF001FFF001FFF001C07001C07001C07001C00001C00001C00001C00001C00001C00001C[m
[32m+[m[32m00001C0000FFC000FFC000FFC000151E7E9D1A>I<FF83FEFF83FEFF83FE1C00701C0070[m
[32m+[m[32m1C00701C00701C00701C00701C00701C00701C00701C00701FFFF01FFFF01FFFF01C0070[m
[32m+[m[32m1C00701C00701C00701C00701C00701C00701C00701C00701C00701C0070FF83FEFF83FE[m
[32m+[m[32mFF83FE171E7F9D1A>72 D<7FFF00FFFF807FFF0001C00001C00001C00001C00001C00001[m
[32m+[m[32mC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001[m
[32m+[m[32mC00001C00001C00001C00001C00001C00001C0007FFF00FFFF807FFF00111E7C9D1A>I<[m
[32m+[m[32m7F03F8FF87FC7F03F81C01E01C03C01C03801C07001C0F001C1E001C1C001C38001C7800[m
[32m+[m[32m1CF0001CF8001DF8001FDC001F9C001F0E001E0F001E07001C07801C03801C01C01C01C0[m
[32m+[m[32m1C00E01C00E01C00707F00FCFF81FE7F00FC171E7F9D1A>75 D<7FE000FFE0007FE0000E[m
[32m+[m[32m00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E[m
[32m+[m[32m00000E00000E00000E00000E00000E00000E00000E001C0E001C0E001C0E001C0E001C7F[m
[32m+[m[32mFFFCFFFFFC7FFFFC161E7F9D1A>I<FE03FEFF03FEFF03FE1D80701D80701DC0701CC070[m
[32m+[m[32m1CC0701CE0701CE0701C60701C70701C70701C30701C38701C38701C18701C1C701C1C70[m
[32m+[m[32m1C0C701C0E701C0E701C06701C06701C07701C03701C0370FF81F0FF81F0FF80F0171E7F[m
[32m+[m[32m9D1A>78 D<FFFE00FFFF80FFFFC01C03E01C00F01C00701C00781C00381C00381C00381C[m
[32m+[m[32m00381C00781C00701C00F01C03E01FFFC01FFF801FFE001C00001C00001C00001C00001C[m
[32m+[m[32m00001C00001C00001C00001C0000FF8000FF8000FF8000151E7E9D1A>80[m
[32m+[m[32mD<FFFC00FFFF00FFFF801C07C01C01E01C00F01C00701C00701C00701C00701C00F01C01[m
[32m+[m[32mE01C07C01FFF801FFF001FFF801C07C01C01C01C00E01C00E01C00E01C00E01C00E01C00[m
[32m+[m[32mE21C00E71C00E71C00E7FF807EFF807EFF8038181E7F9D1A>82 D<03F8E00FFEE01FFFE0[m
[32m+[m[32m3C07E07801E0F001E0E000E0E000E0E000E0E000007000007800003F80001FF80007FF00[m
[32m+[m[32m007FC00007E00000F0000070000038000038600038E00038E00038E00070F000F0FE01E0[m
[32m+[m[32mFFFFC0EFFF80E1FE00151E7E9D1A>I<7FFFFEFFFFFEFFFFFEE0380EE0380EE0380EE038[m
[32m+[m[32m0E0038000038000038000038000038000038000038000038000038000038000038000038[m
[32m+[m[32m0000380000380000380000380000380000380000380000380003FF8003FF8003FF80171E[m
[32m+[m[32m7F9D1A>I<FF83FEFF83FEFF83FE1C00701C00701C00701C00701C00701C00701C00701C[m
[32m+[m[32m00701C00701C00701C00701C00701C00701C00701C00701C00701C00701C00701C00701C[m
[32m+[m[32m00700E00E00E00E00701C00783C003FF8001FF00007C00171E7F9D1A>I<FFFCFFFCFFFC[m
[32m+[m[32mE000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000[m
[32m+[m[32mE000E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFFCFFFCFFFC[m
[32m+[m[32m0E2776A21A>91 D<600000F00000F00000F800007800007C00003C00003E00001E00001E[m
[32m+[m[32m00001F00000F00000F800007800007C00003C00003C00003E00001E00001F00000F00000[m
[32m+[m[32mF800007800007800007C00003C00003E00001E00001F00000F00000F00000F8000078000[m
[32m+[m[32m07C00003C00003E00001E00001E00000C013277DA21A>I<FFFCFFFCFFFC001C001C001C[m
[32m+[m[32m001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C[m
[32m+[m[32m001C001C001C001C001C001C001C001C001C001C001C001CFFFCFFFCFFFC0E277FA21A>[m
[32m+[m[32mI<7FFFC0FFFFE0FFFFE07FFFC013047D7E1A>95 D<1FF0003FFC007FFE00780F00300700[m
[32m+[m[32m000380000380007F8007FF801FFF803F8380780380700380E00380E00380E00380700780[m
[32m+[m[32m780F803FFFFC1FFDFC07F0FC16157D941A>97 D<7E0000FE00007E00000E00000E00000E[m
[32m+[m[32m00000E00000E00000E00000E3E000EFF800FFFE00FC1F00F80700F00380E00380E001C0E[m
[32m+[m[32m001C0E001C0E001C0E001C0E001C0E001C0F00380F00780F80F00FC1E00FFFC00EFF8006[m
[32m+[m[32m3E00161E7F9D1A>I<00FF8003FFC00FFFE01F01E03C00C0780000700000700000E00000[m
[32m+[m[32mE00000E00000E00000E000007000007000007800703C00701F01F00FFFE003FFC000FE00[m
[32m+[m[32m14157D941A>I<000FC0001FC0000FC00001C00001C00001C00001C00001C00001C001F1[m
[32m+[m[32mC007FDC00FFFC01E0FC03C07C07803C07001C0E001C0E001C0E001C0E001C0E001C0E001[m
[32m+[m[32mC0E001C07003C07003C03807C03E0FC01FFFF807FDFC01F1F8161E7E9D1A>I<01F80007[m
[32m+[m[32mFF000FFF801E07C03C01C07800E07000E0E00070E00070FFFFF0FFFFF0FFFFF0E0000070[m
[32m+[m[32m00007000007800703C00701F01F00FFFE003FF8000FE0014157D941A>I<0007E0001FF0[m
[32m+[m[32m003FF800787800F03000E00000E00000E00000E0007FFFF0FFFFF0FFFFF000E00000E000[m
[32m+[m[32m00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000[m
[32m+[m[32m00E0003FFF807FFFC03FFF80151E7F9D1A>I<01F87C07FFFE0FFFFE1E078C1C03803801[m
[32m+[m[32mC03801C03801C03801C03801C01C03801E07801FFF001FFE0039F8003800003800001C00[m
[32m+[m[32m001FFF801FFFE03FFFF878007C70001CE0000EE0000EE0000EE0000E70001C78003C3E00[m
[32m+[m[32mF81FFFF007FFC001FF0017217F941A>I<7E0000FE00007E00000E00000E00000E00000E[m
[32m+[m[32m00000E00000E00000E3E000EFF800FFFC00FC1C00F80E00F00E00E00E00E00E00E00E00E[m
[32m+[m[32m00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E07FC3FCFFE7FE7FC3FC17[m
[32m+[m[32m1E7F9D1A>I<00C00001E00001E00000C000000000000000000000000000000000000000[m
[32m+[m[32m7FE0007FE0007FE00000E00000E00000E00000E00000E00000E00000E00000E00000E000[m
[32m+[m[32m00E00000E00000E00000E00000E00000E0007FFF80FFFFC07FFF80121F7C9E1A>I<FE00[m
[32m+[m[32m00FE0000FE00000E00000E00000E00000E00000E00000E00000E0FFC0E1FFC0E0FFC0E03[m
[32m+[m[32mC00E07800E0F000E1E000E3C000E78000EFC000FFC000FDE000F8F000E07800E03800E01[m
[32m+[m[32mC00E01E00E00F0FFE3FEFFE3FEFFE3FE171E7F9D1A>107 D<7FE000FFE0007FE00000E0[m
[32m+[m[32m0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0[m
[32m+[m[32m0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0007FFF[m
[32m+[m[32mC0FFFFE07FFFC0131E7D9D1A>I<7CE0E000FFFBF8007FFFF8001F1F1C001E1E1C001E1E[m
[32m+[m[32m1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C1C001C1C[m
[32m+[m[32m1C001C1C1C001C1C1C001C1C1C007F1F1F00FFBFBF807F1F1F00191580941A>I<7E3E00[m
[32m+[m[32mFEFF807FFFC00FC1C00F80E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E0[m
[32m+[m[32m0E00E00E00E00E00E00E00E00E00E07FC3FCFFE7FE7FC3FC17157F941A>I<01F00007FC[m
[32m+[m[32m001FFF003E0F803C07807803C07001C0E000E0E000E0E000E0E000E0E000E0E000E0F001[m
[32m+[m[32mE07001C07803C03C07803E0F801FFF0007FC0001F00013157D941A>I<7E3E00FEFF807F[m
[32m+[m[32mFFE00FC1F00F80700F00380E00380E001C0E001C0E001C0E001C0E001C0E001C0E001C0F[m
[32m+[m[32m00380F00780F80F00FC1E00FFFC00EFF800E3E000E00000E00000E00000E00000E00000E[m
[32m+[m[32m00000E00000E00007FC000FFE0007FC00016207F941A>I<01F8E007FEE00FFFE01E07E0[m
[32m+[m[32m3C03E07801E07001E0E000E0E000E0E000E0E000E0E000E0E000E0E001E07001E07803E0[m
[32m+[m[32m3C03E01E0FE00FFFE007FCE001F0E00000E00000E00000E00000E00000E00000E00000E0[m
[32m+[m[32m0000E0000FFE000FFE000FFE17207E941A>I<7F81F8FF8FFC7F9FFE03FE1E03F80C03E0[m
[32m+[m[32m0003E00003C0000380000380000380000380000380000380000380000380000380000380[m
[32m+[m[32m007FFF00FFFF007FFF0017157F941A>I<07FB801FFF807FFF80780780E00380E00380E0[m
[32m+[m[32m03807800007FC0001FFC0007FE00003F800007806001C0E001C0E001C0F003C0FC0780FF[m
[32m+[m[32mFF00EFFE00E3F80012157C941A>I<018000038000038000038000038000038000038000[m
[32m+[m[32m7FFFE0FFFFE0FFFFE0038000038000038000038000038000038000038000038000038000[m
[32m+[m[32m03800003807003807003807003807001C1E001FFE000FF80003F00141C7F9B1A>I<7E07[m
[32m+[m[32mE0FE0FE07E07E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00[m
[32m+[m[32mE00E00E00E00E00E00E00E01E00F03E007FFFC03FFFE00FCFC17157F941A>I<7F83FCFF[m
[32m+[m[32mC7FE7F83FC0E00E00E00E00E00E00701C00701C00701C003838003838003838001C70001[m
[32m+[m[32mC70001C70000EE0000EE0000EE00007C00007C0000380017157F941A>I<FF83FEFF83FE[m
[32m+[m[32mFF83FE3800383800381C00701C00701C00701C38701C7C701C7C700C6C600EEEE00EEEE0[m
[32m+[m[32m0EEEE00EEEE00EC6E006C6C007C7C00783C00783C017157F941A>I<7FC7F87FCFFC7FC7[m
[32m+[m[32mF80703C003838003C70001EF0000FE00007C00007800003800007C0000EE0001EE0001C7[m
[32m+[m[32m000383800783C00F01C07FC7FCFFC7FE7FC7FC17157F941A>I<7F83FCFFC7FE7F83FC0E[m
[32m+[m[32m00E00E00E00700E00701C00701C00381C003838003C38001C38001C70000E70000E70000[m
[32m+[m[32mE600006600006E00003C00003C00003C0000380000380000380000700000700030F00078[m
[32m+[m[32mE00071E0007FC0003F80001E000017207F941A>I<7FFFF8FFFFF8FFFFF8E000F0E001E0[m
[32m+[m[32mE003C0000780000F00001E00007C0000F80001F00003C0000780000F00381E00383C0038[m
[32m+[m[32m780038FFFFF8FFFFF8FFFFF815157E941A>I<0007E0001FE0003FE000780000F00000E0[m
[32m+[m[32m0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00001E00003C0[m
[32m+[m[32m00FF8000FF0000FF800003C00001E00000E00000E00000E00000E00000E00000E00000E0[m
[32m+[m[32m0000E00000E00000E00000E00000F000007800003FE0001FE00007E013277DA21A>I<7C[m
[32m+[m[32m0000FF0000FF800003C00001E00000E00000E00000E00000E00000E00000E00000E00000[m
[32m+[m[32mE00000E00000E00000E00000F000007800003FE0001FE0003FE000780000F00000E00000[m
[32m+[m[32mE00000E00000E00000E00000E00000E00000E00000E00000E00000E00001E00003C000FF[m
[32m+[m[32m8000FF00007C000013277DA21A>125 D<0703001F87803FCF80F9FE00F0FC0060700011[m
[32m+[m[32m067C9D1A>I E /Fe 50 122 df<00000070000000000000F8000000000000F800000000[m
[32m+[m[32m0000F8000000000000F8000000000000F8000000000000F8000000000000F80000000000[m
[32m+[m[32m00F8000000000000F8000000000000F8000000000000F8000000000000F8000000000000[m
[32m+[m[32mF8000000000000F8000000000000F8000000000000F8000000000000F8000000000000F8[m
[32m+[m[32m000000000000F8000000000000F8000000000000F8000000000000F8000000000000F800[m
[32m+[m[32m0000000000F80000007FFFFFFFFFFFF0FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFF[m
[32m+[m[32mF87FFFFFFFFFFFF0000000F8000000000000F8000000000000F8000000000000F8000000[m
[32m+[m[32m000000F8000000000000F8000000000000F8000000000000F8000000000000F800000000[m
[32m+[m[32m0000F8000000000000F8000000000000F8000000000000F8000000000000F80000000000[m
[32m+[m[32m00F8000000000000F8000000000000F8000000000000F8000000000000F8000000000000[m
[32m+[m[32mF8000000000000F8000000000000F8000000000000F8000000000000F800000000000070[m
[32m+[m[32m00000035377BAC40>43 D<FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF815077F92[m
[32m+[m[32m1B>45 D<000FFC0000007FFF800001FFFFE00003FC0FF00007F003F8000FE001FC000FE0[m
[32m+[m[32m01FC001FC000FE003FC000FF003FC000FF003F80007F007F80007F807F80007F807F8000[m
[32m+[m[32m7F807F80007F80FF80007FC0FF80007FC0FF80007FC0FF80007FC0FF80007FC0FF80007F[m
[32m+[m[32mC0FF80007FC0FF80007FC0FF80007FC0FF80007FC0FF80007FC0FF80007FC0FF80007FC0[m
[32m+[m[32mFF80007FC0FF80007FC0FF80007FC07F80007F807F80007F807F80007F807F80007F803F[m
[32m+[m[32m80007F003FC000FF003FC000FF001FC000FE001FE001FE000FE001FC0007F807F80003FC[m
[32m+[m[32m0FF00001FFFFE000007FFF8000000FFC0000222E7DAD29>48 D<0001E0000003E000000F[m
[32m+[m[32mE000007FE0001FFFE000FFFFE000FFBFE000E03FE000003FE000003FE000003FE000003F[m
[32m+[m[32mE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F[m
[32m+[m[32mE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F[m
[32m+[m[32mE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003FE000003F[m
[32m+[m[32mE000003FE000003FE000003FE000003FE0007FFFFFF07FFFFFF07FFFFFF01C2E7AAD29>[m
[32m+[m[32mI<003FF00001FFFE0007FFFF800FC07FE01E001FF03C000FF87F0007FC7F8007FEFFC007[m
[32m+[m[32mFEFFC003FEFFC003FFFFC003FF7F8003FF7F8003FF3F0003FF000003FF000003FE000003[m
[32m+[m[32mFE000007FC000007FC00000FF800000FF000001FE000001FC000003F8000007F000000FE[m
[32m+[m[32m000001F8000001F0000003E00000078007000F0007001E0007003C000F0078000E00F000[m
[32m+[m[32m0E01C0001E03FFFFFE07FFFFFE0FFFFFFE1FFFFFFE3FFFFFFE7FFFFFFCFFFFFFFCFFFFFF[m
[32m+[m[32mFCFFFFFFFC202E7CAD29>I<000FFC0000007FFF800001F01FE00003C00FF000070007F8[m
[32m+[m[32m000FE007FC000FF007FC001FF007FE001FF807FE001FF807FE001FF807FE001FF807FE00[m
[32m+[m[32m0FF007FC0007E007FC0001800FFC0000000FF80000000FF00000001FE00000003FC00000[m
[32m+[m[32m00FF8000003FFE0000003FFC0000003FFF800000001FF000000007F800000003FC000000[m
[32m+[m[32m03FE00000003FF00000001FF80000001FF800E0001FFC03F8001FFC07FC001FFC07FC001[m
[32m+[m[32mFFC0FFE001FFC0FFE001FFC0FFE001FF80FFE001FF80FFC003FF007F8003FF003F0003FE[m
[32m+[m[32m001F0007FC000FE01FF80007FFFFE00001FFFF8000001FFC0000222E7DAD29>I<000000[m
[32m+[m[32m7800000000F800000001F800000003F800000007F800000007F80000000FF80000001FF8[m
[32m+[m[32m0000003FF80000007FF800000077F8000000F7F8000001E7F8000003C7F800000787F800[m
[32m+[m[32m000707F800000F07F800001E07F800003C07F800007807F800007007F80000F007F80001[m
[32m+[m[32mE007F80003C007F800078007F8000F0007F8000F0007F8001E0007F8003C0007F8007800[m
[32m+[m[32m07F800F00007F800FFFFFFFFF0FFFFFFFFF0FFFFFFFFF000000FF80000000FF80000000F[m
[32m+[m[32mF80000000FF80000000FF80000000FF80000000FF80000000FF80000000FF800000FFFFF[m
[32m+[m[32mF0000FFFFFF0000FFFFFF0242E7EAD29>I<0C0000381FC003F81FFFFFF81FFFFFF01FFF[m
[32m+[m[32mFFE01FFFFFC01FFFFF801FFFFE001FFFFC001FFFF0001FFF00001E0000001E0000001E00[m
[32m+[m[32m00001E0000001E0000001E0000001E0000001E1FF8001E7FFF001FFFFFC01FE01FE01F80[m
[32m+[m[32m0FF01E0007F80C0007FC000003FC000003FE000003FE000003FF000003FF1E0003FF3F00[m
[32m+[m[32m03FF7F8003FFFF8003FFFFC003FFFFC003FEFF8003FEFF8003FE7F0007FC7C0007F83C00[m
[32m+[m[32m0FF01E001FE00FC07FC007FFFF8001FFFE00003FE000202E7CAD29>I<00007F80000007[m
[32m+[m[32mFFF000001FC07800007F001C0000FC001E0001F8007E0003F800FF0007F001FF000FF001[m
[32m+[m[32mFF000FE001FF001FE001FF003FE000FE003FE0007C003FC00000007FC00000007FC00000[m
[32m+[m[32m007FC0000000FFC3FF8000FFC7FFE000FFCFBFF000FFDC03F800FFF801FC00FFF001FE00[m
[32m+[m[32mFFF000FF00FFE000FF80FFE000FF80FFE000FF80FFC000FFC0FFC000FFC0FFC000FFC07F[m
[32m+[m[32mC000FFC07FC000FFC07FC000FFC07FC000FFC03FC000FFC03FC000FF803FC000FF801FE0[m
[32m+[m[32m00FF801FE000FF000FE001FE0007F001FC0003F803F80001FC0FF00000FFFFE000003FFF[m
[32m+[m[32m80000007FC0000222E7DAD29>I<38000000003E000000003FFFFFFFE03FFFFFFFE03FFF[m
[32m+[m[32mFFFFE03FFFFFFFC07FFFFFFF807FFFFFFF007FFFFFFE007FFFFFFC007FFFFFF800780000[m
[32m+[m[32mF800700001F000700003E000F00007C000E000078000E0000F0000E0001F000000003E00[m
[32m+[m[32m0000007C000000007800000000F800000001F000000001F000000003F000000003E00000[m
[32m+[m[32m0007E000000007E00000000FE00000000FE00000001FE00000001FC00000001FC0000000[m
[32m+[m[32m3FC00000003FC00000003FC00000003FC00000003FC00000007FC00000007FC00000007F[m
[32m+[m[32mC00000007FC00000007FC00000007FC00000007FC00000003F800000003F800000000E00[m
[32m+[m[32m000023307CAF29>I<0007FC0000003FFF800000F80FE00001E003F00003C001F8000780[m
[32m+[m[32m00FC000F8000FC000F80007E000F80007E001F80007E001FC0007E001FC0007E001FF000[m
[32m+[m[32m7E001FF800FC001FFE00FC000FFF81F8000FFFE1F00007FFF7E00007FFFFC00003FFFF00[m
[32m+[m[32m0001FFFFC00000FFFFE000007FFFF80001FFFFFC0003F7FFFE000FE1FFFF001F807FFF00[m
[32m+[m[32m3F003FFF803F000FFF807E0003FFC07E0001FFC0FC00007FC0FC00001FC0FC00001FC0FC[m
[32m+[m[32m00000FC0FC00000FC0FC00000F80FE00000F807E00000F007F00001F003F00001E001FC0[m
[32m+[m[32m007C000FF803F80003FFFFE00000FFFF8000001FFC0000222E7DAD29>I<000FFC000000[m
[32m+[m[32m7FFF000001FC0FC00003F003E00007E003F0000FE001F8001FE001FC003FC001FE007FC0[m
[32m+[m[32m00FE007FC000FF00FFC000FF00FFC000FF80FFC000FF80FFC000FF80FFC000FF80FFC000[m
[32m+[m[32mFFC0FFC000FFC0FFC000FFC0FFC000FFC07FC001FFC07FC001FFC03FC001FFC03FC003FF[m
[32m+[m[32mC01FE003FFC00FE007FFC007F00EFFC003FF7CFFC001FFF8FFC0007FF0FF80000000FF80[m
[32m+[m[32m000000FF80000000FF80000000FF000F8001FF001FC001FF003FE001FE003FE001FE003F[m
[32m+[m[32mE003FC003FE003F8003FC007F0001F800FE0001E001FC0000F807F800007FFFE000001FF[m
[32m+[m[32mF80000007FC00000222E7DAD29>I<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F[m
[32m+[m[32m0000000000000000000000000000000000000000001F003F807FC0FFE0FFE0FFE0FFE0FF[m
[32m+[m[32mE07FC03F801F000B207A9F17>I<0000007C0000000000007C000000000000FE00000000[m
[32m+[m[32m0000FE000000000000FE000000000001FF000000000001FF000000000003FF8000000000[m
[32m+[m[32m03FF800000000007FFC00000000007FFC00000000007FFC0000000000FFFE0000000000F[m
[32m+[m[32m7FE0000000001F7FF0000000001E3FF0000000001E3FF0000000003E3FF8000000003C1F[m
[32m+[m[32mF8000000007C1FFC00000000780FFC00000000780FFC00000000F80FFE00000000F007FE[m
[32m+[m[32m00000001F007FF00000001E003FF00000001E003FF00000003C003FF80000003C001FF80[m
[32m+[m[32m000007C001FFC00000078000FFC00000078000FFC000000FFFFFFFE000000FFFFFFFE000[m
[32m+[m[32m001FFFFFFFF000001E00003FF000001E00003FF000003C00001FF800003C00001FF80000[m
[32m+[m[32m7C00001FFC00007800000FFC0000F800000FFE0000F0000007FE0000F0000007FE0001F0[m
[32m+[m[32m000007FF0003F8000003FF00FFFFC001FFFFFEFFFFC001FFFFFEFFFFC001FFFFFE37317D[m
[32m+[m[32mB03E>65 D<FFFFFFFFF80000FFFFFFFFFF0000FFFFFFFFFFE00000FF80003FF00000FF80[m
[32m+[m[32m000FF80000FF800007FC0000FF800007FE0000FF800003FF0000FF800003FF0000FF8000[m
[32m+[m[32m01FF8000FF800001FF8000FF800001FF8000FF800001FF8000FF800001FF8000FF800001[m
[32m+[m[32mFF8000FF800003FF0000FF800003FF0000FF800007FF0000FF800007FE0000FF80000FFC[m
[32m+[m[32m0000FF80001FF80000FF8000FFE00000FFFFFFFF800000FFFFFFFF000000FFFFFFFFE000[m
[32m+[m[32m00FF80001FF80000FF800007FC0000FF800003FF0000FF800001FF0000FF800001FF8000[m
[32m+[m[32mFF800000FFC000FF800000FFC000FF800000FFE000FF800000FFE000FF800000FFE000FF[m
[32m+[m[32m800000FFE000FF800000FFE000FF800000FFE000FF800000FFE000FF800000FFC000FF80[m
[32m+[m[32m0001FFC000FF800001FF8000FF800003FF8000FF800007FF0000FF80000FFE0000FF8000[m
[32m+[m[32m3FFC00FFFFFFFFFFF000FFFFFFFFFFC000FFFFFFFFFE000033317EB03B>I<000003FF80[m
[32m+[m[32m018000003FFFF003800001FFFFFC0F800007FF007F1F80001FF8000FBF80003FE00003FF[m
[32m+[m[32m8000FF800000FF8001FF0000007F8003FE0000003F8007FC0000003F8007FC0000001F80[m
[32m+[m[32m0FF80000001F801FF80000000F801FF00000000F803FF000000007803FF000000007807F[m
[32m+[m[32mF000000007807FE000000007807FE000000000007FE00000000000FFE00000000000FFE0[m
[32m+[m[32m0000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE000[m
[32m+[m[32m00000000FFE00000000000FFE000000000007FE000000000007FE000000000007FE00000[m
[32m+[m[32m0000007FF000000003803FF000000003803FF000000003801FF000000003801FF8000000[m
[32m+[m[32m07800FF8000000070007FC000000070007FC0000000E0003FE0000001E0001FF0000003C[m
[32m+[m[32m0000FF8000007800003FE00000F000001FF80003E0000007FF003F80000001FFFFFE0000[m
[32m+[m[32m00003FFFF80000000003FF80000031317BB03C>I<FFFFFFFFF00000FFFFFFFFFF0000FF[m
[32m+[m[32mFFFFFFFFC00000FFC000FFF00000FFC0000FFC0000FFC00007FE0000FFC00001FF0000FF[m
[32m+[m[32mC00000FF8000FFC000007FC000FFC000007FE000FFC000003FE000FFC000001FF000FFC0[m
[32m+[m[32m00001FF000FFC000001FF800FFC000000FF800FFC000000FFC00FFC000000FFC00FFC000[m
[32m+[m[32m000FFC00FFC000000FFC00FFC000000FFE00FFC000000FFE00FFC000000FFE00FFC00000[m
[32m+[m[32m0FFE00FFC000000FFE00FFC000000FFE00FFC000000FFE00FFC000000FFE00FFC000000F[m
[32m+[m[32mFE00FFC000000FFE00FFC000000FFE00FFC000000FFC00FFC000000FFC00FFC000000FFC[m
[32m+[m[32m00FFC000000FFC00FFC000000FF800FFC000001FF800FFC000001FF800FFC000001FF000[m
[32m+[m[32mFFC000003FE000FFC000003FE000FFC000007FC000FFC00000FF8000FFC00001FF0000FF[m
[32m+[m[32mC00003FE0000FFC0000FFC0000FFC0007FF000FFFFFFFFFFE000FFFFFFFFFF0000FFFFFF[m
[32m+[m[32mFFF0000037317EB03F>I<FFFFFFFFFFF000FFFFFFFFFFF000FFFFFFFFFFF00000FFC000[m
[32m+[m[32m3FF00000FFC00007F80000FFC00003F80000FFC00000F80000FFC00000F80000FFC00000[m
[32m+[m[32m780000FFC00000780000FFC00000380000FFC00000380000FFC00000380000FFC000001C[m
[32m+[m[32m0000FFC003801C0000FFC003801C0000FFC003801C0000FFC00380000000FFC007800000[m
[32m+[m[32m00FFC00780000000FFC00F80000000FFC03F80000000FFFFFF80000000FFFFFF80000000[m
[32m+[m[32mFFFFFF80000000FFC03F80000000FFC00F80000000FFC00780000000FFC00780000000FF[m
[32m+[m[32mC00380000000FFC00380038000FFC00380038000FFC00380038000FFC00000070000FFC0[m
[32m+[m[32m0000070000FFC00000070000FFC00000070000FFC000000F0000FFC000000F0000FFC000[m
[32m+[m[32m001E0000FFC000001E0000FFC000003E0000FFC000007E0000FFC00000FE0000FFC00003[m
[32m+[m[32mFE0000FFC0001FFE00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC0031317EB036>[m
[32m+[m[32mI<FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF000FFC0003FF000FFC00007F800FFC00003[m
[32m+[m[32mF800FFC00000F800FFC00000F800FFC000007800FFC000007800FFC000003800FFC00000[m
[32m+[m[32m3800FFC000003800FFC000001C00FFC000001C00FFC007001C00FFC007001C00FFC00700[m
[32m+[m[32m0000FFC007000000FFC007000000FFC00F000000FFC01F000000FFC03F000000FFFFFF00[m
[32m+[m[32m0000FFFFFF000000FFFFFF000000FFC03F000000FFC01F000000FFC00F000000FFC00700[m
[32m+[m[32m0000FFC007000000FFC007000000FFC007000000FFC007000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC0000000FFFFFFF00000FFFFFFF000[m
[32m+[m[32m00FFFFFFF000002E317EB034>I<000003FF80018000003FFFF003800001FFFFFC0F8000[m
[32m+[m[32m07FF007F1F80001FF8000FBF80003FE00003FF8000FF800000FF8001FF0000007F8003FE[m
[32m+[m[32m0000003F8007FC0000003F8007FC0000001F800FF80000001F801FF80000000F801FF000[m
[32m+[m[32m00000F803FF000000007803FF000000007807FF000000007807FE000000007807FE00000[m
[32m+[m[32m0000007FE00000000000FFE00000000000FFE00000000000FFE00000000000FFE0000000[m
[32m+[m[32m0000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00007FFFF[m
[32m+[m[32mFE7FE00007FFFFFE7FE00007FFFFFE7FE0000001FF807FF0000001FF803FF0000001FF80[m
[32m+[m[32m3FF0000001FF801FF0000001FF801FF8000001FF800FF8000001FF8007FC000001FF8007[m
[32m+[m[32mFC000001FF8003FE000001FF8001FF000001FF8000FF800001FF80003FE00003FF80001F[m
[32m+[m[32mF80007FF800007FF803F3F800001FFFFFE1F8000003FFFF80780000003FFC0018037317B[m
[32m+[m[32mB041>I<FFFFFFC0FFFFFFC0FFFFFFC000FFC00000FFC00000FFC00000FFC00000FFC000[m
[32m+[m[32m00FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC000[m
[32m+[m[32m00FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC000[m
[32m+[m[32m00FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC000[m
[32m+[m[32m00FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC000[m
[32m+[m[32m00FFC00000FFC000FFFFFFC0FFFFFFC0FFFFFFC01A317EB01F>73[m
[32m+[m[32mD<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000[m
[32m+[m[32m0000FFC000007000FFC000007000FFC000007000FFC00000F000FFC00000F000FFC00000[m
[32m+[m[32mE000FFC00000E000FFC00001E000FFC00001E000FFC00003E000FFC00003E000FFC00007[m
[32m+[m[32mE000FFC0000FE000FFC0001FE000FFC0007FC000FFC003FFC0FFFFFFFFFFC0FFFFFFFFFF[m
[32m+[m[32mC0FFFFFFFFFFC02C317EB032>76 D<00000FFE0000000000FFFFE000000007FFFFFC0000[m
[32m+[m[32m001FFC07FF0000003FE000FF800000FF80003FE00001FF00001FF00003FE00000FF80007[m
[32m+[m[32mFC000007FC0007FC000007FC000FF8000003FE001FF8000003FF001FF0000001FF003FF0[m
[32m+[m[32m000001FF803FF0000001FF803FF0000001FF807FE0000000FFC07FE0000000FFC07FE000[m
[32m+[m[32m0000FFC0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE00000[m
[32m+[m[32m00FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000[m
[32m+[m[32mFFE0FFE0000000FFE07FE0000000FFC07FE0000000FFC07FF0000001FFC07FF0000001FF[m
[32m+[m[32mC03FF0000001FF803FF0000001FF801FF8000003FF001FF8000003FF000FFC000007FE00[m
[32m+[m[32m0FFC000007FE0007FE00000FFC0003FF00001FF80001FF80003FF00000FFC0007FE00000[m
[32m+[m[32m3FE000FF8000001FFC07FF00000007FFFFFC00000000FFFFE0000000000FFE0000003331[m
[32m+[m[32m7BB03E>79 D<FFFFFFFFE000FFFFFFFFFE00FFFFFFFFFF8000FFC001FFE000FFC0003FF0[m
[32m+[m[32m00FFC0001FF800FFC0000FFC00FFC0000FFC00FFC00007FE00FFC00007FE00FFC00007FF[m
[32m+[m[32m00FFC00007FF00FFC00007FF00FFC00007FF00FFC00007FF00FFC00007FF00FFC00007FF[m
[32m+[m[32m00FFC00007FE00FFC00007FE00FFC0000FFC00FFC0000FFC00FFC0001FF800FFC0003FF0[m
[32m+[m[32m00FFC001FFE000FFFFFFFF8000FFFFFFFE0000FFFFFFE00000FFC000000000FFC0000000[m
[32m+[m[32m00FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC0000000[m
[32m+[m[32m00FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC0000000[m
[32m+[m[32m00FFC000000000FFC000000000FFC000000000FFC000000000FFC0000000FFFFFFC00000[m
[32m+[m[32mFFFFFFC00000FFFFFFC0000030317EB038>I<FFFFFFFFC0000000FFFFFFFFFC000000FF[m
[32m+[m[32mFFFFFFFF80000000FFC001FFE0000000FFC0003FF0000000FFC0000FFC000000FFC00007[m
[32m+[m[32mFC000000FFC00007FE000000FFC00003FF000000FFC00003FF000000FFC00003FF800000[m
[32m+[m[32mFFC00003FF800000FFC00003FF800000FFC00003FF800000FFC00003FF800000FFC00003[m
[32m+[m[32mFF800000FFC00003FF000000FFC00003FF000000FFC00007FE000000FFC00007FC000000[m
[32m+[m[32mFFC0000FFC000000FFC0003FF0000000FFC001FFE0000000FFFFFFFF80000000FFFFFFFC[m
[32m+[m[32m00000000FFFFFFFE00000000FFC003FF00000000FFC000FFC0000000FFC0007FE0000000[m
[32m+[m[32mFFC0003FE0000000FFC0003FF0000000FFC0001FF0000000FFC0001FF8000000FFC0001F[m
[32m+[m[32mF8000000FFC0001FF8000000FFC0001FF8000000FFC0001FF8000000FFC0001FFC000000[m
[32m+[m[32mFFC0001FFC000000FFC0001FFC000000FFC0001FFC004000FFC0001FFC00E000FFC0001F[m
[32m+[m[32mFE00E000FFC0000FFE00E000FFC0000FFF01C000FFC00007FF83C0FFFFFFC003FFFF80FF[m
[32m+[m[32mFFFFC000FFFF00FFFFFFC0000FFC003B317EB03E>82 D<001FF0018000FFFF038003FFFF[m
[32m+[m[32mC78007F00FFF800FC001FF801F00007F803F00001F803E00000F807E00000F807E000007[m
[32m+[m[32m80FE00000780FE00000780FE00000380FF00000380FF00000380FF80000000FFE0000000[m
[32m+[m[32m7FFC0000007FFFE000007FFFFE00003FFFFFC0001FFFFFF0000FFFFFF80007FFFFFC0003[m
[32m+[m[32mFFFFFE0001FFFFFF00007FFFFF80001FFFFF800000FFFFC0000007FFC0000000FFE00000[m
[32m+[m[32m007FE00000003FE00000001FE06000001FE0E000000FE0E000000FE0E000000FE0E00000[m
[32m+[m[32m0FC0F000000FC0F000000FC0F800001F80FC00001F80FF00003F00FFC0007E00FFFC01FC[m
[32m+[m[32m00F1FFFFF800E03FFFE000C007FF000023317BB02E>I<7FFFFFFFFFFF807FFFFFFFFFFF[m
[32m+[m[32m807FFFFFFFFFFF807FC00FFC00FF807E000FFC001F807C000FFC000F8078000FFC000780[m
[32m+[m[32m78000FFC00078070000FFC000380F0000FFC0003C0F0000FFC0003C0F0000FFC0003C0E0[m
[32m+[m[32m000FFC0001C0E0000FFC0001C0E0000FFC0001C0E0000FFC0001C0E0000FFC0001C00000[m
[32m+[m[32m0FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000F[m
[32m+[m[32mFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC[m
[32m+[m[32m00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00[m
[32m+[m[32m000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC0000[m
[32m+[m[32m0000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC000000[m
[32m+[m[32m00000FFC00000000000FFC000000007FFFFFFF8000007FFFFFFF8000007FFFFFFF800032[m
[32m+[m[32m307DAF39>I<FFFFFFC003FFFFC0FFFFFFC003FFFFC0FFFFFFC003FFFFC000FFC0000007[m
[32m+[m[32mE00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FF[m
[32m+[m[32mC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003[m
[32m+[m[32mC00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FF[m
[32m+[m[32mC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003[m
[32m+[m[32mC00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FF[m
[32m+[m[32mC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003[m
[32m+[m[32mC00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FF[m
[32m+[m[32mC0000003C000007FC00000038000007FC00000078000007FE00000078000003FE000000F[m
[32m+[m[32m0000003FE000000F0000001FF000001E0000000FF800003E00000007FC00007C00000003[m
[32m+[m[32mFE0001F800000000FFC00FE0000000003FFFFF80000000000FFFFE000000000000FFF000[m
[32m+[m[32m00003A317EB03F>I<007FF8000003FFFF000007FFFFC0000FE01FE0001FF007F0001FF0[m
[32m+[m[32m03F8001FF003FC001FF001FE000FE001FE0007C001FE00010001FE00000001FE00000001[m
[32m+[m[32mFE000001FFFE00003FFFFE0001FFF1FE0007FE01FE000FF001FE001FC001FE003F8001FE[m
[32m+[m[32m007F8001FE00FF0001FE00FF0001FE00FF0001FE00FF0001FE00FF0003FE007F8003FE00[m
[32m+[m[32m7FC00EFE003FF03CFF000FFFF87FF807FFF03FF800FF800FF825207E9F28>97[m
[32m+[m[32mD<01F8000000FFF8000000FFF8000000FFF80000000FF800000007F800000007F8000000[m
[32m+[m[32m07F800000007F800000007F800000007F800000007F800000007F800000007F800000007[m
[32m+[m[32mF800000007F800000007F800000007F800000007F80FF00007F87FFE0007F9FFFF8007FF[m
[32m+[m[32mE03FC007FF000FE007FE0007F007F80003F807F80003FC07F80003FC07F80001FE07F800[m
[32m+[m[32m01FE07F80001FE07F80001FF07F80001FF07F80001FF07F80001FF07F80001FF07F80001[m
[32m+[m[32mFF07F80001FF07F80001FF07F80001FE07F80001FE07F80001FE07F80003FC07F80003FC[m
[32m+[m[32m07FC0007F807FE0007F007F7001FE007E3E07FC007C1FFFF0007807FFE0007001FE00028[m
[32m+[m[32m327EB12E>I<0007FF00007FFFE000FFFFF003FC03F807F007FC0FE007FC1FE007FC3FC0[m
[32m+[m[32m07FC3FC003F87FC001F07F8000407F800000FF800000FF800000FF800000FF800000FF80[m
[32m+[m[32m0000FF800000FF800000FF8000007F8000007FC000007FC000003FC0000E3FE0000E1FE0[m
[32m+[m[32m001C0FF0001C07F8007803FF01F000FFFFE0007FFF800007FC001F207D9F25>I<000000[m
[32m+[m[32m07E0000003FFE0000003FFE0000003FFE00000003FE00000001FE00000001FE00000001F[m
[32m+[m[32mE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0[m
[32m+[m[32m0000001FE00000001FE00000001FE0000FF81FE0007FFF1FE001FFFFDFE003FE03FFE007[m
[32m+[m[32mF800FFE00FE0003FE01FE0001FE03FC0001FE03FC0001FE07F80001FE07F80001FE07F80[m
[32m+[m[32m001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF80001FE0FF8000[m
[32m+[m[32m1FE0FF80001FE07F80001FE07F80001FE07F80001FE03FC0001FE03FC0001FE01FC0003F[m
[32m+[m[32mE00FE0007FE007F001FFE003FC07DFF001FFFF9FFF007FFE1FFF000FF01FFF28327DB12E[m
[32m+[m[32m>I<0007FC0000003FFF800000FFFFE00003FC07F00007F801F8000FE000FC001FE0007E[m
[32m+[m[32m003FC0007E003FC0003F007FC0003F007F80003F007F80003F80FF80003F80FF80003F80[m
[32m+[m[32mFFFFFFFF80FFFFFFFF80FFFFFFFF80FF80000000FF80000000FF800000007F800000007F[m
[32m+[m[32m800000003FC00000003FC00003801FC00003801FE00007800FF0000F0007F8001E0003FE[m
[32m+[m[32m00FC0000FFFFF800003FFFE0000003FF000021207E9F26>I<0000FF000007FFC0001FFF[m
[32m+[m[32mE0003FC7F0007F0FF800FE0FF801FE0FF801FC0FF803FC07F003FC03E003FC01C003FC00[m
[32m+[m[32m0003FC000003FC000003FC000003FC000003FC000003FC0000FFFFFC00FFFFFC00FFFFFC[m
[32m+[m[32m0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00[m
[32m+[m[32m0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00[m
[32m+[m[32m0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00007FFFF0[m
[32m+[m[32m007FFFF0007FFFF0001D327EB119>I<001FF803E000FFFF1FF001FFFFBFF807F81FF9F8[m
[32m+[m[32m0FE007F1F80FE007F0F01FC003F8601FC003F8003FC003FC003FC003FC003FC003FC003F[m
[32m+[m[32mC003FC003FC003FC001FC003F8001FC003F8000FE007F0000FE007F00007F81FE00007FF[m
[32m+[m[32mFF800006FFFF00000E1FF800000E000000001E000000001E000000001F000000001F8000[m
[32m+[m[32m00001FFFFFC0000FFFFFF8000FFFFFFE0007FFFFFF0003FFFFFF8007FFFFFFC01FFFFFFF[m
[32m+[m[32mE03F00007FE07E00000FF0FC000007F0FC000003F0FC000003F0FC000003F0FC000003F0[m
[32m+[m[32m7E000007E03F00000FC01FC0003F800FF801FF0007FFFFFE0000FFFFF000001FFF800025[m
[32m+[m[32m2F7E9F29>I<01F800000000FFF800000000FFF800000000FFF8000000000FF800000000[m
[32m+[m[32m07F80000000007F80000000007F80000000007F80000000007F80000000007F800000000[m
[32m+[m[32m07F80000000007F80000000007F80000000007F80000000007F80000000007F800000000[m
[32m+[m[32m07F80000000007F807F8000007F83FFF000007F87FFF800007F8F03FC00007F9C01FE000[m
[32m+[m[32m07FB000FE00007FE000FF00007FE000FF00007FC000FF00007FC000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000[m
[32m+[m[32mFFFFC1FFFF80FFFFC1FFFF80FFFFC1FFFF8029327DB12E>I<01C00007F0000FF8000FF8[m
[32m+[m[32m001FFC001FFC001FFC000FF8000FF80007F00001C0000000000000000000000000000000[m
[32m+[m[32m0000000000000000000001F800FFF800FFF800FFF80007F80007F80007F80007F80007F8[m
[32m+[m[32m0007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F8[m
[32m+[m[32m0007F80007F80007F80007F80007F80007F80007F80007F800FFFF80FFFF80FFFF801133[m
[32m+[m[32m7DB217>I<01F8000000FFF8000000FFF8000000FFF80000000FF800000007F800000007[m
[32m+[m[32mF800000007F800000007F800000007F800000007F800000007F800000007F800000007F8[m
[32m+[m[32m00000007F800000007F800000007F800000007F800000007F8007FFC07F8007FFC07F800[m
[32m+[m[32m7FFC07F8001FC007F8001F0007F8003E0007F800780007F801F00007F803E00007F80780[m
[32m+[m[32m0007F81F000007F83E000007F87C000007F9FE000007FBFF000007FFFF800007FF7FC000[m
[32m+[m[32m07FE3FE00007F81FE00007F01FF00007F00FF80007F007FC0007F003FE0007F001FF0007[m
[32m+[m[32mF000FF0007F000FF8007F0007FC007F0003FE007F0003FF0FFFF80FFFFFFFF80FFFFFFFF[m
[32m+[m[32m80FFFF28327EB12C>107 D<01F800FFF800FFF800FFF8000FF80007F80007F80007F800[m
[32m+[m[32m07F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F800[m
[32m+[m[32m07F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F800[m
[32m+[m[32m07F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F800[m
[32m+[m[32m07F80007F80007F800FFFFC0FFFFC0FFFFC012327DB117>I<03F007F8000FF000FFF03F[m
[32m+[m[32mFF007FFE00FFF07FFF80FFFF00FFF0F03FC1E07F800FF1C01FE3803FC007F3000FE6001F[m
[32m+[m[32mC007F6000FFC001FE007FE000FFC001FE007FC000FF8001FE007FC000FF8001FE007F800[m
[32m+[m[32m0FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001F[m
[32m+[m[32mE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F800[m
[32m+[m[32m0FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001F[m
[32m+[m[32mE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F8000FF0001FE007F800[m
[32m+[m[32m0FF0001FE0FFFFC1FFFF83FFFFFFFFC1FFFF83FFFFFFFFC1FFFF83FFFF40207D9F45>I<[m
[32m+[m[32m03F007F80000FFF03FFF0000FFF07FFF8000FFF0F03FC0000FF1C01FE00007F3000FE000[m
[32m+[m[32m07F6000FF00007FE000FF00007FC000FF00007FC000FF00007F8000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000[m
[32m+[m[32m07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000FFFFC1FFFF80[m
[32m+[m[32mFFFFC1FFFF80FFFFC1FFFF8029207D9F2E>I<0007FE0000003FFFC00000FFFFF00003FC[m
[32m+[m[32m03FC0007F000FE000FE0007F001FC0003F803FC0003FC03FC0003FC07F80001FE07F8000[m
[32m+[m[32m1FE07F80001FE0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001F[m
[32m+[m[32mF0FF80001FF0FF80001FF07F80001FE07F80001FE07F80001FE03FC0003FC03FC0003FC0[m
[32m+[m[32m1FE0007F800FE0007F0007F801FE0003FE07FC0001FFFFF800003FFFC0000007FE000024[m
[32m+[m[32m207E9F29>I<01F80FF000FFF87FFE00FFF9FFFF80FFFFE07FC00FFF001FE007FE000FF0[m
[32m+[m[32m07F80007F807F80007FC07F80003FC07F80003FE07F80003FE07F80001FE07F80001FF07[m
[32m+[m[32mF80001FF07F80001FF07F80001FF07F80001FF07F80001FF07F80001FF07F80001FF07F8[m
[32m+[m[32m0001FE07F80003FE07F80003FE07F80003FC07F80007FC07FC0007F807FE000FF007FF00[m
[32m+[m[32m1FE007FBE07FC007F9FFFF0007F87FFE0007F81FE00007F800000007F800000007F80000[m
[32m+[m[32m0007F800000007F800000007F800000007F800000007F800000007F800000007F8000000[m
[32m+[m[32m07F8000000FFFFC00000FFFFC00000FFFFC00000282E7E9F2E>I<03F03F00FFF07FC0FF[m
[32m+[m[32mF1FFE0FFF1C7F00FF38FF807F70FF807F60FF807FE0FF807FC07F007FC03E007FC008007[m
[32m+[m[32mF8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007[m
[32m+[m[32mF8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80000FF[m
[32m+[m[32mFFE000FFFFE000FFFFE0001D207E9F22>114 D<00FF870007FFEF001FFFFF003F007F00[m
[32m+[m[32m3C001F0078000F00F8000700F8000700F8000700FC000700FF000000FFF800007FFFC000[m
[32m+[m[32m3FFFF0003FFFFC000FFFFE0007FFFF0001FFFF80001FFF800000FFC000001FC060000FC0[m
[32m+[m[32mE00007C0E00007C0F00007C0F8000780F8000F80FE000F00FF803E00FFFFFC00F3FFF800[m
[32m+[m[32mC07FC0001A207D9F21>I<001C0000001C0000001C0000001C0000003C0000003C000000[m
[32m+[m[32m3C0000007C0000007C000000FC000001FC000003FC000007FC00001FFC0000FFFFFF00FF[m
[32m+[m[32mFFFF00FFFFFF0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003[m
[32m+[m[32mFC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003[m
[32m+[m[32mFC01C003FC01C003FC01C003FC01C003FC01C003FC01C003FC01C001FC038001FE038000[m
[32m+[m[32mFF0700007FFE00003FFC000007F0001A2E7FAD20>I<01F80003F000FFF801FFF000FFF8[m
[32m+[m[32m01FFF000FFF801FFF0000FF8001FF00007F8000FF00007F8000FF00007F8000FF00007F8[m
[32m+[m[32m000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8[m
[32m+[m[32m000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8[m
[32m+[m[32m000FF00007F8000FF00007F8000FF00007F8000FF00007F8001FF00007F8001FF00003F8[m
[32m+[m[32m003FF00003F8006FF00001FE03CFF80000FFFF8FFF80007FFF0FFF80000FFC0FFF802920[m
[32m+[m[32m7D9F2E>I<FFFF801FFEFFFF801FFEFFFF801FFE0FF80003E007F80001C007FC0003C003[m
[32m+[m[32mFC00038003FE00078001FE00070001FF000F0000FF000E0000FF801E00007F801C00007F[m
[32m+[m[32mC01C00003FC03800003FC03800001FE07000001FE07000000FF0E000000FF0E000000FF9[m
[32m+[m[32mE0000007F9C0000007FFC0000003FF80000003FF80000001FF00000001FF00000000FE00[m
[32m+[m[32m000000FE000000007C000000007C0000000038000027207E9F2C>I<FFFF00FFFCFFFF00[m
[32m+[m[32mFFFCFFFF00FFFC07F8001F8003FC001E0001FE003C0000FF00780000FF80F000007FC0F0[m
[32m+[m[32m00003FC1E000001FE3C000000FF780000007FF00000007FE00000003FE00000001FE0000[m
[32m+[m[32m0000FF00000001FF80000001FFC0000003FFE00000079FF000000F0FF800001E07F80000[m
[32m+[m[32m3C03FC00007801FE0000F000FF0001E000FF8001E0007FC007E0003FC0FFF801FFFEFFF8[m
[32m+[m[32m01FFFEFFF801FFFE27207E9F2C>120 D<FFFF801FFEFFFF801FFEFFFF801FFE0FF80003[m
[32m+[m[32mE007F80001C007FC0003C003FC00038003FE00078001FE00070001FF000F0000FF000E00[m
[32m+[m[32m00FF801E00007F801C00007FC01C00003FC03800003FC03800001FE07000001FE0700000[m
[32m+[m[32m0FF0E000000FF0E000000FF9E0000007F9C0000007FFC0000003FF80000003FF80000001[m
[32m+[m[32mFF00000001FF00000000FE00000000FE000000007C000000007C00000000380000000038[m
[32m+[m[32m0000000070000000007000000000F000003C00E000007E01E00000FF01C00000FF038000[m
[32m+[m[32m00FF07800000FF0F0000007A3E0000007FFC0000003FF00000000FC0000000272E7E9F2C[m
[32m+[m[32m>I E /Ff 83 125 df<001FC1F00070371800C03E3C01807C3C0380783C070038000700[m
[32m+[m[32m380007003800070038000700380007003800070038000700380007003800FFFFFFC00700[m
[32m+[m[32m380007003800070038000700380007003800070038000700380007003800070038000700[m
[32m+[m[32m380007003800070038000700380007003800070038000700380007003800070038000700[m
[32m+[m[32m3C007FE1FFC01E2380A21C>11 D<001FC0000070200000C0100001803800038078000700[m
[32m+[m[32m78000700300007000000070000000700000007000000070000000700000007000000FFFF[m
[32m+[m[32mF80007007800070038000700380007003800070038000700380007003800070038000700[m
[32m+[m[32m380007003800070038000700380007003800070038000700380007003800070038000700[m
[32m+[m[32m3800070038007FE1FF80192380A21B>I<001FD8000070380000C0780001807800038078[m
[32m+[m[32m000700380007003800070038000700380007003800070038000700380007003800070038[m
[32m+[m[32m00FFFFF80007003800070038000700380007003800070038000700380007003800070038[m
[32m+[m[32m000700380007003800070038000700380007003800070038000700380007003800070038[m
[32m+[m[32m0007003800070038007FF3FF80192380A21B>I<000FC07F00007031C08000E00B004001[m
[32m+[m[32m801E00E003803E01E007003C01E007001C00C007001C000007001C000007001C00000700[m
[32m+[m[32m1C000007001C000007001C000007001C0000FFFFFFFFE007001C01E007001C00E007001C[m
[32m+[m[32m00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00[m
[32m+[m[32mE007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E007001C00E0[m
[32m+[m[32m07001C00E007001C00E07FF1FFCFFE272380A229>I<70F8F8F8F8F8F8F8707070707070[m
[32m+[m[32m707070707070202020202020000000000070F8F8F87005247CA30E>33[m
[32m+[m[32mD<7038F87CFC7EFC7E743A04020402040204020804080410081008201040200F0F7EA218[m
[32m+[m[32m>I<70F8FCFC7404040404080810102040060F7CA20E>39 D<0020004000800100030006[m
[32m+[m[32m0004000C000C00180018003000300030007000600060006000E000E000E000E000E000E0[m
[32m+[m[32m00E000E000E000E000E000E000E000E0006000600060007000300030003000180018000C[m
[32m+[m[32m000C0004000600030001000080004000200B327CA413>I<800040002000100018000C00[m
[32m+[m[32m0400060006000300030001800180018001C000C000C000C000E000E000E000E000E000E0[m
[32m+[m[32m00E000E000E000E000E000E000E000E000C000C000C001C0018001800180030003000600[m
[32m+[m[32m060004000C00180010002000400080000B327DA413>I<00018000000180000001800000[m
[32m+[m[32m018000000180000001800000018000000180000001800000018000000180000001800000[m
[32m+[m[32m018000000180000001800000018000FFFFFFFEFFFFFFFE00018000000180000001800000[m
[32m+[m[32m018000000180000001800000018000000180000001800000018000000180000001800000[m
[32m+[m[32m0180000001800000018000000180001F227D9C26>43 D<70F8FCFC740404040408081010[m
[32m+[m[32m2040060F7C840E>I<FFF8FFF80D02808B10>I<70F8F8F87005057C840E>I<0000800001[m
[32m+[m[32m80000180000300000300000300000600000600000600000C00000C00000C000018000018[m
[32m+[m[32m0000180000300000300000300000600000600000600000C00000C00000C0000180000180[m
[32m+[m[32m000180000180000300000300000300000600000600000600000C00000C00000C00001800[m
[32m+[m[32m00180000180000300000300000300000600000600000600000C00000C00000C000001131[m
[32m+[m[32m7DA418>I<01F000071C000C06001803003803803803807001C07001C07001C07001C0F0[m
[32m+[m[32m01E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F001E0F0[m
[32m+[m[32m01E0F001E07001C07001C07001C07803C03803803803801C07000C0600071C0001F00013[m
[32m+[m[32m227EA018>I<008003800F80F38003800380038003800380038003800380038003800380[m
[32m+[m[32m038003800380038003800380038003800380038003800380038003800380038007C0FFFE[m
[32m+[m[32m0F217CA018>I<03F0000C1C001007002007804003C04003C08003E0F003E0F801E0F801[m
[32m+[m[32mE0F801E02003E00003E00003C00003C0000780000700000E00001C000018000030000060[m
[32m+[m[32m0000C0000180000100000200200400200800201800603000403FFFC07FFFC0FFFFC01321[m
[32m+[m[32m7EA018>I<03F8000C1E00100F002007804007C07807C07803C07807C03807C000078000[m
[32m+[m[32m0780000700000F00000C0000380003F000001C00000F000007800007800003C00003C000[m
[32m+[m[32m03E02003E07003E0F803E0F803E0F003C04003C0400780200780100F000C1C0003F00013[m
[32m+[m[32m227EA018>I<000300000300000700000700000F00001700001700002700006700004700[m
[32m+[m[32m008700018700010700020700060700040700080700080700100700200700200700400700[m
[32m+[m[32mC00700FFFFF8000700000700000700000700000700000700000700000F80007FF015217F[m
[32m+[m[32mA018>I<1000801E07001FFF001FFE001FF80017E0001000001000001000001000001000[m
[32m+[m[32m0010000011F800120C001C07001803801003800001C00001C00001E00001E00001E00001[m
[32m+[m[32mE07001E0F001E0F001E0E001C08001C04003C04003802007001006000C1C0003F0001322[m
[32m+[m[32m7EA018>I<007E0001C1000300800601C00C03C01C03C018018038000038000078000070[m
[32m+[m[32m0000700000F0F800F30C00F40600F40300F80380F801C0F001C0F001E0F001E0F001E0F0[m
[32m+[m[32m01E0F001E07001E07001E07001E03801C03801C01803801C03000C0600070C0001F00013[m
[32m+[m[32m227EA018>I<4000006000007FFFE07FFFC07FFFC0400080C00100800100800200800200[m
[32m+[m[32m00040000080000080000100000200000200000600000400000C00000C00001C00001C000[m
[32m+[m[32m018000038000038000038000038000078000078000078000078000078000078000078000[m
[32m+[m[32m03000013237DA118>I<01F800060E000803001001802001806000C06000C06000C07000[m
[32m+[m[32mC07000C07801803E01003F02001FC4000FF80003F80001FC00067E00083F00100F803007[m
[32m+[m[32mC06003C06000E0C000E0C00060C00060C00060C000606000406000C03000801803000E0E[m
[32m+[m[32m0003F00013227EA018>I<01F000060C000C0600180700380380700380700380F001C0F0[m
[32m+[m[32m01C0F001C0F001E0F001E0F001E0F001E0F001E07001E07003E03803E01805E00C05E006[m
[32m+[m[32m19E003E1E00001C00001C00001C0000380000380300380780700780600700C0020180010[m
[32m+[m[32m30000FC00013227EA018>I<70F8F8F870000000000000000000000070F8F8F87005157C[m
[32m+[m[32m940E>I<70F8F8F870000000000000000000000070F8F8F8780808080810101020404005[m
[32m+[m[32m1F7C940E>I<07E01838201C400E800FF00FF00FF00F000F000E001C00380030006000C0[m
[32m+[m[32m00C000800080018001000100010001000100010000000000000000000000038007C007C0[m
[32m+[m[32m07C0038010237DA217>63 D<0001800000018000000180000003C0000003C0000003C000[m
[32m+[m[32m0005E0000005E0000009F0000008F0000008F00000107800001078000010780000203C00[m
[32m+[m[32m00203C0000203C0000401E0000401E0000C01F0000800F0000800F0001FFFF8001000780[m
[32m+[m[32m01000780020003C0020003C0020003C0040001E0040001E0040001E0080000F01C0000F0[m
[32m+[m[32m3E0001F8FF800FFF20237EA225>65 D<FFFFF8000F800E0007800780078003C0078003E0[m
[32m+[m[32m078001E0078001F0078001F0078001F0078001F0078001F0078001E0078003E0078007C0[m
[32m+[m[32m07800F8007803E0007FFFE0007800780078003C0078001E0078001F0078000F0078000F8[m
[32m+[m[32m078000F8078000F8078000F8078000F8078000F8078001F0078001F0078003E0078007C0[m
[32m+[m[32m0F800F00FFFFFC001D227EA123>I<0007E0100038183000E0063001C00170038000F007[m
[32m+[m[32m0000F00E0000701E0000701C0000303C0000303C0000307C0000107800001078000010F8[m
[32m+[m[32m000000F8000000F8000000F8000000F8000000F8000000F8000000F80000007800000078[m
[32m+[m[32m0000107C0000103C0000103C0000101C0000201E0000200E000040070000400380008001[m
[32m+[m[32mC0010000E0020000381C000007E0001C247DA223>I<FFFFF0000F801E00078007000780[m
[32m+[m[32m0380078001C0078000E0078000F007800078078000780780007C0780003C0780003C0780[m
[32m+[m[32m003C0780003E0780003E0780003E0780003E0780003E0780003E0780003E0780003E0780[m
[32m+[m[32m003E0780003C0780003C0780007C0780007807800078078000F0078000E0078001E00780[m
[32m+[m[32m03C0078007000F801E00FFFFF0001F227EA125>I<FFFFFFC00F8007C0078001C0078000[m
[32m+[m[32mC00780004007800040078000600780002007800020078000200780202007802000078020[m
[32m+[m[32m0007802000078060000780E00007FFE0000780E000078060000780200007802000078020[m
[32m+[m[32m000780200807800008078000080780001007800010078000100780003007800030078000[m
[32m+[m[32m70078000E00F8003E0FFFFFFE01D227EA121>I<FFFFFFC00F8007C0078001C0078000C0[m
[32m+[m[32m078000400780004007800060078000200780002007800020078020200780200007802000[m
[32m+[m[32m07802000078060000780E00007FFE0000780E00007806000078020000780200007802000[m
[32m+[m[32m078020000780000007800000078000000780000007800000078000000780000007800000[m
[32m+[m[32m078000000FC00000FFFE00001B227EA120>I<0007F008003C0C1800E0021801C001B803[m
[32m+[m[32m8000F8070000780F0000381E0000381E0000183C0000183C0000187C0000087800000878[m
[32m+[m[32m000008F8000000F8000000F8000000F8000000F8000000F8000000F8000000F8001FFF78[m
[32m+[m[32m0000F8780000787C0000783C0000783C0000781E0000781E0000780F0000780700007803[m
[32m+[m[32m8000B801C000B800E00318003C0C080007F00020247DA226>I<FFFC3FFF0FC003F00780[m
[32m+[m[32m01E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E00780[m
[32m+[m[32m01E0078001E0078001E0078001E0078001E007FFFFE0078001E0078001E0078001E00780[m
[32m+[m[32m01E0078001E0078001E0078001E0078001E0078001E0078001E0078001E0078001E00780[m
[32m+[m[32m01E0078001E0078001E00FC003F0FFFC3FFF20227EA125>I<FFFC0FC007800780078007[m
[32m+[m[32m800780078007800780078007800780078007800780078007800780078007800780078007[m
[32m+[m[32m80078007800780078007800780078007800FC0FFFC0E227EA112>I<03FFE0001F00000F[m
[32m+[m[32m00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F[m
[32m+[m[32m00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00700F[m
[32m+[m[32m00F80F00F80F00F80E00F01E00401C0020380018700007C00013237EA119>I<FFFC00FF[m
[32m+[m[32m800FC0007C00078000300007800020000780004000078000800007800100000780020000[m
[32m+[m[32m0780040000078008000007801000000780200000078040000007808000000781C0000007[m
[32m+[m[32m83E000000785E000000788F000000790F0000007A078000007C03C000007803C00000780[m
[32m+[m[32m1E000007800F000007800F00000780078000078007C000078003C000078001E000078001[m
[32m+[m[32mE000078000F000078000F8000FC000FC00FFFC07FF8021227EA126>I<FFFC001F80000F[m
[32m+[m[32m00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F[m
[32m+[m[32m00000F00000F00000F00000F00000F00000F00000F00000F00010F00010F00010F00010F[m
[32m+[m[32m00030F00030F00020F00060F00060F001E1F007EFFFFFE18227DA11E>I<FFC00003FF0F[m
[32m+[m[32mC00003F007C00003E005E00005E005E00005E004F00009E004F00009E004F00009E00478[m
[32m+[m[32m0011E004780011E004780011E0043C0021E0043C0021E0043C0021E0041E0041E0041E00[m
[32m+[m[32m41E0040F0081E0040F0081E0040F0081E004078101E004078101E004078101E00403C201[m
[32m+[m[32mE00403C201E00401E401E00401E401E00401E401E00400F801E00400F801E00400F801E0[m
[32m+[m[32m04007001E00E007001E01F007003F0FFE0203FFF28227EA12D>I<FF8007FF07C000F807[m
[32m+[m[32mC0007005E0002004F0002004F0002004780020047C0020043C0020041E0020041F002004[m
[32m+[m[32m0F002004078020040780200403C0200401E0200401E0200400F0200400F8200400782004[m
[32m+[m[32m003C2004003E2004001E2004000F2004000F20040007A0040003E0040003E0040001E004[m
[32m+[m[32m0001E0040000E00E0000601F000060FFE0002020227EA125>I<000FE00000783C0000E0[m
[32m+[m[32m0E0003C00780078003C00F0001E00E0000E01E0000F03C0000783C0000787C00007C7C00[m
[32m+[m[32m007C7800003C7800003CF800003EF800003EF800003EF800003EF800003EF800003EF800[m
[32m+[m[32m003EF800003EF800003E7800003C7C00007C7C00007C3C0000783E0000F81E0000F00F00[m
[32m+[m[32m01E00F0001E0078003C003C0078000E00E0000783C00000FE0001F247DA226>I<FFFFF0[m
[32m+[m[32m000F803C0007800F0007800780078007C0078003C0078003E0078003E0078003E0078003[m
[32m+[m[32mE0078003E0078003E0078003C0078007C00780078007800F0007803C0007FFF000078000[m
[32m+[m[32m000780000007800000078000000780000007800000078000000780000007800000078000[m
[32m+[m[32m00078000000780000007800000078000000FC00000FFFC00001B227EA121>I<FFFFE000[m
[32m+[m[32m000F803C000007800E00000780078000078007C000078003C000078003E000078003E000[m
[32m+[m[32m078003E000078003E000078003E000078003C000078007C000078007800007800E000007[m
[32m+[m[32m803C000007FFE000000780700000078038000007801C000007801E000007800E00000780[m
[32m+[m[32m0F000007800F000007800F000007800F000007800F800007800F800007800F800007800F[m
[32m+[m[32m808007800FC080078007C0800FC003C100FFFC01E2000000007C0021237EA124>82[m
[32m+[m[32mD<03F0200C0C601802603001E07000E0600060E00060E00060E00020E00020E00020F000[m
[32m+[m[32m00F000007800007F00003FF0001FFE000FFF0003FF80003FC00007E00001E00000F00000[m
[32m+[m[32mF0000070800070800070800070800070C00060C00060E000C0F000C0C80180C6070081FC[m
[32m+[m[32m0014247DA21B>I<7FFFFFF87807807860078018400780084007800840078008C007800C[m
[32m+[m[32m800780048007800480078004800780040007800000078000000780000007800000078000[m
[32m+[m[32m000780000007800000078000000780000007800000078000000780000007800000078000[m
[32m+[m[32m00078000000780000007800000078000000780000007800000078000000FC00001FFFE00[m
[32m+[m[32m1E227EA123>I<FFFC07FF0FC000F8078000700780002007800020078000200780002007[m
[32m+[m[32m800020078000200780002007800020078000200780002007800020078000200780002007[m
[32m+[m[32m800020078000200780002007800020078000200780002007800020078000200780002007[m
[32m+[m[32m8000200380004003C0004003C0004001C0008000E000800060010000300600001C080000[m
[32m+[m[32m03F00020237EA125>I<FFF0007FC01F80001F000F00000C000F80000C00078000080007[m
[32m+[m[32m8000080003C000100003C000100003C000100001E000200001E000200001F000600000F0[m
[32m+[m[32m00400000F000400000780080000078008000007C008000003C010000003C010000001E02[m
[32m+[m[32m0000001E020000001E020000000F040000000F040000000F8C0000000788000000078800[m
[32m+[m[32m000003D000000003D000000003F000000001E000000001E000000000C000000000C00000[m
[32m+[m[32m0000C0000022237FA125>I<FFF03FFC03FE1F8007E000F80F0003C000700F0003C00020[m
[32m+[m[32m0F0001E00020078001E00040078001E00040078003F0004003C002F0008003C002F00080[m
[32m+[m[32m03C002F0008003E00478018001E00478010001E00478010001E0083C010000F0083C0200[m
[32m+[m[32m00F0083C020000F0101E02000078101E04000078101E04000078200F0400003C200F0800[m
[32m+[m[32m003C200F0800003C600F8800001E40079000001E40079000001E4007D000001F8003F000[m
[32m+[m[32m000F8003E000000F8003E000000F0001E00000070001C00000070001C00000060000C000[m
[32m+[m[32m0002000080002F237FA132>I<7FF803FF000FE001F80007C000E00003E000C00001E000[m
[32m+[m[32m800001F001800000F80100000078020000007C040000003E040000001E080000001F1000[m
[32m+[m[32m00000FB000000007A000000007C000000003E000000001E000000001F000000003F80000[m
[32m+[m[32m000278000000047C0000000C3E000000081E000000101F000000200F8000002007800000[m
[32m+[m[32m4007C000008003E000008001E000010001F000030000F800070000F8001F8000FC00FFC0[m
[32m+[m[32m03FFC022227FA125>I<FFF0007FC01F80001F000F80000C00078000080007C000080003[m
[32m+[m[32mC000100001E000200001F000200000F000400000F800C000007C008000003C010000003E[m
[32m+[m[32m010000001E020000001F060000000F84000000078800000007D800000003D000000003E0[m
[32m+[m[32m00000001E000000001E000000001E000000001E000000001E000000001E000000001E000[m
[32m+[m[32m000001E000000001E000000001E000000001E000000001E000000003E00000003FFE0000[m
[32m+[m[32m22227FA125>I<7FFFFE7E003E78003C7000786000784000F0C000F0C001E08003C08003[m
[32m+[m[32mC0800780000780000F00001F00001E00003C00003C0000780000780000F00001F00001E0[m
[32m+[m[32m0103C00103C0010780010780030F00031E00021E00023C00063C000E78001EF8007EFFFF[m
[32m+[m[32mFE18227DA11E>I<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0[m
[32m+[m[32mC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07317BA40E>I<0804100820102010[m
[32m+[m[32m402040208040804080408040B85CFC7EFC7E7C3E381C0F0F7AA218>I<FEFE0606060606[m
[32m+[m[32m060606060606060606060606060606060606060606060606060606060606060606060606[m
[32m+[m[32m06060606FEFE07317FA40E>I<1FE000303800780C00780E003007000007000007000007[m
[32m+[m[32m0000FF0007C7001E07003C0700780700700700F00708F00708F00708F00F087817083C23[m
[32m+[m[32m900FC1E015157E9418>97 D<0E0000FE00001E00000E00000E00000E00000E00000E0000[m
[32m+[m[32m0E00000E00000E00000E00000E00000E00000E1F000E61C00E80600F00300E00380E003C[m
[32m+[m[32m0E001C0E001E0E001E0E001E0E001E0E001E0E001E0E001E0E001C0E003C0E00380F0070[m
[32m+[m[32m0C80600C41C0083F0017237FA21B>I<01FE000703000C07801C07803803007800007000[m
[32m+[m[32m00F00000F00000F00000F00000F00000F00000F000007000007800403800401C00800C01[m
[32m+[m[32m0007060001F80012157E9416>I<0000E0000FE00001E00000E00000E00000E00000E000[m
[32m+[m[32m00E00000E00000E00000E00000E00000E00000E001F8E00704E00C02E01C01E03800E078[m
[32m+[m[32m00E07000E0F000E0F000E0F000E0F000E0F000E0F000E0F000E07000E07800E03800E018[m
[32m+[m[32m01E00C02E0070CF001F0FE17237EA21B>I<01FC000707000C03801C01C03801C07801E0[m
[32m+[m[32m7000E0F000E0FFFFE0F00000F00000F00000F00000F000007000007800203800201C0040[m
[32m+[m[32m0E008007030000FC0013157F9416>I<003E0000E30001C7800387800307800700000700[m
[32m+[m[32m00070000070000070000070000070000070000070000FFF8000700000700000700000700[m
[32m+[m[32m000700000700000700000700000700000700000700000700000700000700000700000700[m
[32m+[m[32m000700000700000780007FF000112380A20F>I<00007003F1980E1E181C0E1838070038[m
[32m+[m[32m07007807807807807807807807803807003807001C0E001E1C0033F00020000020000030[m
[32m+[m[32m00003800003FFE001FFFC00FFFE03000F0600030C00018C00018C00018C0001860003060[m
[32m+[m[32m00303800E00E038003FE0015217F9518>I<0E0000FE00001E00000E00000E00000E0000[m
[32m+[m[32m0E00000E00000E00000E00000E00000E00000E00000E00000E1F800E60C00E80E00F0070[m
[32m+[m[32m0F00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070[m
[32m+[m[32m0E00700E00700E00700E0070FFE7FF18237FA21B>I<1C003E003E003E001C0000000000[m
[32m+[m[32m0000000000000000000000000E007E001E000E000E000E000E000E000E000E000E000E00[m
[32m+[m[32m0E000E000E000E000E000E000E000E00FFC00A227FA10E>I<00E001F001F001F000E000[m
[32m+[m[32m000000000000000000000000000000007007F000F0007000700070007000700070007000[m
[32m+[m[32m700070007000700070007000700070007000700070007000700070007000706070F0E0F0[m
[32m+[m[32mC061803F000C2C83A10F>I<0E0000FE00001E00000E00000E00000E00000E00000E0000[m
[32m+[m[32m0E00000E00000E00000E00000E00000E00000E03FC0E01F00E01C00E01800E02000E0400[m
[32m+[m[32m0E08000E10000E38000EF8000F1C000E1E000E0E000E07000E07800E03C00E01C00E01E0[m
[32m+[m[32m0E00F00E00F8FFE3FE17237FA21A>I<0E00FE001E000E000E000E000E000E000E000E00[m
[32m+[m[32m0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00[m
[32m+[m[32m0E000E000E000E000E000E00FFE00B237FA20E>I<0E1FC07F00FE60E183801E807201C0[m
[32m+[m[32m0F003C00E00F003C00E00E003800E00E003800E00E003800E00E003800E00E003800E00E[m
[32m+[m[32m003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E003800E00E00[m
[32m+[m[32m3800E00E003800E00E003800E0FFE3FF8FFE27157F942A>I<0E1F80FE60C01E80E00F00[m
[32m+[m[32m700F00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00[m
[32m+[m[32m700E00700E00700E00700E0070FFE7FF18157F941B>I<01FC000707000C01801800C038[m
[32m+[m[32m00E0700070700070F00078F00078F00078F00078F00078F00078F000787000707800F038[m
[32m+[m[32m00E01C01C00E038007070001FC0015157F9418>I<0E1F00FE61C00E80600F00700E0038[m
[32m+[m[32m0E003C0E003C0E001E0E001E0E001E0E001E0E001E0E001E0E001E0E003C0E003C0E0038[m
[32m+[m[32m0F00700E80E00E41C00E3F000E00000E00000E00000E00000E00000E00000E00000E0000[m
[32m+[m[32m0E0000FFE000171F7F941B>I<01F8200704600E02601C01603801E07800E07800E0F000[m
[32m+[m[32mE0F000E0F000E0F000E0F000E0F000E0F000E07800E07800E03801E01C01E00C02E0070C[m
[32m+[m[32mE001F0E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000FFE171F[m
[32m+[m[32m7E941A>I<0E3CFE461E8F0F0F0F060F000E000E000E000E000E000E000E000E000E000E[m
[32m+[m[32m000E000E000E000F00FFF010157F9413>I<0F8830786018C018C008C008E008F0007F00[m
[32m+[m[32m3FE00FF001F8003C801C800C800CC00CC008E018D0308FC00E157E9413>I<0200020002[m
[32m+[m[32m0002000600060006000E001E003E00FFFC0E000E000E000E000E000E000E000E000E000E[m
[32m+[m[32m000E000E040E040E040E040E040E040708030801F00E1F7F9E13>I<0E0070FE07F01E00[m
[32m+[m[32mF00E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00[m
[32m+[m[32m700E00700E00F00E00F006017003827800FC7F18157F941B>I<FF80FE1E00781E00300E[m
[32m+[m[32m00200E00200700400700400780C003808003808001C10001C10000E20000E20000E20000[m
[32m+[m[32m740000740000380000380000380000100017157F941A>I<FF8FF87F3E01E03C1C01C018[m
[32m+[m[32m1C01E0180E01E0100E0260100E0270100702702007043020070438200384384003881840[m
[32m+[m[32m03881C4001C81C8001D00C8001D00E8000F00F0000E0070000E007000060060000400200[m
[32m+[m[32m20157F9423>I<FF83FE1F00F00E00C007008007810003830001C20000E4000078000078[m
[32m+[m[32m00003800003C00004E00008F000187000103800201C00401E00C00E03E01F0FF03FE1715[m
[32m+[m[32m7F941A>I<FF80FE1E00781E00300E00200E00200700400700400780C003808003808001[m
[32m+[m[32mC10001C10000E20000E20000E20000740000740000380000380000380000100000100000[m
[32m+[m[32m2000002000002000004000F04000F08000F180004300003C0000171F7F941A>I<3FFFC0[m
[32m+[m[32m380380300780200700600E00401C00403C0040380000700000E00001E00001C000038040[m
[32m+[m[32m0700400F00400E00C01C0080380080780180700780FFFF8012157F9416>I<FFFFFE1701[m
[32m+[m[32m808C18>I<FFFFFFFFFFFF3001808C31>I E /Fg 29 122 df<78FCFCFEFE7A0202020204[m
[32m+[m[32m0404080810204007127B8511>44 D<007F000001C1C0000780F0000F0078000E0038001C[m
[32m+[m[32m001C003C001E003C001E003C001E0078000F0078000F0078000F0078000F00F8000F80F8[m
[32m+[m[32m000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8000F80F8[m
[32m+[m[32m000F80F8000F80F8000F80F8000F80F8000F8078000F0078000F0078000F0078000F003C[m
[32m+[m[32m001E003C001E003C001E001C001C000E0038000F0078000780F00001C1C000007F000019[m
[32m+[m[32m297EA71E>48 D<00100000700000F00007F000FFF000F8F00000F00000F00000F00000F0[m
[32m+[m[32m0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0[m
[32m+[m[32m0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0[m
[32m+[m[32m0000F00000F00000F00001F8007FFFE07FFFE013287BA71E>I<007F000003FFC0000701[m
[32m+[m[32mF0000C00F80010007C001C007C003E007E003E003E003E003E001E003E000C007E000000[m
[32m+[m[32m7C0000007C00000078000000F0000000E0000001C0000007000000FF00000001E0000000[m
[32m+[m[32mF0000000780000003C0000003E0000001F0000001F0000001F8000001F8030001F807800[m
[32m+[m[32m1F80FC001F80FC001F80FC001F00F8001F0040003F0040003E0030007C001800F8000F01[m
[32m+[m[32mF00003FFC00000FF000019297EA71E>51 D<1800181F00F01FFFE01FFFC01FFF801FFE00[m
[32m+[m[32m11F800100000100000100000100000100000100000100000100000107E001383801400C0[m
[32m+[m[32m1800E010007000007800007C00003C00003C00003E00003E00003E70003EF8003EF8003E[m
[32m+[m[32mF8003EF8003C80003C40007C4000782000783000F01801E00E07C007FF0001FC0017297D[m
[32m+[m[32mA71E>53 D<007F000001FFC00007C1E0000F0070001E0038003C003C003C001C0078001E[m
[32m+[m[32m0078001E00F8000F00F8000F00F8000F00F8000F00F8000F80F8000F80F8000F80F8000F[m
[32m+[m[32m8078000F8078001F803C001F803C001F801C002F800E004F800700CF8003810F80007E0F[m
[32m+[m[32m8000000F0000000F0000000F0000001E0000001E0000001E0000003C001C003C003E0078[m
[32m+[m[32m003E0070003C00E0001801C0001C0780000FFF000003F8000019297EA71E>57[m
[32m+[m[32mD<00001800000000180000000018000000003C000000003C000000007E000000007E0000[m
[32m+[m[32m00007E00000000BF000000009F000000009F000000010F800000010F800000010F800000[m
[32m+[m[32m0207C000000207C000000207C000000403E000000403E000000C03F000000801F0000008[m
[32m+[m[32m01F000001001F800001000F800001000F8000020007C00003FFFFC00003FFFFC00004000[m
[32m+[m[32m3E000040003E000040003E000080001F000080001F000180001F800100000F800100000F[m
[32m+[m[32m800200000FC002000007C007000007C01F80000FE0FFF000FFFFFFF000FFFF282A7EA92D[m
[32m+[m[32m>65 D<0000FF00100007FFE030001FC07830003E000C7000F80006F001F00003F003E000[m
[32m+[m[32m01F007C00000F00F800000700F800000701F000000303F000000303E000000303E000000[m
[32m+[m[32m107E000000107E000000107C00000000FC00000000FC00000000FC00000000FC00000000[m
[32m+[m[32mFC00000000FC00000000FC00000000FC00000000FC000000007C000000007E000000007E[m
[32m+[m[32m000000103E000000103E000000103F000000101F000000200F800000200F8000006007C0[m
[32m+[m[32m00004003E000008001F000018000F8000300003E000E00001FC038000007FFE0000000FF[m
[32m+[m[32m8000242B7DA92B>67 D<7FFFFFFFF87FFFFFFFF87C007C00F870007C003860007C001840[m
[32m+[m[32m007C000840007C0008C0007C000CC0007C000C80007C000480007C000480007C00048000[m
[32m+[m[32m7C000480007C000400007C000000007C000000007C000000007C000000007C000000007C[m
[32m+[m[32m000000007C000000007C000000007C000000007C000000007C000000007C000000007C00[m
[32m+[m[32m0000007C000000007C000000007C000000007C000000007C000000007C000000007C0000[m
[32m+[m[32m00007C000000007C000000007C000000007C00000000FE0000007FFFFC00007FFFFC0026[m
[32m+[m[32m297EA82B>84 D<FFFE03FFF803FFC0FFFE03FFF803FFC00FE0003F80007E0007C0001F00[m
[32m+[m[32m00180007E0001F0000180003E0000F8000100003E0000F8000100003E0000F8000100001[m
[32m+[m[32mF0000FC000200001F0000FC000200001F0000FC000200000F80013E000400000F80013E0[m
[32m+[m[32m00400000F80013E0004000007C0021F0008000007C0021F0008000007C0021F000800000[m
[32m+[m[32m3E0040F8010000003E0040F8010000003E0040F8010000001F00807C020000001F00807C[m
[32m+[m[32m020000001F00807C020000000F81003E040000000F81003E040000000F81003E04000000[m
[32m+[m[32m0FC3003F0C00000007C2001F0800000007C2001F0800000007E6001F9800000003E4000F[m
[32m+[m[32m9000000003E4000F9000000003F4000F9000000001F80007E000000001F80007E0000000[m
[32m+[m[32m01F80007E000000000F00003C000000000F00003C000000000F00003C000000000600001[m
[32m+[m[32m800000000060000180000000006000018000003A2A7FA83D>87 D<01FC00000E07800010[m
[32m+[m[32m01C0003C00E0003E00F0003E0078001C0078000800780000007800000078000000780000[m
[32m+[m[32m7FF80003E078000F8078001F0078003E0078007C00780078007820F8007820F8007820F8[m
[32m+[m[32m007820F800F8207C00F8203C013C401F063FC007F80F001B1A7E991E>97[m
[32m+[m[32mD<0F000000FF000000FF0000001F0000000F0000000F0000000F0000000F0000000F0000[m
[32m+[m[32m000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F07E0000F1838[m
[32m+[m[32m000F600E000F8007000F8007800F0003C00F0003C00F0001E00F0001E00F0001F00F0001[m
[32m+[m[32mF00F0001F00F0001F00F0001F00F0001F00F0001F00F0001E00F0001E00F0003E00F0003[m
[32m+[m[32mC00F0003800F8007800E800F000E401C000C303800080FC0001C2A7EA921>I<00000F00[m
[32m+[m[32m0000FF000000FF0000001F0000000F0000000F0000000F0000000F0000000F0000000F00[m
[32m+[m[32m00000F0000000F0000000F0000000F0000000F0000000F00003F0F0001C0CF0003802F00[m
[32m+[m[32m0F001F001E001F001C000F003C000F007C000F0078000F0078000F00F8000F00F8000F00[m
[32m+[m[32mF8000F00F8000F00F8000F00F8000F00F8000F0078000F0078000F003C000F003C000F00[m
[32m+[m[32m1E001F000E002F0007004F8001C18FF0007E0FF01C2A7EA921>100[m
[32m+[m[32mD<007E0003C3800700E00E00F01C00703C00783C003878003C78003CF8003CF8003CFFFF[m
[32m+[m[32mFCF80000F80000F80000F80000F800007800007C00003C00043C00041E00080E00100700[m
[32m+[m[32m2001C0C0007F00161A7E991B>I<0000078000FC18400787A1C00E01C1C01E01E0803C00[m
[32m+[m[32mF0003C00F0007C00F8007C00F8007C00F8007C00F8007C00F8003C00F0003C00F0001E01[m
[32m+[m[32mE0000E01C0001F87800010FC0000100000003000000030000000380000001C0000001FFF[m
[32m+[m[32mC0000FFFF80007FFFC001C003E0030000F007000070060000380E0000380E0000380E000[m
[32m+[m[32m0380E0000380700007007000070038000E000C0018000780F00000FF80001A287E9A1E>[m
[32m+[m[32m103 D<0F000000FF000000FF0000001F0000000F0000000F0000000F0000000F0000000F[m
[32m+[m[32m0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F07F0000F[m
[32m+[m[32m1838000F201C000F400E000F400F000F800F000F800F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F000F00FFF0FFF0FFF0FFF01C2A7EA921>I<1E00[m
[32m+[m[32m3F003F003F003F001E000000000000000000000000000000000000000F00FF00FF001F00[m
[32m+[m[32m0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00[m
[32m+[m[32m0F000F00FFF0FFF00C297EA811>I<0F00FF00FF001F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF00C2A7EA911>108[m
[32m+[m[32mD<0781F800FC00FF860E030700FF98070C03800FA0079003C007A003D001E007C003E001[m
[32m+[m[32mE007C003E001E0078003C001E0078003C001E0078003C001E0078003C001E0078003C001[m
[32m+[m[32mE0078003C001E0078003C001E0078003C001E0078003C001E0078003C001E0078003C001[m
[32m+[m[32mE0078003C001E0078003C001E0078003C001E0078003C001E0078003C001E0078003C001[m
[32m+[m[32mE0FFFC7FFE3FFFFFFC7FFE3FFF301A7F9933>I<0F07F000FF183800FF201C001F400E00[m
[32m+[m[32m0F400F000F800F000F800F000F000F000F000F000F000F000F000F000F000F000F000F00[m
[32m+[m[32m0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00[m
[32m+[m[32m0F000F000F000F00FFF0FFF0FFF0FFF01C1A7E9921>I<007F000001C1C000070070000E[m
[32m+[m[32m0038001C001C003C001E003C001E0078000F0078000F00F8000F80F8000F80F8000F80F8[m
[32m+[m[32m000F80F8000F80F8000F80F8000F80F8000F8078000F0078000F003C001E003C001E001E[m
[32m+[m[32m003C000E0038000700700001C1C000007F0000191A7E991E>I<0F07E000FF183800FF60[m
[32m+[m[32m1E000F800F000F8007800F0007C00F0003C00F0003E00F0003E00F0001F00F0001F00F00[m
[32m+[m[32m01F00F0001F00F0001F00F0001F00F0001F00F0001E00F0003E00F0003E00F0003C00F00[m
[32m+[m[32m07800F8007800F800F000F401C000F3078000F0FC0000F0000000F0000000F0000000F00[m
[32m+[m[32m00000F0000000F0000000F0000000F0000000F0000000F000000FFF00000FFF000001C26[m
[32m+[m[32m7E9921>I<0F0F80FF11C0FF23E01F43E00F83E00F81C00F80000F00000F00000F00000F[m
[32m+[m[32m00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F[m
[32m+[m[32m00000F8000FFF800FFF800131A7E9917>114 D<07F8401C06C03001C06000C06000C0E0[m
[32m+[m[32m0040E00040F00040F800007E00007FF0003FFE000FFF0003FF80003FC00007C08001E080[m
[32m+[m[32m01E0C000E0C000E0C000E0E000C0F001C0F80180C4070083F800131A7E9918>I<008000[m
[32m+[m[32m0080000080000080000180000180000180000380000380000780000F80001FFF80FFFF80[m
[32m+[m[32m078000078000078000078000078000078000078000078000078000078000078000078000[m
[32m+[m[32m07800007804007804007804007804007804007804007804003C08001C08000E100003E00[m
[32m+[m[32m12257FA417>I<0F000F00FF00FF00FF00FF001F001F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F[m
[32m+[m[32m000F000F000F000F000F000F000F000F001F000F001F0007002F0003804F8001C08FF000[m
[32m+[m[32m7F0FF01C1A7E9921>I<FFF00FF8FFF00FF80F8003C0078001800780010003C0020003C0[m
[32m+[m[32m020003C0020001E0040001E0040000F0080000F0080000F808000078100000781000003C[m
[32m+[m[32m2000003C2000003E6000001E4000001E4000000F8000000F800000070000000700000007[m
[32m+[m[32m0000000200001D1A7F9920>I<FFF1FFC1FFFFF1FFC1FF0F801E007C0F001E003007801E[m
[32m+[m[32m003007801E002007801F002003C027004003C027004003C027804001E043808001E04380[m
[32m+[m[32m8001E043C08000F081C10000F081E10000F081E100007900E200007900F200007900F200[m
[32m+[m[32m003E007400003E007C00003E007C00001C003800001C003800001C003800000800100028[m
[32m+[m[32m1A7F992B>I<FFF00FF8FFF00FF80F8003C0078001800780010003C0020003C0020003C0[m
[32m+[m[32m020001E0040001E0040000F0080000F0080000F808000078100000781000003C2000003C[m
[32m+[m[32m2000003E6000001E4000001E4000000F8000000F80000007000000070000000700000002[m
[32m+[m[32m0000000200000004000000040000000400000008000070080000F8100000F8100000F820[m
[32m+[m[32m0000F0400000608000001F0000001D267F9920>121 D E /Fh 14[m
[32m+[m[32m118 df<000000180000000000003C0000000000003C0000000000003C0000000000003C[m
[32m+[m[32m0000000000003C0000000000003C0000000000003C0000000000003C0000000000003C00[m
[32m+[m[32m00000000003C0000000000003C0000000000003C0000000000003C0000000000003C0000[m
[32m+[m[32m000000003C0000000000003C0000000000003C0000000000003C0000000000003C000000[m
[32m+[m[32m0000003C0000000000003C0000000000003C0000000000003C0000000000003C00000000[m
[32m+[m[32m00003C0000007FFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFE0000[m
[32m+[m[32m003C0000000000003C0000000000003C0000000000003C0000000000003C000000000000[m
[32m+[m[32m3C0000000000003C0000000000003C0000000000003C0000000000003C0000000000003C[m
[32m+[m[32m0000000000003C0000000000003C0000000000003C0000000000003C0000000000003C00[m
[32m+[m[32m00000000003C0000000000003C0000000000003C0000000000003C0000000000003C0000[m
[32m+[m[32m000000003C0000000000003C0000000000003C0000000000003C00000000000018000000[m
[32m+[m[32m38387BB143>43 D<0000000C000000000000001E000000000000001E000000000000001E[m
[32m+[m[32m000000000000003F000000000000003F000000000000003F000000000000007F80000000[m
[32m+[m[32m0000007F800000000000007F80000000000000FFC0000000000000FFC0000000000000FF[m
[32m+[m[32mC00000000000019FE00000000000019FE00000000000039FF00000000000030FF0000000[m
[32m+[m[32m0000030FF00000000000070FF800000000000607F800000000000607F800000000000C07[m
[32m+[m[32mFC00000000000C03FC00000000000C03FC00000000001803FE00000000001801FE000000[m
[32m+[m[32m00001801FE00000000003000FF00000000003000FF00000000003000FF00000000006000[m
[32m+[m[32m7F800000000060007F8000000000E0007FC000000000C0003FC000000000C0003FC00000[m
[32m+[m[32m0001C0003FE00000000180001FE00000000180001FE00000000300001FF000000003FFFF[m
[32m+[m[32mFFF000000003FFFFFFF000000007FFFFFFF800000006000007F800000006000007F80000[m
[32m+[m[32m000C000003FC0000000C000003FC0000000C000003FC00000018000001FE000000180000[m
[32m+[m[32m01FE00000038000001FF00000030000000FF00000030000000FF00000070000000FF8000[m
[32m+[m[32m00600000007F800000600000007F800000F00000007FC00003F80000007FC0000FFC0000[m
[32m+[m[32m01FFE000FFFFC0003FFFFFC0FFFFC0003FFFFFC0FFFFC0003FFFFFC03A3D7DBC41>65[m
[32m+[m[32mD<000000FFC00060000007FFF8006000003FFFFE00E00000FFC01F01E00003FE000783E0[m
[32m+[m[32m0007F80001E3E0000FE0000077E0001F8000003FE0007F0000001FE000FE0000000FE000[m
[32m+[m[32mFC00000007E001FC00000007E003F800000003E007F800000003E007F000000001E00FF0[m
[32m+[m[32m00000001E01FE000000000E01FE000000000E03FE000000000E03FC000000000E03FC000[m
[32m+[m[32m000000607FC000000000607FC000000000607F8000000000607F800000000000FF800000[m
[32m+[m[32m000000FF800000000000FF800000000000FF800000000000FF800000000000FF80000000[m
[32m+[m[32m0000FF800000000000FF800000000000FF800000000000FF800000000000FF8000000000[m
[32m+[m[32m007F8000000000007F8000000000007FC000000000607FC000000000603FC00000000060[m
[32m+[m[32m3FC000000000603FE000000000601FE000000000601FE000000000C00FF000000000C007[m
[32m+[m[32mF000000000C007F8000000018003F8000000018001FC000000030000FE000000070000FE[m
[32m+[m[32m0000000600007F0000000C00001F8000001800000FE0000030000007F80000E0000003FE[m
[32m+[m[32m0003C0000000FFC01F800000003FFFFE0000000007FFF80000000000FFC00000333D7BBB[m
[32m+[m[32m3E>67 D<FFFFFFC0FFFFFFC0FFFFFFC000FFC000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000[m
[32m+[m[32m007F8000007F800000FFC000FFFFFFC0FFFFFFC0FFFFFFC01A3B7EBA1F>73[m
[32m+[m[32mD<000001FF80000000001FFFF8000000007F00FE00000001FC003F80000007F0000FE000[m
[32m+[m[32m000FC00003F000001F800001F800003F000000FC00007E0000007E0000FE0000007F0001[m
[32m+[m[32mFC0000003F8003F80000001FC007F80000001FE007F00000000FE00FF00000000FF00FE0[m
[32m+[m[32m00000007F01FE000000007F81FE000000007F83FC000000003FC3FC000000003FC3FC000[m
[32m+[m[32m000003FC7FC000000003FE7FC000000003FE7F8000000001FE7F8000000001FEFF800000[m
[32m+[m[32m0001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF80000000[m
[32m+[m[32m01FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001[m
[32m+[m[32mFF7F8000000001FE7F8000000001FE7FC000000003FE7FC000000003FE7FC000000003FE[m
[32m+[m[32m3FC000000003FC3FC000000003FC1FE000000007F81FE000000007F80FE000000007F00F[m
[32m+[m[32mF00000000FF007F0003E000FE007F800FF001FE003F801C1801FC001FC0300403F8000FC[m
[32m+[m[32m0300603F00007E0600307E00003F060030FC00001F860019F800000FC6001BF0000007F3[m
[32m+[m[32m001FE0000001FF003F800000007FC0FE000000001FFFFE0003000001FF8E000300000000[m
[32m+[m[32m0E0003000000000F0003000000000F0007000000000F8007000000000F800F0000000007[m
[32m+[m[32mC01E0000000007F07E0000000007FFFE0000000007FFFE0000000003FFFC0000000003FF[m
[32m+[m[32mFC0000000001FFF80000000001FFF00000000000FFE000000000007FC000000000001F80[m
[32m+[m[32m384D7BBB43>81 D<0003FE00001FFFC0003E01F000F8003801F0003C03E000FC07C001FE[m
[32m+[m[32m0FC001FE0F8001FE1F8001FE3F0000FC3F0000787F0000007F0000007E0000007E000000[m
[32m+[m[32mFE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000[m
[32m+[m[32m7E0000007E0000007F0000003F0000033F0000031F8000031F8000060FC0000607C0000C[m
[32m+[m[32m03E0001801F0003000F800E0007E03C0001FFF000003FC0020287DA626>99[m
[32m+[m[32mD<00000007E000000003FFE000000003FFE000000003FFE0000000001FE00000000007E0[m
[32m+[m[32m0000000007E00000000007E00000000007E00000000007E00000000007E00000000007E0[m
[32m+[m[32m0000000007E00000000007E00000000007E00000000007E00000000007E00000000007E0[m
[32m+[m[32m0000000007E00000000007E00000000007E00000000007E0000001FC07E000000FFF87E0[m
[32m+[m[32m00003F03C7E000007C0067E00001F00037E00003E0001FE00007C0000FE0000FC0000FE0[m
[32m+[m[32m000F800007E0001F800007E0003F000007E0003F000007E0007F000007E0007E000007E0[m
[32m+[m[32m007E000007E000FE000007E000FE000007E000FE000007E000FE000007E000FE000007E0[m
[32m+[m[32m00FE000007E000FE000007E000FE000007E000FE000007E0007E000007E0007E000007E0[m
[32m+[m[32m007F000007E0003F000007E0003F000007E0001F000007E0001F80000FE0000F80000FE0[m
[32m+[m[32m0007C0001FE00003E0001FE00001F00077F80000F800E7FFC0003E0387FFC0001FFF07FF[m
[32m+[m[32mC00003FC07E0002A3D7DBB30>I<03800007C0000FE0001FF0001FF0001FF0000FE00007[m
[32m+[m[32mC00003800000000000000000000000000000000000000000000000000000000000000000[m
[32m+[m[32m000003F000FFF000FFF000FFF0000FF00003F00003F00003F00003F00003F00003F00003[m
[32m+[m[32mF00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003[m
[32m+[m[32mF00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00007F800FF[m
[32m+[m[32mFFC0FFFFC0FFFFC0123A7EB917>105 D<03F0000000FFF0000000FFF0000000FFF00000[m
[32m+[m[32m000FF000000003F000000003F000000003F000000003F000000003F000000003F0000000[m
[32m+[m[32m03F000000003F000000003F000000003F000000003F000000003F000000003F000000003[m
[32m+[m[32mF000000003F000000003F000000003F000000003F000000003F001FFFC03F001FFFC03F0[m
[32m+[m[32m01FFFC03F0007FC003F0007E0003F0007C0003F000700003F000600003F001C00003F003[m
[32m+[m[32m800003F006000003F00C000003F018000003F030000003F078000003F0FC000003F1FE00[m
[32m+[m[32m0003F73E000003FE3F000003F81F800003F00F800003F00FC00003F007E00003F003E000[m
[32m+[m[32m03F003F00003F001F80003F000F80003F000FC0003F0007E0003F0003F0003F0003F0003[m
[32m+[m[32mF0001F8003F0001FC007F8003FF0FFFFC0FFFFFFFFC0FFFFFFFFC0FFFF283C7DBB2D>[m
[32m+[m[32m107 D<01F807F80000FFF81FFE0000FFF8781F0000FFF8E00F800007F98007C00001FB00[m
[32m+[m[32m07E00001FB0003E00001FE0003F00001FC0003F00001FC0003F00001FC0003F00001F800[m
[32m+[m[32m03F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F800[m
[32m+[m[32m03F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F800[m
[32m+[m[32m03F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F800[m
[32m+[m[32m03F00001F80003F00001F80003F00001F80003F00001F80003F00003FC0007F800FFFFF1[m
[32m+[m[32mFFFFE0FFFFF1FFFFE0FFFFF1FFFFE02B267EA530>110 D<0001FE0000000FFFC000003F[m
[32m+[m[32m03F00000F8007C0001F0003E0003E0001F0007C0000F800F800007C00F800007C01F0000[m
[32m+[m[32m03E03F000003F03F000003F03F000003F07E000001F87E000001F87E000001F8FE000001[m
[32m+[m[32mFCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FC[m
[32m+[m[32mFE000001FC7E000001F87E000001F87F000003F83F000003F03F000003F01F000003E01F[m
[32m+[m[32m800007E00F800007C007C0000F8003E0001F0001F0003E0000F8007C00003F03F000000F[m
[32m+[m[32mFFC0000001FE000026287EA62B>I<03F00F80FFF03FE0FFF070F0FFF0C1F807F183F801[m
[32m+[m[32mF303F801F303F801F601F001F6004001FC000001FC000001FC000001FC000001F8000001[m
[32m+[m[32mF8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001[m
[32m+[m[32mF8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001[m
[32m+[m[32mF8000001F8000003FC0000FFFFF800FFFFF800FFFFF8001D267EA522>114[m
[32m+[m[32mD<0030000000300000003000000030000000300000003000000070000000700000007000[m
[32m+[m[32m000070000000F0000000F0000001F0000001F0000003F0000007F000001FFFFF00FFFFFF[m
[32m+[m[32m00FFFFFF0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000[m
[32m+[m[32m0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000[m
[32m+[m[32m0003F0000003F0018003F0018003F0018003F0018003F0018003F0018003F0018003F001[m
[32m+[m[32m8003F0018001F0018001F8030001F8030000F80300007C0600003E0C00001FF8000003F0[m
[32m+[m[32m0019367EB421>116 D<01F80003F000FFF801FFF000FFF801FFF000FFF801FFF00007F8[m
[32m+[m[32m000FF00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8[m
[32m+[m[32m0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8[m
[32m+[m[32m0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8[m
[32m+[m[32m0003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F8[m
[32m+[m[32m0007F00001F80007F00001F80007F00000F8000FF00000F8000FF00000FC001BF000007C[m
[32m+[m[32m001BFC00003E0073FFE0001F81E3FFE0000FFF83FFE00001FE03F0002B277EA530>I[m
[32m+[m[32mE end[m
[32m+[m[32m%%EndProlog[m
[32m+[m[32m%%BeginSetup[m
[32m+[m[32m%%Feature: *Resolution 300dpi[m
[32m+[m[32mTeXDict begin[m
[32m+[m
[32m+[m[32m%%EndSetup[m
[32m+[m[32m%%Page: 1 1[m
[32m+[m[32m1 0 bop 403 251 a Fh(A)29 b(Quic)n(k)g(In)n(tro)r(duction)h(to)g(C++)[m
[32m+[m[32m782 399 y Fg(T)-5 b(om)19 b(Anderson)217 474 y(based)g(on)h(an)g[m
[32m+[m[32m(earlier)f(v)n(ersion)g(written)i(b)n(y)f(W)-5 b(a)n(yne)20[m
[32m+[m[32mb(Christopher)763 590 y(August)g(30,)f(1995)122 777 y[m
[32m+[m[32mFf(\\If)h(programming)e(in)h(P)o(ascal)h(is)f(lik)o(e)f(b)q(eing)i(put)[m
[32m+[m[32mg(in)f(a)h(straigh)o(tjac)o(k)o(et,)f(then)h(program-)122[m
[32m+[m[32m837 y(ming)15 b(in)i(C)g(is)f(lik)o(e)f(pla)o(ying)h(with)h(kniv)o(es,)[m
[32m+[m[32me(and)i(programming)e(in)i(C++)f(is)h(lik)o(e)e(juggling)122[m
[32m+[m[32m898 y(c)o(hainsa)o(ws.")1564 958 y(Anon)o(ymous.)0 1124[m
[32m+[m[32my Fe(1)83 b(In)n(tro)r(duction)0 1234 y Ff(This)14 b(note)h(in)o(tro)q[m
[32m+[m[32m(duces)f(some)f(simple)f(C++)j(concepts)f(and)h(outlines)e(a)i(subset)g[m
[32m+[m[32m(of)f(C++)h(that)f(is)h(easier)0 1294 y(to)h(learn)g(and)g(use)g(than)h[m
[32m+[m[32m(the)e(full)g(language.)22 b(It)16 b(is)f(targeted)h(to)h(those)f(just)[m
[32m+[m[32mg(learning)g(C++,)f(but)h(ev)o(en)0 1354 y(if)i(y)o(ou)g(already)g(kno)[m
[32m+[m[32mo(w)h(the)f(language,)h(y)o(ou)g(migh)o(t)d(\014nd)j(it)f(useful.)27[m
[32m+[m[32mb(I)18 b(assume)g(that)h(y)o(ou)f(are)g(already)0 1414[m
[32m+[m[32my(somewhat)d(familiar)e(with)i(C)g(concepts)g(lik)o(e)f(pro)q(cedures,)[m
[32m+[m[32mh(for)g(lo)q(ops,)h(and)g(p)q(oin)o(ters;)f(these)g(are)g(prett)o(y)0[m
[32m+[m[32m1474 y(easy)h(to)h(pic)o(k)e(up)h(from)g(reading)g(Kernighan)g(and)h[m
[32m+[m[32m(Ritc)o(hie's)d(C)j(b)q(o)q(ok)g([KR80].)73 1535 y(I)i(should)h(admit)e[m
[32m+[m[32m(up)i(fron)o(t)f(that)h(I)f(am)g(quite)f(opinionated)i(ab)q(out)g(C++,)[m
[32m+[m[32mg(if)f(that)h(isn't)f(ob)o(vious)0 1595 y(already)l(.)26[m
[32m+[m[32mb(I)17 b(kno)o(w)h(sev)o(eral)f(C++)h(purists)g(\(an)g(o)o(xymoron)f(p)[m
[32m+[m[32mq(erhaps?\))28 b(who)18 b(violen)o(tly)e(disagree)i(with)0[m
[32m+[m[32m1655 y(some)13 b(of)i(the)f(prescriptions)f(con)o(tained)h(here;)g[m
[32m+[m[32m(most)g(of)g(the)g(ob)s(jections)g(are)g(of)h(the)f(form,)f(\\Ho)o(w)h[m
[32m+[m[32m(could)0 1715 y(y)o(ou)20 b(ha)o(v)o(e)f(p)q(ossibly)h(left)g(out)g[m
[32m+[m[32m(feature)g(X?")g(Ho)o(w)o(ev)o(er,)f(I'v)o(e)f(found)j(from)d(teac)o[m
[32m+[m[32m(hing)i(C++)g(to)h(nearly)0 1775 y(1000)c(undergrads)f(o)o(v)o(er)e[m
[32m+[m[32m(the)h(past)g(sev)o(eral)f(y)o(ears)h(that)g(the)g(subset)h(of)f(C++)g[m
[32m+[m[32m(describ)q(ed)g(here)f(is)h(prett)o(y)0 1836 y(easy)h(to)h(learn,)e[m
[32m+[m[32m(taking)i(only)f(a)g(da)o(y)h(or)f(so)h(for)g(most)e(studen)o(ts)h(to)h[m
[32m+[m[32m(get)f(started.)73 1896 y(The)f(basic)h(premise)d(of)i(this)g(note)g[m
[32m+[m[32m(is)g(that)h(while)e(ob)s(ject-orien)o(ted)g(programming)g(is)h(a)h[m
[32m+[m[32m(useful)e(w)o(a)o(y)0 1956 y(to)20 b(simplify)d(programs,)j(C++)f(is)g[m
[32m+[m[32m(a)h(wildly)f(o)o(v)o(er-complic)o(ated)e(language,)k(with)e(a)h(host)g[m
[32m+[m[32m(of)g(features)0 2016 y(that)g(only)f(v)o(ery)l(,)f(v)o(ery)g(rarely)h[m
[32m+[m[32m(\014nd)g(a)h(legitimate)c(use.)30 b(It's)19 b(not)h(to)q(o)g(far)g[m
[32m+[m[32m(o\013)g(the)f(mark)f(to)h(sa)o(y)h(that)0 2076 y(C++)e(includes)f(ev)o[m
[32m+[m[32m(ery)g(programming)f(language)j(feature)f(ev)o(er)e(imagined,)h(and)h[m
[32m+[m[32m(more.)26 b(The)18 b(natural)0 2137 y(tendency)k(when)i(faced)f(with)g[m
[32m+[m[32m(a)h(new)f(language)i(feature)e(is)g(to)h(try)f(to)g(use)h(it,)g(but)g[m
[32m+[m[32m(in)f(C++)g(this)0 2197 y(approac)o(h)17 b(leads)f(to)h(disaster.)73[m
[32m+[m[32m2257 y(Th)o(us,)h(w)o(e)f(need)g(to)h(carefully)e(distinguish)h(b)q(et)[m
[32m+[m[32mo(w)o(een)g(\(i\))g(those)h(concepts)f(that)h(are)f(fundamen)o(tal)0[m
[32m+[m[32m2317 y(\(e.g.,)i(classes,)g(mem)o(b)q(er)d(functions,)k(constructors\))[m
[32m+[m[32mg({)g(ones)f(that)h(ev)o(ery)o(one)d(should)j(kno)o(w)g(and)f(use,)0[m
[32m+[m[32m2377 y(\(ii\))g(those)i(that)f(are)g(sometimes)d(but)j(rarely)g(useful)[m
[32m+[m[32mf(\(e.g.,)h(single)g(inheritance,)f(templates\))f({)j(ones)0[m
[32m+[m[32m2438 y(that)d(b)q(eginner)f(programmers)f(should)i(b)q(e)f(able)g(to)h[m
[32m+[m[32m(recognize)e(\(in)h(case)h(they)e(run)i(across)g(them\))e(but)0[m
[32m+[m[32m2498 y(a)o(v)o(oid)c(using)i(in)e(their)g(o)o(wn)i(programs,)f(at)g[m
[32m+[m[32m(least)g(for)g(a)g(while,)g(and)g(\(iii\))f(those)h(that)g(are)g(just)g[m
[32m+[m[32m(a)h(bad)f(idea)0 2558 y(and)21 b(should)f(b)q(e)g(a)o(v)o(oided)f(lik)[m
[32m+[m[32mo(e)f(the)i(plague)g(\(e.g.,)g(m)o(ultiple)c(inheritance,)j[m
[32m+[m[32m(exceptions,)h(o)o(v)o(erloading,)0 2618 y(references,)14[m
[32m+[m[32mb(etc\).)963 2795 y(1)p eop[m
[32m+[m[32m%%Page: 2 2[m
[32m+[m[32m2 1 bop 73 50 a Ff(Of)14 b(course,)g(all)f(the)h(items)e(in)h(this)h[m
[32m+[m[32m(last)g(category)g(ha)o(v)o(e)f(their)g(prop)q(onen)o(ts,)i(and)f(I)g[m
[32m+[m[32m(will)f(admit)f(that,)0 110 y(lik)o(e)19 b(the)i(hated)g(goto,)i(it)d[m
[32m+[m[32m(is)h(p)q(ossible)g(to)g(construct)h(cases)f(when)g(the)f(program)h(w)o[m
[32m+[m[32m(ould)g(b)q(e)g(simpler)0 170 y(using)e(a)g(goto)g(or)g(m)o(ultiple)c[m
[32m+[m[32m(inheritance.)27 b(Ho)o(w)o(ev)o(er,)17 b(it)h(is)g(m)o(y)e(b)q(elief)i[m
[32m+[m[32m(that)h(most)e(programmers)g(will)0 230 y(nev)o(er)f(encoun)o(ter)g[m
[32m+[m[32m(suc)o(h)g(cases,)h(and)g(ev)o(en)f(if)g(y)o(ou)h(do,)g(y)o(ou)g(will)e[m
[32m+[m[32m(b)q(e)i(m)o(uc)o(h)e(more)h(lik)o(ely)e(to)j(misuse)e(the)0[m
[32m+[m[32m291 y(feature)f(than)h(prop)q(erly)f(apply)g(it.)20 b(F)l(or)15[m
[32m+[m[32mb(example,)d(I)i(seriously)f(doubt)i(an)g(undergraduate)g(w)o(ould)f[m
[32m+[m[32m(need)0 351 y(an)o(y)h(of)g(the)f(features)h(listed)f(under)h(\(iii\))e[m
[32m+[m[32m(for)i(an)o(y)g(course)f(pro)s(ject)h(\(at)g(least)f(at)i(Berk)o(eley)c[m
[32m+[m[32m(this)i(is)h(true\).)0 411 y(And)e(if)h(y)o(ou)f(\014nd)h(y)o(ourself)f[m
[32m+[m[32m(w)o(an)o(ting)h(to)g(use)g(a)g(feature)f(lik)o(e)f(m)o(ultiple)f[m
[32m+[m[32m(inheritance,)h(then,)i(m)o(y)d(advice)i(is)0 471 y(to)k(fully)f[m
[32m+[m[32m(implem)o(en)o(t)e(y)o(our)j(program)f(b)q(oth)i(with)f(and)h(without)f[m
[32m+[m[32m(the)g(feature,)f(and)i(c)o(ho)q(ose)f(whic)o(hev)o(er)0[m
[32m+[m[32m531 y(is)e(simpler.)k(Sure,)c(this)g(tak)o(es)g(more)f(e\013ort,)i(but)[m
[32m+[m[32mf(prett)o(y)g(so)q(on)i(y)o(ou'll)d(kno)o(w)h(from)f(exp)q(erience)g[m
[32m+[m[32m(when)i(a)0 592 y(feature)g(is)g(useful)g(and)h(when)f(it)g(isn't,)f[m
[32m+[m[32m(and)i(y)o(ou'll)e(b)q(e)h(able)g(to)h(skip)e(the)h(dual)h(implem)o(en)[m
[32m+[m[32mn(tation.)73 652 y(A)e(really)f(go)q(o)q(d)j(w)o(a)o(y)e(to)h(learn)f[m
[32m+[m[32m(a)g(language)i(is)e(to)g(read)h(clear)e(programs)i(in)e(that)i[m
[32m+[m[32m(language.)22 b(I)15 b(ha)o(v)o(e)0 712 y(tried)j(to)h(mak)o(e)e(the)i[m
[32m+[m[32m(Nac)o(hos)f(co)q(de)h(as)h(readable)e(as)i(p)q(ossible;)g(it)e(is)h[m
[32m+[m[32m(written)f(in)g(the)h(subset)g(of)g(C++)0 772 y(describ)q(ed)f(in)g[m
[32m+[m[32m(this)h(note.)28 b(It)18 b(is)g(a)h(go)q(o)q(d)i(idea)d(to)h(lo)q(ok)g[m
[32m+[m[32m(o)o(v)o(er)e(the)i(\014rst)f(assignmen)o(t)g(as)h(y)o(ou)f(read)h[m
[32m+[m[32m(this)0 832 y(in)o(tro)q(duction.)i(Of)16 b(course,)g(y)o(our)g(T)l[m
[32m+[m[32m(A's)g(will)f(answ)o(er)i(an)o(y)f(questions)g(y)o(ou)g(ma)o(y)f(ha)o[m
[32m+[m[32m(v)o(e.)73 892 y(Y)l(ou)23 b(should)h(not)f(need)g(a)g(b)q(o)q(ok)i(on)[m
[32m+[m[32me(C++)g(to)h(do)f(the)g(Nac)o(hos)g(assignmen)o(ts,)g(but)h(if)e(y)o[m
[32m+[m[32m(ou)h(are)0 953 y(curious,)18 b(there)f(is)h(a)g(large)g(selection)f[m
[32m+[m[32m(of)h(C++)g(b)q(o)q(oks)i(at)e(Co)q(dy's)h(and)f(other)g(tec)o(hnical)f[m
[32m+[m[32m(b)q(o)q(okstores.)0 1013 y(\(My)g(wife)f(quips)i(that)f(C++)h(w)o(as)g[m
[32m+[m[32m(in)o(v)o(en)o(ted)d(to)j(mak)o(e)d(researc)o(hers)i(at)g(Bell)f(Labs)j[m
[32m+[m[32m(ric)o(h)d(from)g(writing)0 1073 y("Ho)o(w)21 b(to)g(Program)g(in)f[m
[32m+[m[32m(C++")i(b)q(o)q(oks.\))36 b(Most)21 b(new)g(soft)o(w)o(are)g(dev)o[m
[32m+[m[32m(elopmen)o(t)d(these)i(da)o(ys)h(is)g(b)q(eing)0 1133[m
[32m+[m[32my(done)e(in)f(C++,)i(so)f(it)f(is)h(a)g(prett)o(y)f(go)q(o)q(d)j(b)q[m
[32m+[m[32m(et)d(y)o(ou'll)g(run)h(across)g(it)g(in)f(the)h(future.)28[m
[32m+[m[32mb(In)18 b(m)o(y)f(opinion,)0 1193 y(Stroustrup's)j("The)g(C++)g[m
[32m+[m[32m(Programming)e(Language")k(is)e(b)q(est)g(as)g(a)g(reference)e(man)o[m
[32m+[m[32m(ual,)h(although)0 1254 y(other)14 b(b)q(o)q(oks)i(ma)o(y)c(b)q(e)i[m
[32m+[m[32m(more)f(readable.)20 b(Coplien's)13 b("Adv)m(anced)h(C++)g(Concepts")h[m
[32m+[m[32m(is)e(probably)i(w)o(orth)0 1314 y(reading,)f(but)h(only)f(once)g(y)o[m
[32m+[m[32m(ou'v)o(e)f(b)q(een)h(programming)f(in)h(C++)h(for)f(a)h(couple)f(y)o[m
[32m+[m[32m(ears)g(and)h(are)f(familiar)0 1374 y(with)g(the)f(language)i(basics.)[m
[32m+[m[32m21 b(Also,)13 b(C++)h(is)g(con)o(tin)o(ually)e(ev)o(olving,)h(so)h(b)q[m
[32m+[m[32m(e)g(careful)f(to)h(buy)g(b)q(o)q(oks)i(that)0 1434 y(describ)q(e)g[m
[32m+[m[32m(the)g(latest)g(v)o(ersion)f(\(curren)o(tly)g(3.0,)h(I)g(think!\).)0[m
[32m+[m[32m1601 y Fe(2)83 b(C)27 b(in)g(C++)0 1710 y Ff(T)l(o)17[m
[32m+[m[32mb(a)g(large)f(exten)o(t,)f(C++)i(is)f(a)h(sup)q(erset)g(of)f(C,)g(and)i[m
[32m+[m[32m(most)d(carefully)g(written)h(ANSI)f(C)i(will)e(compile)0[m
[32m+[m[32m1770 y(as)i(C++.)k(There)16 b(are)g(a)h(few)f(ma)s(jor)f(ca)o(v)o(eats)[m
[32m+[m[32mh(though:)60 1884 y(1.)24 b(All)19 b(functions)h(m)o(ust)f(b)q(e)i[m
[32m+[m[32m(declared)e(b)q(efore)h(they)g(are)h(used,)g(rather)f(than)h[m
[32m+[m[32m(defaulting)f(to)h(t)o(yp)q(e)122 1945 y Fd(int)p Ff(.)60[m
[32m+[m[32m2046 y(2.)j(All)15 b(function)h(declarations)g(and)h(de\014nition)f[m
[32m+[m[32m(headers)g(m)o(ust)f(use)h(new-st)o(yle)g(declarations,)f(e.g.,)122[m
[32m+[m[32m2181 y Fd(extern)23 b(int)i(foo\(int)e(a,)i(char*)f(b\);)122[m
[32m+[m[32m2316 y Ff(The)16 b(form)f Fd(extern)23 b(int)i(foo\(\);)14[m
[32m+[m[32mb Ff(means)h(that)h Fd(foo)f Ff(tak)o(es)g Fc(no)i Ff(argumen)o(ts,)d[m
[32m+[m[32m(rather)i(than)h(argu-)122 2376 y(men)o(ts)d(of)i(an)g(unsp)q[m
[32m+[m[32m(eci\014ed)f(t)o(yp)q(e)g(and)i(n)o(um)o(b)q(er.)i(In)c(fact,)h(some)e[m
[32m+[m[32m(advise)i(using)g(a)g(C++)f(compiler)122 2437 y(ev)o(en)c(on)h(normal)g[m
[32m+[m[32m(C)g(co)q(de,)g(b)q(ecause)h(it)e(will)g(catc)o(h)h(errors)g(lik)o(e)e[m
[32m+[m[32m(misused)h(functions)h(that)h(a)f(normal)122 2497 y(C)k(compiler)e[m
[32m+[m[32m(will)h(let)h(slide.)60 2598 y(3.)24 b(If)13 b(y)o(ou)h(need)f(to)i[m
[32m+[m[32m(link)d(C)i(ob)s(ject)g(\014les)f(together)h(with)g(C++,)g(when)g(y)o[m
[32m+[m[32m(ou)f(declare)g(the)h(C)g(functions)122 2659 y(for)i(the)g(C++)h[m
[32m+[m[32m(\014les,)e(they)h(m)o(ust)f(b)q(e)h(done)h(lik)o(e)963[m
[32m+[m[32m2795 y(2)p eop[m
[32m+[m[32m%%Page: 3 3[m
[32m+[m[32m3 2 bop 122 50 a Fd(extern)23 b("C")i(int)f(foo\(int)f(a,)i(char*)f[m
[32m+[m[32m(b\);)122 185 y Ff(Otherwise)16 b(the)g(C++)g(compiler)e(will)h(alter)h[m
[32m+[m[32m(the)g(name)f(in)h(a)g(strange)h(manner.)60 286 y(4.)24[m
[32m+[m[32mb(There)19 b(are)g(a)g(n)o(um)o(b)q(er)f(of)h(new)g(k)o(eyw)o(ords,)g[m
[32m+[m[32m(whic)o(h)f(y)o(ou)h(ma)o(y)f(not)i(use)f(as)g(iden)o(ti\014ers)f(|)h[m
[32m+[m[32m(some)122 347 y(common)14 b(ones)j(are)f Fd(new)p Ff(,)f[m
[32m+[m[32mFd(delete)p Ff(,)e Fd(const)p Ff(,)h(and)j Fd(class)p[m
[32m+[m[32mFf(.)0 513 y Fe(3)83 b(Basic)26 b(Concepts)0 623 y Ff(Before)18[m
[32m+[m[32mb(giving)h(examples)e(of)i(C++)h(features,)f(I)f(will)g(\014rst)i(go)g[m
[32m+[m[32m(o)o(v)o(er)e(some)g(of)h(the)g(basic)g(concepts)g(of)0[m
[32m+[m[32m683 y(ob)s(ject-orien)o(ted)i(languages.)41 b(If)23 b(this)f[m
[32m+[m[32m(discussion)h(at)f(\014rst)h(seems)e(a)i(bit)f(obscure,)i(it)e(will)f[m
[32m+[m[32m(b)q(ecome)0 743 y(clearer)15 b(when)i(w)o(e)e(get)i(to)f(some)f[m
[32m+[m[32m(examples.)60 857 y(1.)24 b Fb(Classes)18 b(and)g(ob)s(jects)p[m
[32m+[m[32mFf(.)i(A)15 b(class)h(de\014nes)f(a)h(set)f(of)g(ob)s(jects,)g(or)h[m
[32m+[m[32mFc(instanc)n(es)g Ff(of)g(that)f(class.)21 b(One)122[m
[32m+[m[32m917 y(declares)13 b(a)h(class)f(in)g(a)h(w)o(a)o(y)f(similar)f(to)i(a)g[m
[32m+[m[32m(C)f Fc(structur)n(e)p Ff(,)h(and)g(then)f(creates)g(ob)s(jects)h(of)f[m
[32m+[m[32m(that)h(class.)122 977 y(A)f(class)h(de\014nes)g(t)o(w)o(o)f(asp)q[m
[32m+[m[32m(ects)h(of)g(the)g(ob)s(jects:)19 b(the)14 b Fc(data)f[m
[32m+[m[32mFf(they)h(con)o(tain,)f(and)h(the)g Fc(b)n(ehavior)g[m
[32m+[m[32mFf(they)122 1038 y(ha)o(v)o(e.)60 1139 y(2.)24 b Fb(Mem)n(b)r(er)15[m
[32m+[m[32mb(functions)p Ff(.)21 b(These)14 b(are)h(functions)g(whic)o(h)f(are)g[m
[32m+[m[32m(considered)h(part)g(of)g(the)f(ob)s(ject)g(and)122 1200[m
[32m+[m[32my(are)i(declared)f(in)g(the)h(class)g(de\014nition.)21[m
[32m+[m[32mb(They)15 b(are)h(often)g(referred)f(to)h(as)h Fc(metho)n(ds)f[m
[32m+[m[32mFf(of)g(the)f(class.)122 1260 y(In)h(addition)g(to)h(mem)o(b)q(er)c[m
[32m+[m[32m(functions,)j(a)g(class's)g(b)q(eha)o(vior)h(is)f(also)g(de\014ned)h(b)[m
[32m+[m[32mo(y:)143 1361 y(\(a\))24 b(What)16 b(to)f(do)g(when)g(y)o(ou)g(create)f[m
[32m+[m[32m(a)h(new)g(ob)s(ject)f(\(the)g Fb(constructor)h Ff(for)g(that)g(ob)s[m
[32m+[m[32m(ject\))f({)h(in)229 1422 y(other)i(w)o(ords,)f(initialize)e(the)i(ob)s[m
[32m+[m[32m(ject's)f(data.)140 1503 y(\(b\))24 b(What)17 b(to)g(do)f(when)h(y)o[m
[32m+[m[32m(ou)f(delete)f(an)i(ob)s(ject)e(\(the)h Fb(destructor)g[m
[32m+[m[32mFf(for)g(that)h(ob)s(ject\).)60 1604 y(3.)24 b Fb(Priv)m(ate)19[m
[32m+[m[32mb(vs.)29 b(public)19 b(mem)n(b)r(ers)p Ff(.)j(A)c(public)e(mem)o(b)q[m
[32m+[m[32m(er)f(of)i(a)h(class)g(is)g(one)f(that)h(can)g(b)q(e)g(read)122[m
[32m+[m[32m1664 y(or)j(written)f(b)o(y)g(an)o(yb)q(o)q(dy)l(,)i(in)e(the)g(case)g[m
[32m+[m[32m(of)h(a)g(data)g(mem)o(b)q(er,)d(or)j(called)e(b)o(y)h(an)o(yb)q(o)q[m
[32m+[m[32m(dy)l(,)i(in)e(the)122 1725 y(case)d(of)g(a)g(mem)o(b)q(er)d(function.)[m
[32m+[m[32m22 b(A)17 b(priv)m(ate)f(mem)o(b)q(er)e(can)j(only)f(b)q(e)h(read,)g[m
[32m+[m[32m(written,)f(or)h(called)f(b)o(y)122 1785 y(a)h(mem)n(b)q(er)d(function)[m
[32m+[m[32mi(of)g(that)h(class.)73 1899 y(Classes)23 b(are)g(used)g(for)f(t)o(w)o[m
[32m+[m[32m(o)h(main)e(reasons:)35 b(\(1\))23 b(it)f(mak)o(es)f(it)h(m)o(uc)o(h)e[m
[32m+[m[32m(easier)j(to)f(organize)h(y)o(our)0 1959 y(programs)16[m
[32m+[m[32mb(if)f(y)o(ou)h(can)g(group)g(together)g(data)h(with)e(the)h(functions)[m
[32m+[m[32mg(that)g(manipulate)e(that)i(data,)g(and)0 2019 y(\(2\))h(the)g(use)g[m
[32m+[m[32m(of)h(priv)m(ate)e(mem)o(b)q(ers)e(mak)o(es)i(it)g(p)q(ossible)h(to)h[m
[32m+[m[32m(do)f Fc(information)h(hiding)p Ff(,)g(so)f(that)h(y)o(ou)f(can)0[m
[32m+[m[32m2080 y(b)q(e)f(more)f(con\014den)o(t)h(ab)q(out)i(the)e(w)o(a)o(y)g[m
[32m+[m[32m(information)f(\015o)o(ws)i(in)f(y)o(our)g(programs.)0[m
[32m+[m[32m2224 y Fa(3.1)70 b(Classes)0 2316 y Ff(C++)18 b(classes)h(similar)d(to)[m
[32m+[m[32mj(C)f(structures)g(in)g(man)o(y)f(w)o(a)o(ys.)27 b(In)18[m
[32m+[m[32mb(fact,)h(a)f(C++)h(struct)f(is)g(really)f(a)i(class)0[m
[32m+[m[32m2377 y(that)h(has)g(only)f(public)g(data)h(mem)o(b)q(ers.)28[m
[32m+[m[32mb(In)19 b(the)g(follo)o(wing)g(explanation)h(of)f(ho)o(w)h(classes)g(w)[m
[32m+[m[32mo(ork,)f(w)o(e)0 2437 y(will)c(use)h(a)h(stac)o(k)f(class)g(as)h(an)g[m
[32m+[m[32m(example.)60 2551 y(1.)24 b Fb(Mem)n(b)r(er)19 b(functions.)27[m
[32m+[m[32mb Ff(Here)17 b(is)h(a)g(\(partial\))g(example)e(of)j(a)f(class)h(with)f[m
[32m+[m[32m(a)g(mem)o(b)q(er)d(function)122 2611 y(and)i(some)e(data)i(mem)o(b)q[m
[32m+[m[32m(ers:)963 2795 y(3)p eop[m
[32m+[m[32m%%Page: 4 4[m
[32m+[m[32m4 3 bop 122 50 a Fd(class)24 b(Stack)g({)173 110 y(public:)224[m
[32m+[m[32m170 y(void)h(Push\(int)d(value\);)h(//)i(Push)f(an)h(integer,)e[m
[32m+[m[32m(checking)g(for)h(overflow.)224 230 y(int)h(top;)255[m
[32m+[m[32mb(//)25 b(Index)f(of)g(the)h(top)g(of)f(the)h(stack.)224[m
[32m+[m[32m291 y(int)g(stack[10];)99 b(//)25 b(The)f(elements)f(of)i(the)f(stack.)[m
[32m+[m[32m122 351 y(};)122 471 y(void)122 531 y(Stack::Pus)o(h\(i)o(nt)e(value\))[m
[32m+[m[32mh({)224 592 y(ASSERT\(top)f(<)k(10\);)e(//)h(stack)f(should)f(never)h[m
[32m+[m[32m(overflow)224 652 y(stack[top++)o(])f(=)i(value;)122[m
[32m+[m[32m712 y(})122 834 y Ff(This)20 b(class)h(has)g(t)o(w)o(o)f(data)h(mem)n[m
[32m+[m[32m(b)q(ers,)d Fd(top)i Ff(and)g Fd(stack)p Ff(,)f(and)i(one)f(mem)o(b)q[m
[32m+[m[32m(er)d(function,)k Fd(Push)p Ff(.)122 895 y(The)e(notation)h[m
[32m+[m[32mFc(class)p Ff(::)p Fc(function)g Ff(denotes)g(the)f Fc(function)h[m
[32m+[m[32mFf(mem)o(b)q(er)c(of)k(the)e(class)i Fc(class)p Ff(.)30[m
[32m+[m[32mb(\(In)19 b(the)122 955 y(st)o(yle)13 b(w)o(e)i(use,)f(most)g(function)[m
[32m+[m[32mh(names)f(are)g(capitalized.\))20 b(The)14 b(function)h(is)f(de\014ned)[m
[32m+[m[32mh(b)q(eneath)g(it.)122 1036 y(As)d(an)h(aside,)g(note)f(that)h(w)o(e)f[m
[32m+[m[32m(use)h(a)g(call)e(to)i Fd(ASSERT)d Ff(to)j(c)o(hec)o(k)e(that)i(the)f[m
[32m+[m[32m(stac)o(k)g(hasn't)h(o)o(v)o(er\015o)o(w)o(ed;)122 1096[m
[32m+[m[32my(ASSER)l(T)21 b(drops)h(in)o(to)f(the)g(debugger)g(if)g(the)g[m
[32m+[m[32m(condition)g(is)f(false.)36 b(It)21 b(is)g(an)g(extremely)d(go)q(o)q(d)[m
[32m+[m[32m122 1156 y(idea)g(for)h(y)o(ou)f(to)h(use)f(ASSER)l(T)g(statemen)o(ts)f[m
[32m+[m[32m(lib)q(erally)g(throughout)j(y)o(our)e(co)q(de)h(to)f(do)q(cumen)o(t)[m
[32m+[m[32m122 1216 y(assumptions)g(made)f(b)o(y)h(y)o(our)h(implem)o(e)o(n)o[m
[32m+[m[32m(tation.)25 b(Better)17 b(to)i(catc)o(h)f(errors)h(automatically)d(via)[m
[32m+[m[32m122 1276 y(ASSER)l(Ts)g(than)g(to)g(let)f(them)f(go)j(b)o(y)e(and)h(ha)[m
[32m+[m[32mo(v)o(e)f(y)o(our)h(program)f(o)o(v)o(erwrite)g(random)g(lo)q(cations.)[m
[32m+[m[32m122 1357 y(In)i(actual)g(usage,)h(the)f(de\014nition)g(of)h[m
[32m+[m[32mFd(class)24 b(Stack)15 b Ff(w)o(ould)j(t)o(ypically)d(go)j(in)f(the)g[m
[32m+[m[32m(\014le)g Fd(stack.h)122 1418 y Ff(and)k(the)e(de\014nitions)h(of)g[m
[32m+[m[32m(the)g(mem)o(b)q(er)d(functions,)k(lik)o(e)d Fd(Stack::Pus)o(h)p[m
[32m+[m[32mFf(,)f(w)o(ould)j(go)h(in)f(the)g(\014le)122 1478 y Fd(stack.cc)p[m
[32m+[m[32mFf(.)122 1559 y(If)h(w)o(e)g(ha)o(v)o(e)g(a)h(p)q(oin)o(ter)g(to)g(a)g[m
[32m+[m[32mFd(Stack)e Ff(ob)s(ject)h(called)g Fd(s)p Ff(,)h(w)o(e)f(can)h(access)g[m
[32m+[m[32m(the)f Fd(top)g Ff(elemen)o(t)d(as)122 1619 y Fd(s->top)p[m
[32m+[m[32mFf(,)12 b(just)i(as)h(in)f(C.)f(Ho)o(w)o(ev)o(er,)g(in)g(C++)i(w)o(e)e[m
[32m+[m[32m(can)h(also)h(call)e(the)h(mem)o(b)q(er)d(function)j(using)g(the)122[m
[32m+[m[32m1679 y(follo)o(wing)i(syn)o(tax:)224 1814 y Fd(s->Push\(17\))o(;)122[m
[32m+[m[32m1949 y Ff(Of)g(course,)g(as)h(in)f(C,)g Fd(s)g Ff(m)o(ust)e(p)q(oin)o[m
[32m+[m[32m(t)j(to)f(a)h(v)m(alid)f Fd(Stack)e Ff(ob)s(ject.)122[m
[32m+[m[32m2030 y(Inside)j(a)h(mem)o(b)q(er)d(function,)j(one)g(ma)o(y)e(refer)h[m
[32m+[m[32m(to)h(the)g(mem)n(b)q(ers)e(of)i(the)f(class)h(b)o(y)g(their)f(names)[m
[32m+[m[32m122 2090 y(alone.)30 b(In)18 b(other)h(w)o(ords,)h(the)f(class)g[m
[32m+[m[32m(de\014nition)g(creates)f(a)i(scop)q(e)f(that)h(includes)e(the)g(mem)o[m
[32m+[m[32m(b)q(er)122 2150 y(\(function)e(and)h(data\))g(de\014nitions.)122[m
[32m+[m[32m2231 y(Note)d(that)i(if)e(y)o(ou)h(are)g(inside)f(a)h(mem)o(b)q(er)d[m
[32m+[m[32m(function,)i(y)o(ou)h(can)g(get)g(a)g(p)q(oin)o(ter)g(to)g(the)g(ob)s[m
[32m+[m[32m(ject)f(y)o(ou)122 2291 y(w)o(ere)f(called)f(on)i(b)o(y)f(using)h(the)f[m
[32m+[m[32m(v)m(ariable)g Fd(this)p Ff(.)19 b(If)13 b(y)o(ou)g(w)o(an)o(t)h(to)f[m
[32m+[m[32m(call)g(another)h(mem)o(b)q(er)c(function)122 2352 y(on)19[m
[32m+[m[32mb(the)f(same)f(ob)s(ject,)h(y)o(ou)g(do)h(not)g(need)e(to)i(use)f(the)g[m
[32m+[m[32mFd(this)f Ff(p)q(oin)o(ter,)h(ho)o(w)o(ev)o(er.)27 b(Let's)18[m
[32m+[m[32mb(extend)122 2412 y(the)e(Stac)o(k)g(example)e(to)i(illustrate)g(this)g[m
[32m+[m[32m(b)o(y)f(adding)i(a)g Fd(Full\(\))d Ff(function.)122[m
[32m+[m[32m2547 y Fd(class)24 b(Stack)g({)173 2607 y(public:)224[m
[32m+[m[32m2667 y(void)h(Push\(int)d(value\);)h(//)i(Push)f(an)h(integer,)e[m
[32m+[m[32m(checking)g(for)h(overflow.)963 2795 y Ff(4)p eop[m
[32m+[m[32m%%Page: 5 5[m
[32m+[m[32m5 4 bop 224 50 a Fd(bool)25 b(Full\(\);)176 b(//)25 b(Returns)e(TRUE)i[m
[32m+[m[32m(if)g(the)f(stack)g(is)h(full,)f(FALSE)f(otherwise.)224[m
[32m+[m[32m110 y(int)i(top;)255 b(//)25 b(Index)f(of)g(the)h(lowest)e(unused)h[m
[32m+[m[32m(position.)224 170 y(int)h(stack[10];)99 b(//)25 b(A)g(pointer)e(to)i[m
[32m+[m[32m(an)g(array)f(that)g(holds)g(the)g(contents.)122 230[m
[32m+[m[32my(};)122 351 y(bool)122 411 y(Stack::Ful)o(l\(\))e({)224[m
[32m+[m[32m471 y(return)i(\(top)g(==)h(10\);)122 531 y(})122 654[m
[32m+[m[32my Ff(No)o(w)16 b(w)o(e)g(can)g(rewrite)g Fd(Push)e Ff(this)i(w)o(a)o[m
[32m+[m[32m(y:)122 777 y Fd(void)122 837 y(Stack::Pus)o(h\(i)o(nt)22[m
[32m+[m[32mb(value\))h({)224 897 y(ASSERT\(!Ful)o(l\(\))o(\);)224[m
[32m+[m[32m958 y(stack[top++)o(])g(=)i(value;)122 1018 y(})122 1141[m
[32m+[m[32my Ff(W)l(e)16 b(could)g(ha)o(v)o(e)f(also)i(written)f(the)g(ASSER)l(T:)[m
[32m+[m[32m224 1263 y Fd(ASSERT\(!\(th)o(is-)o(>Fu)o(ll)o(\(\)\))o(;)122[m
[32m+[m[32m1386 y Ff(but)g(in)g(a)h(mem)o(b)q(er)c(function,)i(the)h[m
[32m+[m[32mFd(this->)f Ff(is)h(implici)o(t.)122 1466 y(The)d(purp)q(ose)h(of)g[m
[32m+[m[32m(mem)n(b)q(er)d(functions)i(is)g(to)g(encapsulate)h(the)e(functionalit)[m
[32m+[m[32mo(y)g(of)i(a)f(t)o(yp)q(e)g(of)h(ob)s(ject)122 1526 y(along)21[m
[32m+[m[32mb(with)e(the)h(data)g(that)h(the)e(ob)s(ject)g(con)o(tains.)32[m
[32m+[m[32mb(A)20 b(mem)n(b)q(er)d(function)j(do)q(es)g(not)h(tak)o(e)e(up)122[m
[32m+[m[32m1586 y(space)d(in)g(an)h(ob)s(ject)f(of)g(the)g(class.)60[m
[32m+[m[32m1685 y(2.)24 b Fb(Priv)m(ate)15 b(mem)n(b)r(er)o(s.)j[m
[32m+[m[32mFf(One)c(can)g(declare)f(some)g(mem)o(b)q(ers)e(of)j(a)h(class)f(to)g[m
[32m+[m[32m(b)q(e)g Fc(private)p Ff(,)h(whic)o(h)e(are)122 1745[m
[32m+[m[32my(hidden)i(to)g(all)f(but)i(the)e(mem)o(b)q(er)e(functions)j(of)g(that)[m
[32m+[m[32mh(class,)f(and)g(some)f(to)h(b)q(e)h Fc(public)p Ff(,)g(whic)o(h)e(are)[m
[32m+[m[32m122 1805 y(visible)k(and)j(accessible)d(to)i(ev)o(eryb)q(o)q(dy)l(.)32[m
[32m+[m[32mb(Both)20 b(data)g(and)h(function)e(mem)o(b)q(ers)e(can)j(b)q(e)g[m
[32m+[m[32m(either)122 1866 y(public)15 b(or)i(priv)m(ate.)122 1945[m
[32m+[m[32my(In)j(our)i(stac)o(k)e(example,)f(note)i(that)h(once)e(w)o(e)h(ha)o(v)[m
[32m+[m[32mo(e)e(the)i Fd(Full\(\))e Ff(function,)i(w)o(e)f(really)g(don't)122[m
[32m+[m[32m2005 y(need)d(to)i(lo)q(ok)f(at)h(the)e Fd(top)g Ff(or)i[m
[32m+[m[32mFd(stack)d Ff(mem)n(b)q(ers)g(outside)i(of)g(the)g(class)g({)g(in)g[m
[32m+[m[32m(fact,)g(w)o(e'd)f(rather)122 2066 y(that)d(users)g(of)g(the)f(Stac)o[m
[32m+[m[32m(k)h(abstraction)g Fc(not)g Ff(kno)o(w)g(ab)q(out)h(its)e(in)o(ternal)g[m
[32m+[m[32m(implem)o(en)o(tati)o(on,)f(in)h(case)122 2126 y(w)o(e)j(c)o(hange)g[m
[32m+[m[32m(it.)21 b(Th)o(us)16 b(w)o(e)g(can)h(rewrite)e(the)h(class)g(as)h[m
[32m+[m[32m(follo)o(ws:)122 2249 y Fd(class)24 b(Stack)g({)173 2309[m
[32m+[m[32my(public:)224 2369 y(void)h(Push\(int)d(value\);)h(//)i(Push)f(an)h[m
[32m+[m[32m(integer,)e(checking)g(for)h(overflow.)224 2429 y(bool)h(Full\(\);)176[m
[32m+[m[32mb(//)25 b(Returns)e(TRUE)i(if)g(the)f(stack)g(is)h(full,)f(FALSE)f[m
[32m+[m[32m(otherwise.)173 2489 y(private:)224 2550 y(int)i(top;)255[m
[32m+[m[32mb(//)25 b(Index)f(of)g(the)h(top)g(of)f(the)h(stack.)224[m
[32m+[m[32m2610 y(int)g(stack[10];)99 b(//)25 b(The)f(elements)f(of)i(the)f[m
[32m+[m[32m(stack.)122 2670 y(};)963 2795 y Ff(5)p eop[m
[32m+[m[32m%%Page: 6 6[m
[32m+[m[32m6 5 bop 122 50 a Ff(Before,)14 b(giv)o(en)h(a)h(p)q(oin)o(ter)f(to)h(a)[m
[32m+[m[32mg Fd(Stack)e Ff(ob)s(ject,)h(sa)o(y)h Fd(s)p Ff(,)e(an)o(y)i(part)g(of)[m
[32m+[m[32mg(the)f(program)h(could)f(access)122 110 y Fd(s->top)p[m
[32m+[m[32mFf(,)c(in)h(p)q(oten)o(tially)g(bad)i(w)o(a)o(ys.)20[m
[32m+[m[32mb(No)o(w,)13 b(since)f(the)g Fd(top)g Ff(mem)o(b)q(er)e(is)j(priv)m[m
[32m+[m[32m(ate,)f(only)h(a)g(mem)o(b)q(er)122 170 y(function,)j(suc)o(h)h(as)g[m
[32m+[m[32mFd(Full\(\))p Ff(,)e(can)i(access)g(it.)22 b(If)16 b(an)o(y)h(other)g[m
[32m+[m[32m(part)g(of)h(the)e(program)h(attempts)f(to)122 230 y(use)g[m
[32m+[m[32mFd(s->top)e Ff(the)i(compiler)e(will)h(rep)q(ort)i(an)g(error.)122[m
[32m+[m[32m311 y(Y)l(ou)12 b(can)g(ha)o(v)o(e)f(alternating)h Fd(public:)17[m
[32m+[m[32mb Ff(and)c Fd(private:)j Ff(sections)c(in)g(a)g(class.)20[m
[32m+[m[32mb(Before)11 b(y)o(ou)h(sp)q(ecify)122 372 y(either)19[m
[32m+[m[32mb(of)i(these,)f(class)h(mem)n(b)q(ers)d(are)i(priv)m(ate,)h(th)o(us)f[m
[32m+[m[32m(the)g(ab)q(o)o(v)o(e)g(example)e(could)j(ha)o(v)o(e)e(b)q(een)122[m
[32m+[m[32m432 y(written:)122 567 y Fd(class)24 b(Stack)g({)224[m
[32m+[m[32m627 y(int)h(top;)255 b(//)25 b(Index)f(of)g(the)h(top)g(of)f(the)h[m
[32m+[m[32m(stack.)224 687 y(int)g(stack[10];)99 b(//)25 b(The)f(elements)f(of)i[m
[32m+[m[32m(the)f(stack.)173 747 y(public:)224 807 y(void)h(Push\(int)d(value\);)h[m
[32m+[m[32m(//)i(Push)f(an)h(integer,)e(checking)g(for)h(overflow.)224[m
[32m+[m[32m868 y(bool)h(Full\(\);)176 b(//)25 b(Returns)e(TRUE)i(if)g(the)f(stack)[m
[32m+[m[32mg(is)h(full,)f(FALSE)f(otherwise.)122 928 y(};)122 1063[m
[32m+[m[32my Ff(Whic)o(h)15 b(form)f(y)o(ou)i(prefer)f(is)g(a)i(matter)d(of)i(st)o[m
[32m+[m[32m(yle,)e(but)i(it's)f(usually)g(b)q(est)h(to)g(b)q(e)g(explicit,)d(so)k[m
[32m+[m[32m(that)122 1123 y(it)f(is)g(ob)o(vious)g(what)h(is)f(in)o(tended.)122[m
[32m+[m[32m1204 y(In)c(man)o(y)g(cases,)h(it)f(is)h(b)q(est)g(to)g(mak)o(e)e(all)h[m
[32m+[m[32m(data)i(mem)n(b)q(ers)c(of)j(a)g(class)g(priv)m(ate)g(and)g(de\014ne)g[m
[32m+[m[32mFc(ac)n(c)n(essor)122 1264 y(functions)20 b Ff(to)g(read)f(and)h(write)[m
[32m+[m[32mf(them.)29 b(This)19 b(adds)h(to)g(the)f(mo)q(dularit)o(y)e(of)j(the)f[m
[32m+[m[32m(system,)f(since)122 1324 y(y)o(ou)g(can)h(rede\014ne)e(ho)o(w)i(the)f[m
[32m+[m[32m(data)h(mem)o(b)q(ers)c(are)j(stored)h(without)g(c)o(hanging)f(ho)o(w)h[m
[32m+[m[32m(y)o(ou)f(access)122 1384 y(them.)60 1486 y(3.)24 b Fb(Constructors)17[m
[32m+[m[32mb(and)g(the)f(op)r(erator)g(new.)21 b Ff(In)14 b(C,)g(in)g(order)h(to)g[m
[32m+[m[32m(create)e(a)i(new)g(ob)s(ject)f(of)h(t)o(yp)q(e)122 1546[m
[32m+[m[32my Fd(Stack)p Ff(,)f(one)i(migh)o(t)f(write:)224 1681[m
[32m+[m[32my Fd(struct)24 b(Stack)g(*s)h(=)g(\(struct)e(Stack)h(*\))h(malloc\(si)o[m
[32m+[m[32m(zeo)o(f)d(\(struct)i(Stack\)\);)224 1741 y(InitStack\(s)o(,)f(17\);)[m
[32m+[m[32m122 1876 y Ff(The)15 b Fd(InitStack\(\))d Ff(function)j(migh)o(t)f(tak)[m
[32m+[m[32mo(e)h(the)g(second)h(argumen)o(t)e(as)i(the)g(size)e(of)i(the)f(stac)o[m
[32m+[m[32m(k)h(to)122 1936 y(create,)f(and)i(use)f Fd(malloc\(\))e[m
[32m+[m[32mFf(again)j(to)f(get)h(an)f(arra)o(y)h(of)f(17)h(in)o(tegers.)122[m
[32m+[m[32m2017 y(The)f(w)o(a)o(y)g(this)g(is)g(done)h(in)f(C++)g(is)g(as)h(follo)[m
[32m+[m[32mo(ws:)224 2152 y Fd(Stack)24 b(*s)h(=)g(new)g(Stack\(17\);)122[m
[32m+[m[32m2287 y Ff(The)19 b Fd(new)f Ff(function)g(tak)o(es)h(the)g(place)f(of)h[m
[32m+[m[32mFd(malloc\(\))p Ff(.)27 b(T)l(o)19 b(sp)q(ecify)f(ho)o(w)h(the)g(ob)s[m
[32m+[m[32m(ject)f(should)i(b)q(e)122 2347 y(initialized,)11 b(one)j(declares)f(a)[m
[32m+[m[32mh Fc(c)n(onstructor)g Ff(function)f(as)i(a)f(mem)n(b)q(er)d(of)j(the)f[m
[32m+[m[32m(class,)h(with)g(the)f(name)122 2408 y(of)j(the)g(function)h(b)q(eing)f[m
[32m+[m[32m(the)g(same)f(as)i(the)f(class)g(name:)122 2543 y Fd(class)24[m
[32m+[m[32mb(Stack)g({)173 2603 y(public:)224 2663 y(Stack\(int)f(sz\);)101[m
[32m+[m[32mb(//)25 b(Construct)o(or:)48 b(initializ)o(e)23 b(variables)o(,)g[m
[32m+[m[32m(allocate)f(space.)963 2795 y Ff(6)p eop[m
[32m+[m[32m%%Page: 7 7[m
[32m+[m[32m7 6 bop 224 50 a Fd(void)25 b(Push\(int)d(value\);)h(//)i(Push)f(an)h[m
[32m+[m[32m(integer,)e(checking)g(for)h(overflow.)224 110 y(bool)h(Full\(\);)176[m
[32m+[m[32mb(//)25 b(Returns)e(TRUE)i(if)g(the)f(stack)g(is)h(full,)f(FALSE)f[m
[32m+[m[32m(otherwise.)173 170 y(private:)224 230 y(int)i(size;)229[m
[32m+[m[32mb(//)25 b(The)f(maximum)f(capacity)g(of)i(the)f(stack.)224[m
[32m+[m[32m291 y(int)h(top;)255 b(//)25 b(Index)f(of)g(the)h(lowest)e(unused)h[m
[32m+[m[32m(position.)224 351 y(int*)h(stack;)177 b(//)25 b(A)g(pointer)e(to)i(an)[m
[32m+[m[32mg(array)f(that)g(holds)g(the)g(contents.)122 411 y(};)122[m
[32m+[m[32m531 y(Stack::Sta)o(ck\()o(in)o(t)f(sz\))h({)224 592 y(size)h(=)g(sz;)[m
[32m+[m[32m224 652 y(top)g(=)g(0;)224 712 y(stack)f(=)i(new)e(int[size];)73[m
[32m+[m[32mb(//)25 b(Let's)f(get)h(an)f(array)g(of)h(integers.)122[m
[32m+[m[32m772 y(})122 888 y Ff(There)16 b(are)g(a)h(few)f(things)g(going)i(on)e[m
[32m+[m[32m(here,)f(so)i(w)o(e)f(will)f(describ)q(e)h(them)f(one)h(at)h(a)f(time.)[m
[32m+[m[32m122 967 y(The)j Fd(new)e Ff(op)q(erator)j(automatically)d(creates)h[m
[32m+[m[32m(\(i.e.)27 b(allo)q(cates\))18 b(the)h(ob)s(ject)f(and)h(then)f(calls)g[m
[32m+[m[32m(the)122 1027 y(constructor)24 b(function)f(for)g(the)g(new)g(ob)s[m
[32m+[m[32m(ject.)42 b(This)23 b(same)f(sequence)g(happ)q(ens)j(ev)o(en)d(if,)i[m
[32m+[m[32m(for)122 1087 y(instance,)d(y)o(ou)f(declare)f(an)i(ob)s(ject)f(as)h[m
[32m+[m[32m(an)g(automatic)f(v)m(ariable)g(inside)f(a)i(function)f(or)h(blo)q(c)o[m
[32m+[m[32m(k.)122 1147 y(\(Although)h(w)o(e)f(explain)g(this)g(construct)h(here,)[m
[32m+[m[32mg(in)f(Nac)o(hos)h(w)o(e)f(a)o(v)o(oid)g(automatic)g(allo)q(cation)122[m
[32m+[m[32m1207 y(of)f(ob)s(jects,)h(to)f(mak)o(e)e(it)i(explicitly)d(clear)j[m
[32m+[m[32m(when)g(the)g(constructor)g(is)g(b)q(eing)h(called.\))31[m
[32m+[m[32mb(In)20 b(this)122 1267 y(example,)d(w)o(e)i(create)f(t)o(w)o(o)h(stac)[m
[32m+[m[32mo(ks)h(of)f(di\013eren)o(t)f(sizes,)h(one)h(b)o(y)e(declaring)h(it)f[m
[32m+[m[32m(as)i(an)g(automatic)122 1328 y(v)m(ariable,)15 b(and)i(one)g(b)o(y)e[m
[32m+[m[32m(using)i Fd(new)p Ff(.)122 1443 y Fd(void)122 1503 y(test\(\))23[m
[32m+[m[32mb({)224 1564 y(Stack)h(stack1\(17\);)224 1624 y(Stack*)g(stack2)f(=)j[m
[32m+[m[32m(new)e(Stack\(23\);)122 1684 y(})122 1800 y Ff(Note)19[m
[32m+[m[32mb(there)g(are)g(t)o(w)o(o)h(w)o(a)o(ys)f(of)h(pro)o(viding)f(argumen)o[m
[32m+[m[32m(ts)f(to)i(constructors:)28 b(with)20 b Fd(new)p Ff(,)f(y)o(ou)g(put)[m
[32m+[m[32m122 1860 y(the)e(argumen)o(t)e(list)i(after)g(the)f(class)h(name,)f[m
[32m+[m[32m(and)h(with)g(v)m(ariables)g(declared)f(as)h(ab)q(o)o(v)o(e,)g(y)o(ou)g[m
[32m+[m[32m(put)122 1920 y(them)e(after)h(the)g(v)m(ariable)g(name.)122[m
[32m+[m[32m1999 y(The)f Fd(stack1)e Ff(ob)s(ject)i(is)g(deallo)q(cated)g(when)g[m
[32m+[m[32m(the)g Fd(test)f Ff(function)h(returns.)21 b(The)15 b(ob)s(ject)g(p)q[m
[32m+[m[32m(oin)o(ted)122 2059 y(to)k(b)o(y)f Fd(stack2)f Ff(remains,)h(ho)o(w)o[m
[32m+[m[32m(ev)o(er,)g(un)o(til)f(disp)q(osed)j(of)f(using)g Fd(delete)p[m
[32m+[m[32mFf(,)e(describ)q(ed)h(b)q(elo)o(w.)29 b(In)122 2119 y(this)16[m
[32m+[m[32mb(example)d(it)j(is)f(inaccessible)g(outside)h(of)g Fd(test)p[m
[32m+[m[32mFf(,)e(and)i(in)g(a)g(language)h(lik)o(e)d(Lisp)j(it)e(w)o(ould)h(b)q[m
[32m+[m[32m(e)122 2179 y(garbage)h(collected.)i(C++)d(is)g(di\016cult)f(to)h[m
[32m+[m[32m(garbage)h(collect,)d(ho)o(w)o(ev)o(er)g(\(for)j(instance,)e(w)o(e)g[m
[32m+[m[32m(could)122 2240 y(ha)o(v)o(e)g(assigned)i Fd(stack2)d[m
[32m+[m[32mFf(to)j(a)g(global\).)122 2318 y(The)i Fd(new)f Ff(op)q(erator)i(can)g[m
[32m+[m[32m(also)f(b)q(e)g(used)h(to)f(allo)q(cate)g(arra)o(ys,)h(illustrated)e[m
[32m+[m[32m(ab)q(o)o(v)o(e)h(in)g(allo)q(cating)122 2379 y(an)e(arra)o(y)f(of)h[m
[32m+[m[32mFd(ints)p Ff(,)d(of)i(dimension)f Fd(size)p Ff(:)224[m
[32m+[m[32m2494 y Fd(stack)24 b(=)i(new)e(int[size];)122 2610 y[m
[32m+[m[32mFf(Note)16 b(that)i(y)o(ou)f(can)g(use)g Fd(new)e Ff(and)j[m
[32m+[m[32mFd(delete)c Ff(\(describ)q(ed)j(b)q(elo)o(w\))g(with)f(built-in)g(t)o[m
[32m+[m[32m(yp)q(es)h(lik)o(e)e Fd(int)122 2670 y Ff(and)i Fd(char)e[m
[32m+[m[32mFf(as)h(w)o(ell)f(as)i(with)f(class)h(ob)s(jects)f(lik)o(e)e[m
[32m+[m[32mFd(Stack)p Ff(.)963 2795 y(7)p eop[m
[32m+[m[32m%%Page: 8 8[m
[32m+[m[32m8 7 bop 60 50 a Ff(4.)24 b Fb(Destructors)13 b(and)h(the)g(op)r(erator)[m
[32m+[m[32me(delete.)18 b Ff(Just)13 b(as)g Fd(new)d Ff(is)i(the)g(replacemen)o(t)[m
[32m+[m[32md(for)j Fd(malloc\(\))p Ff(,)122 110 y(the)j(replacemen)o(t)d(for)k[m
[32m+[m[32mFd(free\(\))d Ff(is)i Fd(delete)p Ff(.)k(T)l(o)d(get)f(rid)g(of)h(the)f[m
[32m+[m[32mFd(Stack)e Ff(ob)s(ject)i(p)q(oin)o(ted)g(to)h(b)o(y)f[m
[32m+[m[32mFd(s)p Ff(,)122 170 y(one)h(can)h(do:)224 305 y Fd(delete)24[m
[32m+[m[32mb(s;)122 440 y Ff(This)16 b(will)g(deallo)q(cate)g(the)g(ob)s(ject,)f[m
[32m+[m[32m(but)h(\014rst)h(it)f(will)f(call)h(the)g Fc(destructor)g[m
[32m+[m[32mFf(for)h(the)f Fd(Stack)e Ff(class,)122 500 y(if)h(there)h(is)g(one.)21[m
[32m+[m[32mb(This)16 b(destructor)g(w)o(ould)g(b)q(e)h(a)f(mem)o(b)q(er)d[m
[32m+[m[32m(function)j(of)g Fd(Stack)e Ff(called)h Fd(~)p Ff(Stac)o(k\(\):)122[m
[32m+[m[32m635 y Fd(class)24 b(Stack)g({)173 695 y(public:)224 756[m
[32m+[m[32my(Stack\(int)f(sz\);)101 b(//)25 b(Construct)o(or:)48[m
[32m+[m[32mb(initializ)o(e)23 b(variables)o(,)g(allocate)f(space.)224[m
[32m+[m[32m816 y(~Stack\(\);)228 b(//)25 b(Destructo)o(r:)74 b(deallocat)o(e)23[m
[32m+[m[32mb(space)g(allocated)g(above.)224 876 y(void)i(Push\(int)d(value\);)h[m
[32m+[m[32m(//)i(Push)f(an)h(integer,)e(checking)g(for)h(overflow.)224[m
[32m+[m[32m936 y(bool)h(Full\(\);)151 b(//)25 b(Returns)e(TRUE)h(if)h(the)f(stack)[m
[32m+[m[32mg(is)h(full,)f(FALSE)g(otherwise)o(.)173 996 y(private:)224[m
[32m+[m[32m1056 y(int)h(size;)229 b(//)25 b(The)f(maximum)f(capacity)g(of)i(the)f[m
[32m+[m[32m(stack.)224 1117 y(int)h(top;)255 b(//)25 b(Index)f(of)g(the)h(lowest)e[m
[32m+[m[32m(unused)h(position.)224 1177 y(int*)h(stack;)177 b(//)25[m
[32m+[m[32mb(A)g(pointer)e(to)i(an)g(array)f(that)g(holds)g(the)g(contents.)122[m
[32m+[m[32m1237 y(};)122 1357 y(Stack::~St)o(ack)o(\(\))e({)224[m
[32m+[m[32m1418 y(delete)i(stack;)122 1478 y(})122 1613 y Ff(The)19[m
[32m+[m[32mb(destructor)h(has)g(the)f(job)g(of)h(deallo)q(cating)f(the)g(data)i[m
[32m+[m[32m(the)e(constructor)g(allo)q(cated.)31 b(Most)122 1673[m
[32m+[m[32my(classes)22 b(w)o(on't)f(need)g(destructors,)i(and)f(some)f(will)f[m
[32m+[m[32m(use)i(them)e(to)i(close)f(\014les)g(and)h(otherwise)122[m
[32m+[m[32m1733 y(clean)16 b(up)g(after)g(themselv)o(es.)122 1814[m
[32m+[m[32my(As)h(with)h(constructors,)g(a)g(destructor)f(for)h(an)g(auto)g(ob)s[m
[32m+[m[32m(ject)f(will)g(b)q(e)h(called)e(when)i(that)g(ob)s(ject)122[m
[32m+[m[32m1874 y(go)q(es)k(out)g(of)f(scop)q(e)h(\(i.e.,)e(at)h(the)g(end)g(of)h[m
[32m+[m[32m(the)e(function)h(in)g(whic)o(h)g(it)f(is)h(de\014ned\),)h(so)f(in)g[m
[32m+[m[32m(the)122 1934 y Fd(test\(\))15 b Ff(example)g(ab)q(o)o(v)o(e,)j(the)f[m
[32m+[m[32m(stac)o(k)g(w)o(ould)g(b)q(e)h(prop)q(erly)f(deallo)q(cated)g(without)h[m
[32m+[m[32m(y)o(our)f(ha)o(ving)122 1995 y(to)h(do)g(an)o(ything.)25[m
[32m+[m[32mb Fb(Ho)n(w)n(ev)n(er,)18 b Ff(if)f(y)o(ou)h(ha)o(v)o(e)f(a)h(p)q(oin)o[m
[32m+[m[32m(ter)f(to)h(an)g(ob)s(ject)f(y)o(ou)h(got)g(from)f Fd(new)p[m
[32m+[m[32mFf(,)f(and)122 2055 y(the)d(p)q(oin)o(ter)g(go)q(es)h(out)g(of)g(scop)q[m
[32m+[m[32m(e,)g(then)f(the)g(ob)s(ject)f(w)o(on't)i(b)q(e)f(freed)g(|)g(y)o(ou)g[m
[32m+[m[32m(ha)o(v)o(e)f(to)i(use)f Fd(delete)122 2115 y Ff(explicitly)l(.)18[m
[32m+[m[32mb(Since)c(C++)i(do)q(esn't)f(ha)o(v)o(e)g(garbage)h(collection,)e(y)o[m
[32m+[m[32m(ou)h(should)h(generally)e(b)q(e)i(careful)122 2175 y(to)k(delete)e[m
[32m+[m[32m(what)i(y)o(ou)g(allo)q(cate.)30 b(T)l(o)21 b(a)o(v)o(oid)e(an)o(y)g(p)[m
[32m+[m[32mq(oten)o(tial)g(confusion,)h(in)g(Nac)o(hos)f(w)o(e)g(alw)o(a)o(ys)122[m
[32m+[m[32m2235 y(use)14 b Fd(new)f Ff(and)i Fd(delete)d Ff(to)j(allo)q(cate)f(ev)[m
[32m+[m[32mo(ery)f(ob)s(ject.)20 b(Although)14 b(this)h(is)f(a)g(little)f(slo)o(w)[m
[32m+[m[32mo(er,)g(it)h(has)h(the)122 2296 y(b)q(ene\014t)h(of)h(a)o(v)o(oiding)e[m
[32m+[m[32m(the)h(quirks)g(of)h(the)f(C++)g(ev)m(aluation)g(order.)122[m
[32m+[m[32m2377 y(Man)o(y)k(classes)g(will)f(not)i(need)f(destructors,)h(and)g(if)[m
[32m+[m[32me(y)o(ou)h(don't)h(care)f(ab)q(out)h(core)f(leaks)g(\(i.e.,)122[m
[32m+[m[32m2437 y(space)i(not)g(getting)h(freed)e(when)h(it)g(is)f(no)i(longer)f[m
[32m+[m[32m(used\))g(when)g(one)g(ob)s(ject)g(allo)q(cates)g(other)122[m
[32m+[m[32m2497 y(ob)s(jects)16 b(and)h(k)o(eeps)e(p)q(oin)o(ters)h(to)h(them,)d[m
[32m+[m[32m(y)o(ou)i(will)f(need)h(them)f(ev)o(en)g(less)h(frequen)o(tly)l(.)122[m
[32m+[m[32m2578 y(In)h(some)f(v)o(ersions)h(of)h(C++,)f(when)g(y)o(ou)h(deallo)q[m
[32m+[m[32m(cate)f(an)h(arra)o(y)f(y)o(ou)g(ha)o(v)o(e)g(to)g(tell)g[m
[32m+[m[32mFd(delete)e Ff(ho)o(w)122 2638 y(man)o(y)g(elemen)o(ts)e(there)j(are)g[m
[32m+[m[32m(in)g(the)g(arra)o(y)l(,)g(lik)o(e)e(this:)963 2795 y(8)p[m
[32m+[m[32meop[m
[32m+[m[32m%%Page: 9 9[m
[32m+[m[32m9 8 bop 224 50 a Fd(delete)24 b([size])f(stack;)122 185[m
[32m+[m[32my Ff(Ho)o(w)o(ev)o(er,)14 b(GNU)i(C++)g(do)q(esn't)h(require)e(this.)0[m
[32m+[m[32m329 y Fa(3.2)70 b(Other)22 b(Basic)g(C++)h(F)-6 b(eatures)0[m
[32m+[m[32m422 y Ff(Here)15 b(are)h(a)h(few)f(other)h(C++)f(features)g(that)h(are)[m
[32m+[m[32mf(useful)g(to)g(kno)o(w.)60 536 y(1.)24 b(When)17 b(y)o(ou)g(de\014ne)g[m
[32m+[m[32m(a)h Fd(class)24 b(Stack)p Ff(,)15 b(the)i(name)f Fd(Stack)g[m
[32m+[m[32mFf(b)q(ecomes)g(usable)h(as)h(a)g(t)o(yp)q(e)e(name)g(as)122[m
[32m+[m[32m596 y(if)g(created)f(with)h Fd(typedef)p Ff(.)j(The)d(same)g(is)g(true)[m
[32m+[m[32mg(for)g Fd(enum)p Ff(s.)60 698 y(2.)24 b(Y)l(ou)18 b(can)h(de\014ne)f[m
[32m+[m[32m(functions)g(inside)g(of)g(a)h Fd(class)e Ff(de\014nition,)h(whereup)q[m
[32m+[m[32m(on)h(they)f(b)q(ecome)e Fc(inline)122 758 y(functions)p[m
[32m+[m[32mFf(,)i(whic)o(h)e(are)h(expanded)g(in)g(the)g(b)q(o)q(dy)h(of)f(the)g[m
[32m+[m[32m(function)g(where)g(they)f(are)h(used.)24 b(This)122[m
[32m+[m[32m818 y(is)17 b(usually)h(a)g(matter)e(of)j(con)o(v)o(enience,)c(but)j[m
[32m+[m[32m(it)f(should)h(not)h(b)q(e)f(o)o(v)o(erused)e(since)h(it)h(means)f[m
[32m+[m[32m(that)122 878 y(the)i(co)q(de)h(implem)o(en)n(ting)d(an)j(ob)s(ject)f[m
[32m+[m[32m(is)g(no)h(longer)g(in)f(one)g(place,)h(but)f(no)o(w)h(spread)g(b)q(et)[m
[32m+[m[32mo(w)o(een)122 938 y(the)c Fd(.h)f Ff(and)i Fd(.c)f Ff(\014les.)21[m
[32m+[m[32mb(As)16 b(an)g(example,)e(w)o(e)i(could)g(mak)o(e)e(the)i[m
[32m+[m[32mFd(Full)f Ff(routine)h(an)h(inline.)122 1073 y Fd(class)24[m
[32m+[m[32mb(Stack)g({)199 1133 y(...)199 1194 y(bool)g(Full\(\))f({)j(return)d[m
[32m+[m[32m(\(top)h(==)h(size\);)f(};)199 1254 y(...)122 1314 y(};)60[m
[32m+[m[32m1449 y Ff(3.)g(Inside)16 b(a)g(function)g(b)q(o)q(dy)l(,)h(y)o(ou)g[m
[32m+[m[32m(can)f(declare)g(some)f(v)m(ariables,)h(execute)f(some)g(statemen)o[m
[32m+[m[32m(ts,)f(and)122 1509 y(then)h(declare)f(more)f(v)m(ariables.)21[m
[32m+[m[32mb(This)15 b(can)g(mak)o(e)e(co)q(de)i(a)h(lot)e(more)g(readable.)21[m
[32m+[m[32mb(In)14 b(fact,)h(y)o(ou)g(can)122 1569 y(ev)o(en)g(write)h(things)g[m
[32m+[m[32m(lik)o(e:)122 1704 y Fd(for)24 b(\(int)h(i)g(=)g(0;)g(i)g(<)h(10;)e[m
[32m+[m[32m(i++\))g(;)122 1839 y Ff(Dep)q(ending)17 b(on)f(y)o(our)h(compiler,)c[m
[32m+[m[32m(ho)o(w)o(ev)o(er,)i(the)h(v)m(ariable)g Fd(i)g Ff(ma)o(y)f(still)g[m
[32m+[m[32m(visible)g(after)h(the)g(end)h(of)122 1899 y(the)f Fd(for)f[m
[32m+[m[32mFf(lo)q(op,)i(ho)o(w)o(ev)o(er,)d(whic)o(h)i(is)g(not)h(what)f(one)h[m
[32m+[m[32m(migh)o(t)d(exp)q(ect)i(or)g(desire.)60 2001 y(4.)24[m
[32m+[m[32mb(Commen)o(ts)14 b(can)j(b)q(egin)f(with)h(the)f(c)o(haracters)g[m
[32m+[m[32mFd(//)g Ff(and)h(extend)f(to)h(the)f(end)h(of)g(the)f(line.)21[m
[32m+[m[32mb(These)122 2061 y(are)16 b(usually)g(more)f(handy)i(than)g(the)f[m
[32m+[m[32mFd(/*)24 b(*/)16 b Ff(st)o(yle)f(of)i(commen)n(ts.)60[m
[32m+[m[32m2163 y(5.)24 b(C++)18 b(pro)o(vides)f(some)g(new)h(opp)q(ortunities)h[m
[32m+[m[32m(to)f(use)g(the)g Fd(const)e Ff(k)o(eyw)o(ord)h(from)g(ANSI)g(C.)h(The)[m
[32m+[m[32m122 2223 y(basic)12 b(idea)g(of)h Fd(const)d Ff(is)i(to)h(pro)o(vide)f[m
[32m+[m[32m(extra)g(information)f(to)h(the)h(compiler)c(ab)q(out)14[m
[32m+[m[32mb(ho)o(w)f(a)f(v)m(ariable)122 2283 y(or)h(function)g(is)f(used,)i(to)f[m
[32m+[m[32m(allo)o(w)g(it)f(to)h(\015ag)h(an)f(error)g(if)g(it)f(is)h(b)q(eing)g[m
[32m+[m[32m(used)g(improp)q(erly)l(.)18 b(Y)l(ou)13 b(should)122[m
[32m+[m[32m2343 y(alw)o(a)o(ys)j(lo)q(ok)h(for)g(w)o(a)o(ys)g(to)g(get)f(the)h[m
[32m+[m[32m(compiler)d(to)j(catc)o(h)f(bugs)h(for)g(y)o(ou.)22 b(After)16[m
[32m+[m[32mb(all,)f(whic)o(h)h(tak)o(es)122 2404 y(less)g(time?)j(Fixing)d(a)h[m
[32m+[m[32m(compiler-\015agged)e(error,)g(or)i(c)o(hasing)f(do)o(wn)h(the)f(same)f[m
[32m+[m[32m(bug)i(using)g(gdb?)122 2485 y(F)l(or)j(example,)f(y)o(ou)h(can)g[m
[32m+[m[32m(declare)f(that)h(a)h(mem)o(b)q(er)c(function)j(only)f(reads)i(the)f[m
[32m+[m[32m(mem)n(b)q(er)e(data,)122 2545 y(and)f(nev)o(er)e(mo)q(di\014es)g(the)h[m
[32m+[m[32m(ob)s(ject:)963 2795 y(9)p eop[m
[32m+[m[32m%%Page: 10 10[m
[32m+[m[32m10 9 bop 122 50 a Fd(class)24 b(Stack)g({)199 110 y(...)199[m
[32m+[m[32m170 y(bool)g(Full\(\))f(const;)49 b(//)25 b(Full\(\))f(never)g[m
[32m+[m[32m(modifies)e(member)i(data)199 230 y(...)122 291 y(};)122[m
[32m+[m[32m425 y Ff(As)16 b(in)g(C,)g(y)o(ou)g(can)g(also)h(declare)f(that)g(a)h[m
[32m+[m[32m(v)m(ariable)f(is)g(nev)o(er)f(mo)q(di\014ed,)g(replacing)g[m
[32m+[m[32mFd(#define)p Ff(:)224 560 y Fd(const)24 b(int)h(InitialHa)o(shT)o(abl)o[m
[32m+[m[32m(eSi)o(ze)d(8;)60 695 y Ff(6.)i(Input/output)17 b(in)g(C++)g(can)f(b)q[m
[32m+[m[32m(e)h(done)g(with)g(the)f Fd(>>)g Ff(and)h Fd(<<)f Ff(op)q(erators)i[m
[32m+[m[32m(and)f(the)g(ob)s(jects)f Fd(cin)122 756 y Ff(and)h Fd(cout)p[m
[32m+[m[32mFf(.)j(F)l(or)c(example,)d(to)k(write)f(to)g Fd(stdout)p[m
[32m+[m[32mFf(:)224 890 y Fd(cout)25 b(<<)g("Hello)e(world!)49 b(This)24[m
[32m+[m[32mb(is)h(section)e(")i(<<)g(3)h(<<)e("!";)122 1025 y Ff(This)16[m
[32m+[m[32mb(is)g(equiv)m(alen)o(t)f(to)i(the)f(normal)f(C)h(co)q(de)224[m
[32m+[m[32m1160 y Fd(fprintf\(std)o(out)o(,)23 b("Hello)g(world!)49[m
[32m+[m[32mb(This)24 b(is)h(section)e(\045d!\\n",)g(3\);)122 1295[m
[32m+[m[32my Ff(except)13 b(that)i(the)f(C++)g(v)o(ersion)g(is)g(t)o(yp)q(e-safe;)[m
[32m+[m[32mh(with)f Fd(printf)p Ff(,)e(the)i(compiler)e(w)o(on't)i(complain)f(if)[m
[32m+[m[32m122 1355 y(y)o(ou)i(try)g(to)h(prin)o(t)e(a)i(\015oating)g(p)q(oin)o(t)[m
[32m+[m[32mf(n)o(um)o(b)q(er)f(as)i(an)f(in)o(teger.)20 b(In)15[m
[32m+[m[32mb(fact,)g(y)o(ou)g(can)h(use)f(traditional)122 1416 y[m
[32m+[m[32mFd(printf)i Ff(in)i(a)g(C++)h(program,)f(but)g(y)o(ou)h(will)e(get)h[m
[32m+[m[32m(bizarre)f(b)q(eha)o(vior)i(if)e(y)o(ou)h(try)g(to)h(use)f(b)q(oth)122[m
[32m+[m[32m1476 y Fd(printf)10 b Ff(and)i Fd(<<)f Ff(on)i(the)e(same)g(stream.)19[m
[32m+[m[32mb(Reading)12 b(from)f Fd(stdin)f Ff(w)o(orks)i(the)f(same)g(w)o(a)o(y)h[m
[32m+[m[32m(as)g(writing)122 1536 y(to)18 b Fd(stdout)p Ff(,)c(except)j(using)g[m
[32m+[m[32m(the)g(shift)g(righ)o(t)g(op)q(erator)i(instead)e(of)g(shift)h(left.)23[m
[32m+[m[32mb(In)17 b(order)g(to)h(read)122 1596 y(t)o(w)o(o)e(in)o(tegers)g(from)f[m
[32m+[m[32mFd(stdin)p Ff(:)224 1731 y Fd(int)25 b(field1,)e(field2;)224[m
[32m+[m[32m1791 y(cin)i(>>)g(field1)e(>>)i(field2;)327 1851 y(//)g(equivalent)d[m
[32m+[m[32m(to)j(fscanf\(st)o(din)o(,)e("\045d)h(\045d",)g(&field1,)f(&field2\);)[m
[32m+[m[32m327 1912 y(//)i(note)f(that)g(field1)g(and)g(field2)g(are)g(implicitly)[m
[32m+[m[32me(modified)122 2046 y Ff(In)17 b(fact,)h Fd(cin)e Ff(and)j[m
[32m+[m[32mFd(cout)d Ff(are)i(implem)o(e)o(n)o(ted)d(as)j(normal)f(C++)g(ob)s[m
[32m+[m[32m(jects,)h(using)g(op)q(erator)h(o)o(v)o(er-)122 2107[m
[32m+[m[32my(loading)j(and)g(reference)d(parameters,)i(but)h(\(fortunately!\))36[m
[32m+[m[32mb(y)o(ou)21 b(don't)h(need)f(to)g(understand)122 2167[m
[32m+[m[32my(either)15 b(of)i(those)f(to)h(b)q(e)f(able)g(to)h(do)g(I/O)f(in)g[m
[32m+[m[32m(C++.)0 2333 y Fe(4)83 b(Adv)-5 b(anced)23 b(Concepts)f(in)i(C++:)34[m
[32m+[m[32mb(Dangerous)24 b(but)f(Occa-)124 2425 y(sionally)j(Useful)0[m
[32m+[m[32m2534 y Ff(There)17 b(are)g(a)g(few)g(C++)g(features,)g(namely)e[m
[32m+[m[32m(\(single\))h(inheritance)g(and)i(templates,)d(whic)o(h)h(are)h(easily)[m
[32m+[m[32m0 2594 y(abused,)k(but)f(can)h(dramatically)d(simplify)f(an)k(implem)o[m
[32m+[m[32m(en)n(tation)d(if)h(used)i(prop)q(erly)l(.)32 b(I)20[m
[32m+[m[32mb(describ)q(e)f(the)0 2654 y(basic)d(idea)g(b)q(ehind)g(these)g[m
[32m+[m[32m(\\dangerous)i(but)f(useful")f(features)g(here,)f(in)h(case)g(y)o(ou)h[m
[32m+[m[32m(run)f(across)h(them.)951 2795 y(10)p eop[m
[32m+[m[32m%%Page: 11 11[m
[32m+[m[32m11 10 bop 73 50 a Ff(Up)17 b(to)g(this)f(p)q(oin)o(t,)h(there)f(really)[m
[32m+[m[32mf(hasn't)i(b)q(een)g(an)o(y)f(fundamen)o(tal)g(di\013erence)f(b)q(et)o[m
[32m+[m[32m(w)o(een)h(program-)0 110 y(ming)21 b(in)h(C)h(and)g(in)g(C++.)40[m
[32m+[m[32mb(In)22 b(fact,)i(most)e(exp)q(erienced)f(C)h(programmers)f(organize)i[m
[32m+[m[32m(their)f(func-)0 170 y(tions)g(in)o(to)g(mo)q(dules)g(that)g(relate)g[m
[32m+[m[32m(to)g(a)h(single)e(data)i(structure)f(\(a)h("class"\),)h(and)f(often)f[m
[32m+[m[32m(ev)o(en)f(use)0 230 y(a)e(naming)f(con)o(v)o(en)o(tion)g(whic)o(h)g[m
[32m+[m[32m(mimi)o(cs)e(C++,)j(for)g(example,)e(naming)h(routines)h[m
[32m+[m[32mFd(StackFull)o(\(\))c Ff(and)0 291 y Fd(StackPush\()o(\))p[m
[32m+[m[32mFf(.)30 b(Ho)o(w)o(ev)o(er,)18 b(the)i(features)g(I'm)e(ab)q(out)j(to)g[m
[32m+[m[32m(describ)q(e)e Fc(do)h Ff(require)f(a)h(paradigm)g(shift)g({)0[m
[32m+[m[32m351 y(there)14 b(is)h(no)g(simple)d(translation)k(from)d(them)g(in)o[m
[32m+[m[32m(to)i(a)g(normal)f(C)h(program.)20 b(The)15 b(b)q(ene\014t)g(will)e(b)q[m
[32m+[m[32m(e)i(that,)0 411 y(in)f(some)f(circumstances,)f(y)o(ou)i(will)g(b)q(e)g[m
[32m+[m[32m(able)g(to)h(write)e(generic)g(co)q(de)i(that)g(w)o(orks)f(with)g(m)o[m
[32m+[m[32m(ultiple)d(kinds)0 471 y(of)17 b(ob)s(jects.)73 531 y(Nev)o(ertheless,)[m
[32m+[m[32mf(I)i(w)o(ould)g(advise)g(a)h(b)q(eginning)f(C++)h(programmer)d[m
[32m+[m[32m(against)j(trying)f(to)h(use)f(these)0 592 y(features,)f(b)q(ecause)g[m
[32m+[m[32m(y)o(ou)g(will)f(almost)h(certainly)e(misuse)h(them.)22[m
[32m+[m[32mb(It's)17 b(p)q(ossible)g(\(ev)o(en)f(easy!\))24 b(to)18[m
[32m+[m[32mb(write)0 652 y(completely)11 b(inscrutable)j(co)q(de)h(using)g[m
[32m+[m[32m(inheritance)e(and/or)j(templates.)j(Although)14 b(y)o(ou)h(migh)o(t)e[m
[32m+[m[32m(\014nd)h(it)0 712 y(am)o(using)j(to)g(write)g(co)q(de)h(that)g(is)f[m
[32m+[m[32m(imp)q(ossible)f(for)i(y)o(our)f(graders)h(to)g(understand,)g(I)f[m
[32m+[m[32m(assure)h(y)o(ou)g(they)0 772 y(w)o(on't)e(\014nd)g(it)f(am)o(using)g[m
[32m+[m[32m(at)i(all,)e(and)h(will)f(return)h(the)f(fa)o(v)o(or)h(when)g(they)f[m
[32m+[m[32m(assign)i(grades.)22 b(In)16 b(industry)l(,)0 832 y(a)g(high)g(premium)[m
[32m+[m[32mc(is)j(placed)g(on)i(k)o(eeping)d(co)q(de)i(simple)d(and)j(readable.)21[m
[32m+[m[32mb(It's)15 b(easy)h(to)g(write)f(new)g(co)q(de,)0 892[m
[32m+[m[32my(but)g(the)g(real)f(cost)h(comes)f(when)h(y)o(ou)f(try)h(to)g(k)o(eep)[m
[32m+[m[32mf(it)g(w)o(orking,)h(ev)o(en)e(as)j(y)o(ou)f(add)g(new)g(features)g(to)[m
[32m+[m[32mg(it.)73 953 y(Nac)o(hos)22 b(con)o(tains)h(a)g(few)f(examples)e(of)j[m
[32m+[m[32m(the)f(correct)f(use)i(of)f(inheritance)f(and)i(templates,)f(but)0[m
[32m+[m[32m1013 y(realize)f(that)j(Nac)o(hos)e(do)q(es)i Fc(not)f[m
[32m+[m[32mFf(use)g(them)e(ev)o(erywhere.)39 b(In)23 b(fact,)h(if)e(y)o(ou)h(get)g[m
[32m+[m[32m(confused)g(b)o(y)f(this)0 1073 y(section,)17 b(don't)g(w)o(orry)l(,)g[m
[32m+[m[32m(y)o(ou)g(don't)h(need)e(to)i(use)f(an)o(y)h(of)f(these)g(features)g[m
[32m+[m[32m(in)g(order)h(to)f(do)h(the)f(Nac)o(hos)0 1133 y(assignmen)o(ts.)31[m
[32m+[m[32mb(I)19 b(omit)g(a)h(whole)g(bunc)o(h)f(of)h(details;)h(if)e(y)o(ou)h[m
[32m+[m[32m(\014nd)g(y)o(ourself)f(making)f(widespread)i(use)0 1193[m
[32m+[m[32my(of)d(inheritance)e(or)i(templates,)d(y)o(ou)i(should)h(consult)f(a)h[m
[32m+[m[32m(C++)g(reference)d(man)o(ual)i(for)g(the)g(real)g(sco)q(op.)0[m
[32m+[m[32m1254 y(This)h(is)f(mean)o(t)f(to)i(b)q(e)g(just)g(enough)g(to)g(get)g[m
[32m+[m[32m(y)o(ou)g(started,)f(and)i(to)f(help)f(y)o(ou)g(iden)o(tify)f(when)i[m
[32m+[m[32m(it)f(w)o(ould)0 1314 y(b)q(e)g(appropriate)h(to)g(use)f(these)g[m
[32m+[m[32m(features)g(and)h(th)o(us)f(learn)g(more)f(ab)q(out)j(them!)0[m
[32m+[m[32m1458 y Fa(4.1)70 b(Inheritance)0 1551 y Ff(Inheritance)11[m
[32m+[m[32mb(captures)i(the)f(idea)h(that)g(certain)e(classes)i(of)g(ob)s(jects)f[m
[32m+[m[32m(are)h(related)f(to)h(eac)o(h)f(other)g(in)g(useful)0[m
[32m+[m[32m1611 y(w)o(a)o(ys.)25 b(F)l(or)18 b(example,)d(lists)i(and)i(sorted)f[m
[32m+[m[32m(lists)f(ha)o(v)o(e)g(quite)f(similar)g(b)q(eha)o(vior)h({)h(they)f(b)q[m
[32m+[m[32m(oth)i(allo)o(w)e(the)0 1671 y(user)e(to)h(insert,)f(delete,)f(and)i[m
[32m+[m[32m(\014nd)f(elemen)o(ts)e(that)j(are)f(on)h(the)f(list.)20[m
[32m+[m[32mb(There)c(are)f(t)o(w)o(o)g(b)q(ene\014ts)h(to)g(using)0[m
[32m+[m[32m1731 y(inheritance:)60 1845 y(1.)24 b(Y)l(ou)16 b(can)f(write)g[m
[32m+[m[32m(generic)g(co)q(de)h(that)g(do)q(esn't)g(care)f(exactly)f(whic)o(h)h[m
[32m+[m[32m(kind)g(of)h(ob)s(ject)f(it)h(is)f(manip-)122 1906 y(ulating.)21[m
[32m+[m[32mb(F)l(or)14 b(example,)f(inheritance)g(is)h(widely)g(used)g(in)h(windo)[m
[32m+[m[32mo(wing)f(systems.)20 b(Ev)o(erything)14 b(on)122 1966[m
[32m+[m[32my(the)g(screen)f(\(windo)o(ws,)i(scroll)f(bars,)h(titles,)e(icons\))h[m
[32m+[m[32m(is)g(its)g(o)o(wn)g(ob)s(ject,)g(but)g(they)g(all)g(share)g(a)h(set)[m
[32m+[m[32m122 2026 y(of)h(mem)n(b)q(er)d(functions)i(in)h(common,)d(suc)o(h)i(as)[m
[32m+[m[32mh(a)g(routine)f Fd(Repaint)e Ff(to)j(redra)o(w)f(the)h(ob)s(ject)f(on)o[m
[32m+[m[32m(to)122 2086 y(the)f(screen.)20 b(This)14 b(w)o(a)o(y)l(,)g(the)g(co)q[m
[32m+[m[32m(de)g(to)g(repain)o(t)g(the)g(en)o(tire)f(screen)g(can)h(simply)e(call)[m
[32m+[m[32mi(the)g Fd(Repaint)122 2146 y Ff(function)k(on)g(ev)o(ery)e(ob)s(ject)i[m
[32m+[m[32m(on)g(the)g(screen.)25 b(The)18 b(co)q(de)g(that)g(calls)g[m
[32m+[m[32mFd(Repaint)d Ff(do)q(esn't)j(need)g(to)122 2206 y(kno)o(w)e(whic)o(h)g[m
[32m+[m[32m(kinds)g(of)g(ob)s(jects)g(are)h(on)f(the)g(screen,)f(as)i(long)g(as)g[m
[32m+[m[32m(eac)o(h)f(implem)o(en)n(ts)e Fd(Repaint)p Ff(.)60 2308[m
[32m+[m[32my(2.)24 b(Y)l(ou)g(can)g(share)h(pieces)e(of)h(an)h(implem)o(e)o(n)o[m
[32m+[m[32m(tation)d(b)q(et)o(w)o(een)h(t)o(w)o(o)h(ob)s(jects.)44[m
[32m+[m[32mb(F)l(or)24 b(example,)g(if)122 2368 y(y)o(ou)19 b(w)o(ere)g(to)h[m
[32m+[m[32m(implem)o(en)n(t)d(b)q(oth)j(lists)f(and)h(sorted)g(lists)f(in)g(C,)g[m
[32m+[m[32m(y)o(ou'd)g(probably)h(\014nd)g(y)o(ourself)122 2429[m
[32m+[m[32my(rep)q(eating)14 b(co)q(de)g(in)f(b)q(oth)i(places)e({)h(in)f(fact,)h[m
[32m+[m[32m(y)o(ou)g(migh)o(t)e(b)q(e)i(really)e(tempted)g(to)i(only)f(impleme)o[m
[32m+[m[32m(n)o(t)122 2489 y(sorted)20 b(lists,)g(so)g(that)h(y)o(ou)e(only)h(had)[m
[32m+[m[32mg(to)h(debug)f(one)g(v)o(ersion.)31 b(Inheritance)19[m
[32m+[m[32mb(pro)o(vides)g(a)h(w)o(a)o(y)122 2549 y(to)e(re-use)h(co)q(de)f(b)q[m
[32m+[m[32m(et)o(w)o(een)f(nearly)h(similar)e(classes.)27 b(F)l(or)18[m
[32m+[m[32mb(example,)e(giv)o(en)h(an)i(implem)o(en)o(tation)122[m
[32m+[m[32m2609 y(of)e(a)f(list)g(class,)g(in)g(C++)h(y)o(ou)f(can)h(implem)o(en)n[m
[32m+[m[32m(t)d(sorted)j(lists)e(b)o(y)h(replacing)g(the)g(insert)g(mem)o(b)q(er)[m
[32m+[m[32m122 2669 y(function)g({)h(the)f(other)g(functions,)g(delete,)e(isF)l[m
[32m+[m[32m(ull,)h(prin)o(t,)g(all)h(remain)e(the)i(same.)951 2795[m
[32m+[m[32my(11)p eop[m
[32m+[m[32m%%Page: 12 12[m
[32m+[m[32m12 11 bop 73 50 a Ff(Let)17 b(me)d(use)j(our)f(Stac)o(k)g(example)e(to)[m
[32m+[m[32mj(illustrate)e(the)h(\014rst)h(of)g(these.)k(Our)16 b(Stac)o(k)g[m
[32m+[m[32m(implem)o(en)o(tation)0 110 y(ab)q(o)o(v)o(e)g(could)f(ha)o(v)o(e)g(b)q[m
[32m+[m[32m(een)h(implem)o(en)o(te)o(d)d(with)j(link)o(ed)e(lists,)h(instead)h(of)[m
[32m+[m[32mg(an)g(arra)o(y)l(.)22 b(An)o(y)14 b(co)q(de)i(using)h(a)0[m
[32m+[m[32m170 y(Stac)o(k)f(shouldn't)h(care)f(whic)o(h)g(impleme)o(n)o(tation)e[m
[32m+[m[32m(is)j(b)q(eing)f(used,)h(except)f(that)h(the)f(link)o(ed)f(list)h[m
[32m+[m[32m(imple-)0 230 y(men)o(tation)d(can't)h(o)o(v)o(er\015o)o(w.)20[m
[32m+[m[32mb(\(In)14 b(fact,)g(w)o(e)g(could)g(also)h(c)o(hange)f(the)h(arra)o(y)f[m
[32m+[m[32m(implem)o(en)o(tation)d(to)k(handle)0 291 y(o)o(v)o(er\015o)o(w)h(b)o[m
[32m+[m[32m(y)f(automatically)g(resizing)g(the)h(arra)o(y)h(as)g(items)d(are)i[m
[32m+[m[32m(pushed)h(on)g(the)f(stac)o(k.\))73 351 y(T)l(o)f(allo)o(w)e(the)h(t)o[m
[32m+[m[32m(w)o(o)g(implem)o(e)o(n)o(tations)e(to)i(co)q(exist,)f(w)o(e)h(\014rst)[m
[32m+[m[32mg(de\014ne)f(an)i Fc(abstr)n(act)f Ff(Stac)o(k,)f(con)o(taining)0[m
[32m+[m[32m411 y(just)j(the)g(public)g(mem)n(b)q(er)e(functions,)i(but)g(no)h[m
[32m+[m[32m(data.)0 522 y Fd(class)24 b(Stack)g({)51 582 y(public:)179[m
[32m+[m[32m642 y(//)h(no)g(constructor)d(is)j(needed,)e(since)h(there's)f(no)i[m
[32m+[m[32m(data)f(to)h(initializ)o(e!)103 703 y(virtual)e(void)h(Push\(int)e[m
[32m+[m[32m(value\))i(=)h(0;)179 763 y(//)g(Push)f(an)h(integer,)e(checking)g(for)[m
[32m+[m[32mh(overflow.)103 823 y(virtual)f(bool)h(Full\(\))f(=)i(0;)179[m
[32m+[m[32m883 y(//)g(Returns)e(TRUE)i(if)f(the)h(stack)f(is)h(full,)e(FALSE)h[m
[32m+[m[32m(otherwise.)0 943 y(};)73 1054 y Ff(The)15 b Fd(Stack)e[m
[32m+[m[32mFf(de\014nition)h(is)g(called)g(a)h Fc(b)n(ase)h(class)f[m
[32m+[m[32mFf(or)h(sometime)o(s)c(a)j Fc(sup)n(er)n(class)p Ff(.)21[m
[32m+[m[32mb(W)l(e)14 b(can)h(then)f(de\014ne)0 1114 y(t)o(w)o(o)20[m
[32m+[m[32mb(di\013eren)o(t)g Fc(derive)n(d)i(classes)p Ff(,)g(sometimes)c(called)[m
[32m+[m[32mh Fc(sub)n(classes)j Ff(whic)o(h)e(inherit)f(b)q(eha)o(vior)i(from)e[m
[32m+[m[32m(the)0 1175 y(base)f(class.)24 b(\(Of)17 b(course,)g(inheritance)f(is)h[m
[32m+[m[32m(recursiv)o(e)e({)j(a)f(deriv)o(ed)f(class)h(can)g(in)g(turn)g(b)q(e)h[m
[32m+[m[32m(a)f(base)h(class)0 1235 y(for)g(y)o(et)f(another)i(deriv)o(ed)d[m
[32m+[m[32m(class,)i(and)h(so)f(on.\))27 b(Note)17 b(that)i(I)e(ha)o(v)o(e)g(prep)[m
[32m+[m[32mq(ended)h(the)g(functions)g(in)f(the)0 1295 y(base)g(class)f(is)g(prep)[m
[32m+[m[32mq(ended)g(with)g(the)g(k)o(eyw)o(ord)f Fd(virtual)p Ff(,)e(to)k[m
[32m+[m[32m(signify)e(that)i(they)e(can)i(b)q(e)f(rede\014ned)g(b)o(y)0[m
[32m+[m[32m1355 y(eac)o(h)g(of)h(the)g(t)o(w)o(o)f(deriv)o(ed)g(classes.)22[m
[32m+[m[32mb(The)17 b(t)o(w)o(o)g(virtual)f(functions)g(are)h(initialized)d(to)k[m
[32m+[m[32m(zero,)e(to)h(tell)e(the)0 1415 y(compiler)f(that)i(those)h(functions)f[m
[32m+[m[32m(m)o(ust)f(b)q(e)i(de\014ned)f(b)o(y)f(the)h(deriv)o(ed)f(classes.)73[m
[32m+[m[32m1476 y(Here's)j(ho)o(w)i(w)o(e)f(could)h(declare)e(the)i(arra)o[m
[32m+[m[32m(y-based)g(and)g(list-based)g(implem)o(en)n(tations)d(of)j[m
[32m+[m[32mFd(Stack)p Ff(.)0 1536 y(The)e(syn)o(tax)g Fd(:)51 b(Stack)16[m
[32m+[m[32mb Ff(signi\014es)i(that)h(b)q(oth)g Fd(ArrayStac)o(k)c[m
[32m+[m[32mFf(and)k Fd(ListStack)14 b Ff(are)k(kinds)g(of)h Fd(Stacks)p[m
[32m+[m[32mFf(,)0 1596 y(and)e(share)f(the)g(same)g(b)q(eha)o(vior)g(as)h(the)f[m
[32m+[m[32m(base)g(class.)0 1707 y Fd(class)24 b(ArrayStac)o(k)f(:)i(Stack)f({)51[m
[32m+[m[32mb(//)25 b(the)f(same)g(as)h(in)g(Section)e(2)51 1767[m
[32m+[m[32my(public:)103 1827 y(ArrayStac)o(k\()o(int)f(sz\);)75[m
[32m+[m[32mb(//)25 b(Constructor)o(:)48 b(initialize)22 b(variables,)g(allocate)h[m
[32m+[m[32m(space.)103 1888 y(~ArraySta)o(ck)o(\(\);)201 b(//)25[m
[32m+[m[32mb(Destructor:)73 b(deallocate)22 b(space)i(allocated)e(above.)103[m
[32m+[m[32m1948 y(void)i(Push\(int)e(value\);)h(//)i(Push)g(an)f(integer,)f[m
[32m+[m[32m(checking)g(for)h(overflow.)103 2008 y(bool)g(Full\(\);)125[m
[32m+[m[32mb(//)25 b(Returns)e(TRUE)h(if)h(the)g(stack)f(is)h(full,)e(FALSE)h[m
[32m+[m[32m(otherwise.)51 2068 y(private:)103 2128 y(int)g(size;)203[m
[32m+[m[32mb(//)25 b(The)g(maximum)e(capacity)f(of)j(the)g(stack.)103[m
[32m+[m[32m2188 y(int)f(top;)229 b(//)25 b(Index)f(of)h(the)f(lowest)g(unused)f[m
[32m+[m[32m(position.)103 2249 y(int)h(*stack;)151 b(//)25 b(A)g(pointer)f(to)g[m
[32m+[m[32m(an)h(array)f(that)g(holds)g(the)h(contents.)0 2309 y(};)0[m
[32m+[m[32m2429 y(class)f(ListStack)e(:)j(Stack)f({)51 2489 y(public:)103[m
[32m+[m[32m2550 y(ArrayStac)o(k\()o(\);)103 2610 y(~ArraySta)o(ck)o(\(\);)103[m
[32m+[m[32m2670 y(void)g(Push\(int)e(value\);)951 2795 y Ff(12)p[m
[32m+[m[32meop[m
[32m+[m[32m%%Page: 13 13[m
[32m+[m[32m13 12 bop 103 50 a Fd(bool)24 b(Full\(\);)51 110 y(private:)103[m
[32m+[m[32m170 y(List)g(*list;)f(//)i(list)f(of)h(items)f(pushed)f(on)i(the)g[m
[32m+[m[32m(stack)0 230 y(};)0 351 y(ListStack:)o(:Li)o(st)o(Sta)o(ck\()o(\))e({)[m
[32m+[m[32m103 411 y(list)h(=)h(new)f(List;)0 471 y(})0 592 y(ListStack:)o(:~L)o[m
[32m+[m[32m(is)o(tSt)o(ack)o(\(\))e({)103 652 y(delete)h(list;)0[m
[32m+[m[32m712 y(})0 832 y(void)h(ListStack:)o(:Pu)o(sh\()o(int)e(value\))h({)103[m
[32m+[m[32m892 y(list->Pre)o(pe)o(nd\()o(val)o(ue\))o(;)0 953 y(})0[m
[32m+[m[32m1073 y(bool)h(ListStack:)o(:Fu)o(ll\()o(\))f({)103 1133[m
[32m+[m[32my(return)g(FALSE;)49 b(//)25 b(this)f(stack)g(never)g(overflows)o(!)0[m
[32m+[m[32m1193 y(})73 1308 y Ff(The)11 b(neat)g(concept)f(here)h(is)f(that)i(I)e[m
[32m+[m[32m(can)h(assign)h(p)q(oin)o(ters)f(to)g(instances)f(of)i[m
[32m+[m[32mFd(ListStack)7 b Ff(or)k Fd(ArrayStack)0 1368 y Ff(to)17[m
[32m+[m[32mb(a)f(v)m(ariable)g(of)h(t)o(yp)q(e)e Fd(Stack)p Ff(,)f(and)j(then)f[m
[32m+[m[32m(use)h(them)d(as)j(if)f(they)g(w)o(ere)f(of)i(the)f(base)g(t)o(yp)q(e.)[m
[32m+[m[32m103 1482 y Fd(Stack)23 b(*stack1)g(=)j(new)e(ListStack;)103[m
[32m+[m[32m1542 y(Stack)f(*stack2)g(=)j(new)e(ArrayStack\()o(17)o(\);)103[m
[32m+[m[32m1663 y(if)g(\(!stack->Fu)o(ll\()o(\)\))205 1723 y(stack1->Pu)o(sh\()o[m
[32m+[m[32m(5\);)103 1783 y(if)g(\(!stack2->F)o(ull)o(\(\)\))205[m
[32m+[m[32m1843 y(stack2->Pu)o(sh\()o(6\);)73 1957 y Ff(The)17 b(compiler)e[m
[32m+[m[32m(automatically)g(in)o(v)o(ok)o(es)h Fd(ListStack)e Ff(op)q(erations)k[m
[32m+[m[32m(for)f Fd(stack1)p Ff(,)e(and)j Fd(ArrayStac)o(k)0 2017[m
[32m+[m[32my Ff(op)q(erations)23 b(for)f Fd(stack2)p Ff(.)36 b(In)21[m
[32m+[m[32mb(this)h(example,)e(since)i(I)f(nev)o(er)g(create)g(an)h(instance)g(of)[m
[32m+[m[32mg(the)f(abstract)0 2078 y(class)d Fd(Stack)p Ff(,)f(I)h(do)h(not)f[m
[32m+[m[32m(need)g(to)h Fc(implement)g Ff(its)f(functions.)28 b(This)18[m
[32m+[m[32mb(migh)o(t)f(seem)f(a)j(bit)f(strange,)h(but)0 2138 y(remem)n(b)q(er)10[m
[32m+[m[32mb(that)j(the)f(deriv)o(ed)f(classes)i(are)f(the)h(v)m(arious)g(implem)o[m
[32m+[m[32m(en)n(tations)d(of)j(Stac)o(k,)g(and)g(Stac)o(k)f(serv)o(es)0[m
[32m+[m[32m2198 y(only)k(to)h(re\015ect)e(the)h(shared)h(b)q(eha)o(vior)f(b)q(et)o[m
[32m+[m[32m(w)o(een)f(the)h(di\013eren)o(t)g(implem)o(e)o(n)o(tations.)73[m
[32m+[m[32m2258 y(OK,)h(what)i(ab)q(out)g(sharing)g(co)q(de,)f(the)g(other)g[m
[32m+[m[32m(reason)g(for)h(inheritance?)25 b(In)18 b(C++,)g(it)f(is)h(p)q(ossible)[m
[32m+[m[32m0 2318 y(to)f(use)f(mem)o(b)q(er)d(functions)j(\(and)h(data!\))22[m
[32m+[m[32mb(of)17 b(a)f(base)h(class)f(in)g(its)g(deriv)o(ed)f(class.)73[m
[32m+[m[32m2379 y(Supp)q(ose)i(that)f(I)g(w)o(an)o(ted)f(to)i(add)f(a)g(new)g(mem)[m
[32m+[m[32mo(b)q(er)d(function,)i Fd(NumberPush)o(ed\()o(\))p Ff(,)d(to)k(b)q(oth)[m
[32m+[m[32mh(imple-)0 2439 y(men)o(tations)e(of)i Fd(Stack)p Ff(.)i(The)e[m
[32m+[m[32mFd(ArrayStack)c Ff(class)j(already)g(k)o(eeps)g(coun)o(t)g(of)h(the)f[m
[32m+[m[32m(n)o(um)o(b)q(er)e(of)j(items)e(on)0 2499 y(the)g(stac)o(k,)f(so)i(I)e[m
[32m+[m[32m(could)h(duplicate)f(that)h(co)q(de)g(in)g Fd(ListStack)p[m
[32m+[m[32mFf(.)i(Ideally)l(,)d(I'd)g(lik)o(e)f(to)i(b)q(e)g(able)g(to)g(use)g[m
[32m+[m[32m(the)0 2559 y(same)g(co)q(de)i(in)f(b)q(oth)i(places.)j(With)16[m
[32m+[m[32mb(inheritance,)f(w)o(e)h(can)h(mo)o(v)o(e)d(the)i(coun)o(ter)g(in)o(to)[m
[32m+[m[32mg(the)h Fd(Stack)d Ff(class,)0 2619 y(and)j(then)f(in)o(v)o(ok)o(e)e[m
[32m+[m[32m(the)i(base)h(class)f(op)q(erations)i(from)d(the)h(deriv)o(ed)f(class)h[m
[32m+[m[32m(to)h(up)q(date)f(the)g(coun)o(ter.)951 2795 y(13)p eop[m
[32m+[m[32m%%Page: 14 14[m
[32m+[m[32m14 13 bop 0 50 a Fd(class)24 b(Stack)g({)51 110 y(public:)103[m
[32m+[m[32m170 y(virtual)f(void)h(Push\(int)e(value\);)i(//)g(Push)h(an)f[m
[32m+[m[32m(integer,)f(checking)g(for)h(overflow.)103 230 y(virtual)f(bool)h[m
[32m+[m[32m(Full\(\))f(=)i(0;)g(//)g(return)f(TRUE)g(if)h(full)103[m
[32m+[m[32m291 y(int)f(NumPushed\()o(\);)227 b(//)25 b(how)g(many)f(are)g[m
[32m+[m[32m(currently)f(on)i(the)f(stack?)51 351 y(protected:)103[m
[32m+[m[32m411 y(Stack\(\);)e(//)j(initialize)d(data)103 471 y(int)i(numPushed;)0[m
[32m+[m[32m531 y(};)0 652 y(Stack::Sta)o(ck\()o(\))e({)103 712 y(numPushed)g(=)j[m
[32m+[m[32m(0;)0 772 y(})0 892 y(void)f(Stack::Pus)o(h\(i)o(nt)e(value\))i({)103[m
[32m+[m[32m953 y(numPushed)o(++)o(;)0 1013 y(})0 1133 y(int)h(Stack::Nu)o(mP)o[m
[32m+[m[32m(ush)o(ed\()o(\))e({)103 1193 y(return)g(numPushed;)0[m
[32m+[m[32m1254 y(})73 1360 y Ff(W)l(e)16 b(can)h(then)g(mo)q(dify)e(b)q(oth)j[m
[32m+[m[32mFd(ArrayStac)o(k)13 b Ff(and)18 b Fd(ListStack)13 b Ff(to)k(mak)o(e)e[m
[32m+[m[32m(use)h(the)h(new)f(b)q(eha)o(vior)h(of)0 1420 y Fd(Stack)p[m
[32m+[m[32mFf(.)i(I'll)c(only)h(list)f(one)i(of)f(them)f(here:)0[m
[32m+[m[32m1526 y Fd(class)24 b(ArrayStac)o(k)f(:)i(Stack)f({)51[m
[32m+[m[32m1587 y(public:)103 1647 y(ArrayStac)o(k\()o(int)e(sz\);)103[m
[32m+[m[32m1707 y(~ArraySta)o(ck)o(\(\);)103 1767 y(void)i(Push\(int)e(value\);)[m
[32m+[m[32m103 1827 y(bool)i(Full\(\);)51 1888 y(private:)103 1948[m
[32m+[m[32my(int)g(size;)203 b(//)25 b(The)g(maximum)e(capacity)f(of)j(the)g[m
[32m+[m[32m(stack.)103 2008 y(int)f(*stack;)151 b(//)25 b(A)g(pointer)f(to)g(an)h[m
[32m+[m[32m(array)f(that)g(holds)g(the)h(contents.)0 2068 y(};)0[m
[32m+[m[32m2188 y(ArrayStack)o(::A)o(rr)o(ayS)o(tac)o(k\(i)o(nt)d(sz\))j(:)g[m
[32m+[m[32m(Stack\(\))e({)103 2249 y(size)h(=)h(sz;)103 2309 y(stack)e(=)j(new)e[m
[32m+[m[32m(int[size];)73 b(//)25 b(Let's)f(get)h(an)f(array)g(of)h(integers.)0[m
[32m+[m[32m2369 y(})0 2489 y(void)0 2550 y(ArrayStack)o(::P)o(us)o(h\(i)o(nt)d[m
[32m+[m[32m(value\))i({)103 2610 y(ASSERT\(!F)o(ul)o(l\(\))o(\);)103[m
[32m+[m[32m2670 y(stack[num)o(Pu)o(she)o(d])e(=)k(value;)951 2795[m
[32m+[m[32my Ff(14)p eop[m
[32m+[m[32m%%Page: 15 15[m
[32m+[m[32m15 14 bop 103 50 a Fd(Stack::Pu)o(sh)o(\(\);)150 b(//)25[m
[32m+[m[32mb(invoke)f(base)g(class)f(to)i(increment)e(numPushed)0[m
[32m+[m[32m110 y(})73 224 y Ff(There)16 b(are)g(a)h(few)f(things)h(to)f(note:)60[m
[32m+[m[32m337 y(1.)24 b(I)19 b(in)o(tro)q(duced)f(a)i(new)f(k)o(eyw)o(ord,)f[m
[32m+[m[32mFd(protected)p Ff(,)e(in)j(the)f(new)h(de\014nition)g(of)g[m
[32m+[m[32mFd(Stack)p Ff(.)28 b(F)l(or)19 b(a)h(base)122 397 y(class,)26[m
[32m+[m[32mb Fd(protected)21 b Ff(signi\014es)j(that)h(those)f(mem)o(b)q(er)d[m
[32m+[m[32m(data)k(and)g(functions)f(are)h(accessible)e(to)122 458[m
[32m+[m[32my(classes)16 b(deriv)o(ed)f(\(recursiv)o(ely\))f(from)h(this)h(class,)g[m
[32m+[m[32m(but)g(inaccessible)f(to)h(other)h(classes.)k(In)16 b(other)122[m
[32m+[m[32m518 y(w)o(ords,)g(protected)g(data)h(is)f Fd(public)e[m
[32m+[m[32mFf(to)i(deriv)o(ed)f(classes,)h(and)g Fd(private)e Ff(to)j(ev)o(ery)o[m
[32m+[m[32m(one)d(else.)20 b(W)l(e)122 578 y(only)j(w)o(an)o(t)f(p)q(eople)h(to)g[m
[32m+[m[32m(create)g Fd(ArrayStac)o(k)p Ff('s)d(or)j Fd(ListStack)p[m
[32m+[m[32mFf(')o(s;)g(hence,)h(w)o(e)e(mak)o(e)f Fd(Stack)p Ff('s)122[m
[32m+[m[32m638 y(constructor)c(a)f(protected)g(function.)60 740[m
[32m+[m[32my(2.)24 b(The)19 b(constructor)h(for)g Fd(ArrayStac)o(k)c[m
[32m+[m[32mFf(needs)j(to)h(in)o(v)o(ok)o(e)e(the)h(constructor)g(for)h[m
[32m+[m[32mFd(Stack)p Ff(,)e(in)h(order)122 800 y(to)i(initialize)e[m
[32m+[m[32mFd(numPushed)o Ff(.)33 b(It)20 b(do)q(es)i(that)f(b)o(y)g(adding)g[m
[32m+[m[32mFd(:)51 b(Stack\(\))19 b Ff(to)i(the)g(\014rst)g(line)f(in)g(the)122[m
[32m+[m[32m860 y(constructor:)122 994 y Fd(ArrayStack)o(::A)o(rr)o(ayS)o(tac)o[m
[32m+[m[32m(k\()o(int)i(sz\))j(:)g(Stack\(\))122 1129 y Ff(The)14[m
[32m+[m[32mb(same)f(thing)h(applies)f(to)h(destructors.)21 b(There)14[m
[32m+[m[32mb(are)g(sp)q(ecial)f(rules)h(for)g(whic)o(h)f(get)h(called)f(\014rst)[m
[32m+[m[32m122 1189 y({)20 b(the)f(constructor/destructor)i(for)f(the)f(base)h[m
[32m+[m[32m(class)g(or)g(the)g(constructor/destructor)g(for)g(the)122[m
[32m+[m[32m1249 y(deriv)o(ed)14 b(class.)20 b(All)14 b(I)h(should)h(sa)o(y)f(is,)f[m
[32m+[m[32m(it's)h(a)g(bad)h(idea)f(to)g(rely)f(on)i(whatev)o(er)f(the)f(rule)h[m
[32m+[m[32m(is)g({)g(more)122 1309 y(generally)l(,)g(it)g(is)h(a)h(bad)f(idea)g[m
[32m+[m[32m(to)h(write)e(co)q(de)i(whic)o(h)e(requires)g(the)h(reader)g(to)h[m
[32m+[m[32m(consult)f(a)g(man)o(ual)122 1369 y(to)h(tell)e(whether)h(or)g(not)h[m
[32m+[m[32m(the)f(co)q(de)g(w)o(orks!)60 1471 y(3.)24 b(The)13 b(in)o(terface)e[m
[32m+[m[32m(for)i(a)g(deriv)o(ed)e(class)i(automatically)e(includes)h(all)g[m
[32m+[m[32m(functions)h(de\014ned)f(for)h(its)g(base)122 1531 y(class,)18[m
[32m+[m[32mb(without)g(ha)o(ving)g(to)g(explicitly)d(list)i(them)g(in)g(the)h[m
[32m+[m[32m(deriv)o(ed)e(class.)26 b(Although)18 b(w)o(e)g(didn't)122[m
[32m+[m[32m1591 y(de\014ne)e Fd(NumPushed\()o(\))d Ff(in)j Fd(ArrayStack)o[m
[32m+[m[32mFf(,)d(w)o(e)j(can)g(still)f(call)h(it)g(for)g(those)h(ob)s(jects:)224[m
[32m+[m[32m1726 y Fd(ArrayStack)22 b(*s)j(=)h(new)e(ArrayStack)o(\(17)o(\);)224[m
[32m+[m[32m1846 y(ASSERT\(s->N)o(umP)o(ush)o(ed)o(\(\))e(==)j(0\);)g(//)g(should)e[m
[32m+[m[32m(be)i(initialize)o(d)e(to)i(0)60 1980 y Ff(4.)f(Con)o(v)o(ersely)l(,)11[m
[32m+[m[32mb(ev)o(en)g(though)i(w)o(e)e(ha)o(v)o(e)h(de\014ned)f(a)i(routine)e[m
[32m+[m[32mFd(Stack::Push)o(\(\))p Ff(,)e(if)j(w)o(e)f(in)o(v)o(ok)o(e)f[m
[32m+[m[32mFd(Push\(\))122 2040 y Ff(on)17 b(an)f Fd(ArrayStack)d[m
[32m+[m[32mFf(ob)s(ject,)i(w)o(e)h(will)f(get)h(the)g Fd(ArrayStack)p[m
[32m+[m[32mFf(')o(s)e(v)o(ersion)h(of)i Fd(Push)p Ff(:)224 2175[m
[32m+[m[32my Fd(Stack)24 b(*s)h(=)g(new)g(ArrayStack)o(\(17)o(\);)224[m
[32m+[m[32m2295 y(if)g(\(!s->Full\(\))o(\))e(//)h(ArrayStack:)o(:Fu)o(ll)327[m
[32m+[m[32m2355 y(s->Push\(5\))o(;)f(//)h(ArrayStack:)o(:Pu)o(sh)60[m
[32m+[m[32m2489 y Ff(5.)g Fd(Stack::Num)o(Pus)o(he)o(d\(\))18 b[m
[32m+[m[32mFf(is)k(not)g Fd(virtual)p Ff(.)35 b(That)23 b(means)d(that)j(it)e[m
[32m+[m[32m(cannot)h(b)q(e)g(re-de\014ned)g(b)o(y)122 2550 y Fd(Stack)p[m
[32m+[m[32mFf('s)16 b(deriv)o(ed)g(classes.)26 b(Some)16 b(p)q(eople)i(b)q(eliev)o[m
[32m+[m[32m(e)e(that)i(y)o(ou)g(should)g(mark)e Fc(al)r(l)j Ff(functions)f(in)g(a)[m
[32m+[m[32m122 2610 y(base)h(class)g(as)g Fd(virtual)p Ff(;)e(that)i(w)o(a)o(y)l[m
[32m+[m[32m(,)f(if)g(y)o(ou)h(later)f(w)o(an)o(t)h(to)g(implem)o(e)o(n)o(t)d(a)j[m
[32m+[m[32m(deriv)o(ed)e(class)i(that)122 2670 y(rede\014nes)d(a)g(function,)g(y)o[m
[32m+[m[32m(ou)g(don't)g(ha)o(v)o(e)g(to)h(mo)q(dify)d(the)i(base)h(class)f(to)h[m
[32m+[m[32m(do)g(so.)951 2795 y(15)p eop[m
[32m+[m[32m%%Page: 16 16[m
[32m+[m[32m16 15 bop 60 50 a Ff(6.)24 b(Mem)o(b)q(er)12 b(functions)i(in)g(a)h[m
[32m+[m[32m(deriv)o(ed)e(class)h(can)g(explicitly)e(in)o(v)o(ok)o(e)g(public)i(or)[m
[32m+[m[32mg(protected)g(functions)122 110 y(in)i(the)g(base)h(class,)e(b)o(y)h[m
[32m+[m[32m(the)g(full)g(name)f(of)h(the)g(function,)g Fd(Base::Fun)o(cti)o(on\()o[m
[32m+[m[32m(\))p Ff(,)d(as)k(in:)122 245 y Fd(void)24 b(ArrayStack)o(::P)o(ush)o[m
[32m+[m[32m(\(i)o(nt)e(value\))122 305 y({)224 365 y(...)224 425[m
[32m+[m[32my(Stack::Push)o(\(\);)150 b(//)25 b(invoke)e(base)i(class)e(to)i[m
[32m+[m[32m(increment)e(numPushed)122 486 y(})122 621 y Ff(Of)c(course,)h(if)f(w)o[m
[32m+[m[32m(e)g(just)h(called)e Fd(Push\(\))g Ff(here)h(\(without)g(prep)q(ending)[m
[32m+[m[32mh Fd(Stack::)p Ff(,)d(the)i(compiler)122 681 y(w)o(ould)i(think)g(w)o[m
[32m+[m[32m(e)g(w)o(ere)g(referring)f(to)i Fd(ArrayStac)o(k)p Ff('s)c[m
[32m+[m[32mFd(Push\(\))p Ff(,)i(and)i(so)g(that)g(w)o(ould)f(recurse,)122[m
[32m+[m[32m741 y(whic)o(h)15 b(is)i(not)f(exactly)f(what)i(w)o(e)f(had)h(in)f[m
[32m+[m[32m(mind)e(here.)73 855 y(Whew!)31 b(Inheritance)19 b(in)g(C++)g(in)o(v)o[m
[32m+[m[32m(olv)o(es)f(lots)i(and)g(lots)f(of)h(details.)31 b(But)19[m
[32m+[m[32mb(it's)g(real)g(do)o(wnside)g(is)0 915 y(that)j(it)g(tends)g(to)h[m
[32m+[m[32m(spread)f(implem)o(en)o(tation)d(details)j(across)h(m)o(ultiple)18[m
[32m+[m[32mb(\014les)k({)g(if)g(y)o(ou)g(ha)o(v)o(e)f(a)h(deep)0[m
[32m+[m[32m976 y(inheritance)16 b(tree,)g(it)g(can)h(tak)o(e)g(some)f(serious)h[m
[32m+[m[32m(digging)g(to)g(\014gure)h(out)f(what)h(co)q(de)f(actually)f(executes)0[m
[32m+[m[32m1036 y(when)g(a)h(mem)o(b)q(er)c(function)j(is)g(in)o(v)o(ok)o(ed.)73[m
[32m+[m[32m1096 y(So)21 b(the)f(question)f(to)i(ask)f(y)o(ourself)g(b)q(efore)g[m
[32m+[m[32m(using)g(inheritance)f(is:)29 b(what's)20 b(y)o(our)g(goal?)34[m
[32m+[m[32mb(Is)20 b(it)g(to)0 1156 y(write)h(y)o(our)f(programs)i(with)f(the)g[m
[32m+[m[32m(few)o(est)f(n)o(um)o(b)q(er)f(of)j(c)o(haracters)f(p)q(ossible?)36[m
[32m+[m[32mb(If)21 b(so,)h(inheritance)e(is)0 1216 y(really)13 b(useful,)i(but)f[m
[32m+[m[32m(so)i(is)e(c)o(hanging)h(all)f(of)h(y)o(our)f(function)h(and)g(v)m[m
[32m+[m[32m(ariable)f(names)g(to)h(b)q(e)f(one)h(letter)f(long)0[m
[32m+[m[32m1276 y({)j("a",)g("b",)g("c")g({)f(and)h(once)g(y)o(ou)f(run)h(out)f[m
[32m+[m[32m(of)h(lo)o(w)o(er)f(case)g(ones,)g(start)h(using)g(upp)q(er)g(case,)f[m
[32m+[m[32m(then)g(t)o(w)o(o)0 1337 y(c)o(haracter)f(v)m(ariable)f(names:)20[m
[32m+[m[32mb("XX)15 b(XY)f(XZ)g(Y)l(a)h(...")f(\(I'm)f(joking)i(here.\))21[m
[32m+[m[32mb(Needless)13 b(to)j(sa)o(y)l(,)f(it)f(is)h(really)0[m
[32m+[m[32m1397 y(easy)h(to)h(write)f(unreadable)g(co)q(de)g(using)h(inheritance.)[m
[32m+[m[32m73 1457 y(So)j(when)f(is)h(it)f(a)g(go)q(o)q(d)j(idea)d(to)g(use)h[m
[32m+[m[32m(inheritance)e(and)i(when)f(should)h(it)f(b)q(e)h(a)o(v)o(oided?)30[m
[32m+[m[32mb(My)19 b(rule)0 1517 y(of)i(th)o(um)o(b)d(is)j(to)f(only)g(use)h(it)f[m
[32m+[m[32m(for)h(represen)o(ting)e Fc(shar)n(e)n(d)h(b)n(ehavior)g[m
[32m+[m[32mFf(b)q(et)o(w)o(een)g(ob)s(jects,)g(and)h(to)g(nev)o(er)0[m
[32m+[m[32m1577 y(use)16 b(it)f(for)h(represen)o(ting)f Fc(shar)n(e)n(d)h[m
[32m+[m[32m(implementation)p Ff(.)23 b(With)15 b(C++,)h(y)o(ou)g(can)g(use)f[m
[32m+[m[32m(inheritance)g(for)h(b)q(oth)0 1638 y(concepts,)g(but)g(only)g(the)g[m
[32m+[m[32m(\014rst)h(will)e(lead)h(to)g(truly)g(simpler)e(implem)o(en)n(tations.)[m
[32m+[m[32m73 1698 y(T)l(o)h(illustrate)d(the)i(di\013erence)f(b)q(et)o(w)o(een)f[m
[32m+[m[32m(shared)j(b)q(eha)o(vior)e(and)i(shared)f(implem)o(en)o(tati)o(on,)e[m
[32m+[m[32m(supp)q(ose)0 1758 y(y)o(ou)20 b(had)h(a)f(whole)g(bunc)o(h)g(of)g[m
[32m+[m[32m(di\013eren)o(t)f(kinds)h(of)g(ob)s(jects)g(that)g(y)o(ou)g(needed)g[m
[32m+[m[32m(to)g(put)g(on)h(lists.)32 b(F)l(or)0 1818 y(example,)21[m
[32m+[m[32mb(almost)h(ev)o(erything)f(in)h(an)h(op)q(erating)h(system)d(go)q(es)i[m
[32m+[m[32m(on)g(a)g(list)f(of)h(some)f(sort:)34 b(bu\013ers,)0[m
[32m+[m[32m1878 y(threads,)16 b(users,)g(terminals,)e(etc.)73 1939[m
[32m+[m[32my(A)22 b(v)o(ery)e(common)g(approac)o(h)i(to)g(this)g(problem)e[m
[32m+[m[32m(\(particularly)h(among)h(p)q(eople)f(new)h(to)g(ob)s(ject-)0[m
[32m+[m[32m1999 y(orien)o(ted)13 b(programming\))g(is)h(to)g(mak)o(e)f(ev)o(ery)f[m
[32m+[m[32m(ob)s(ject)i(inherit)f(from)g(a)i(single)e(base)i(class)f[m
[32m+[m[32mFc(Obje)n(ct)p Ff(,)i(whic)o(h)0 2059 y(con)o(tains)22[m
[32m+[m[32mb(the)f(forw)o(ard)h(and)h(bac)o(kw)o(ard)e(p)q(oin)o(ters)h(for)g(the)[m
[32m+[m[32mf(list.)37 b(But)21 b(what)h(if)g(some)e(ob)s(ject)h(needs)0[m
[32m+[m[32m2119 y(to)f(go)h(on)f(m)o(ultiple)c(lists?)32 b(The)20[m
[32m+[m[32mb(whole)f(sc)o(heme)f(breaks)i(do)o(wn,)g(and)h(it's)e(b)q(ecause)h(w)o[m
[32m+[m[32m(e)f(tried)g(to)h(use)0 2179 y(inheritance)10 b(to)h(share)h(implem)o[m
[32m+[m[32m(en)n(tation)d(\(the)i(co)q(de)g(for)h(the)e(forw)o(ard)i(and)g(bac)o[m
[32m+[m[32m(kw)o(ard)f(p)q(oin)o(ters\))g(instead)0 2240 y(of)k(to)g(share)g(b)q[m
[32m+[m[32m(eha)o(vior.)21 b(A)14 b(m)o(uc)o(h)f(cleaner)g(\(although)j(sligh)o[m
[32m+[m[32m(tly)d(slo)o(w)o(er\))h(approac)o(h)i(w)o(ould)e(b)q(e)h(to)g(de\014ne)[m
[32m+[m[32m0 2300 y(a)f(list)e(implem)o(en)o(tati)o(on)f(that)j(allo)q(cated)f[m
[32m+[m[32m(forw)o(ard/bac)o(kw)o(ard)h(p)q(oin)o(ters)f(for)h(eac)o(h)e(ob)s[m
[32m+[m[32m(ject)h(that)g(gets)h(put)0 2360 y(on)j(a)f(list.)73[m
[32m+[m[32m2420 y(In)f(sum,)f(if)h(t)o(w)o(o)g(classes)g(share)g(at)h(least)f[m
[32m+[m[32m(some)f(of)h(the)g(same)f(mem)o(b)q(er)e(function)j(signatures)h({)g[m
[32m+[m[32m(that)0 2480 y(is,)f(the)g(same)f(b)q(eha)o(vior,)h Fc(and)g[m
[32m+[m[32mFf(if)g(there's)f(co)q(de)i(that)f(only)g(relies)f(on)i(the)f(shared)h[m
[32m+[m[32m(b)q(eha)o(vior,)f(then)g(there)0 2540 y Fc(may)g Ff(b)q(e)g(a)h(b)q[m
[32m+[m[32m(ene\014t)f(to)g(using)h(inheritance.)k(In)14 b(Nac)o(hos,)h(lo)q(c)o[m
[32m+[m[32m(ks)g(don't)h(inherit)e(from)g(semaphores,)g(ev)o(en)0[m
[32m+[m[32m2601 y(though)19 b(lo)q(c)o(ks)e(are)h(implem)o(en)o(ted)d(using)j[m
[32m+[m[32m(semaphores.)25 b(The)18 b(op)q(erations)h(on)g(semaphores)e(and)h(lo)q[m
[32m+[m[32m(c)o(ks)0 2661 y(are)d(di\013eren)o(t.)20 b(Instead,)c(inheritance)e[m
[32m+[m[32m(is)h(only)g(used)h(for)f(v)m(arious)h(kinds)f(of)h(lists)f(\(sorted,)g[m
[32m+[m[32m(k)o(ey)o(ed,)f(etc.\),)951 2795 y(16)p eop[m
[32m+[m[32m%%Page: 17 17[m
[32m+[m[32m17 16 bop 0 50 a Ff(and)14 b(for)f(di\013eren)o(t)g(implem)o(e)o(n)o[m
[32m+[m[32m(tations)e(of)j(the)e(ph)o(ysical)h(disk)g(abstraction,)h(to)f[m
[32m+[m[32m(re\015ect)f(whether)h(the)g(disk)0 110 y(has)i(a)h(trac)o(k)e[m
[32m+[m[32m(bu\013er,)h(etc.)20 b(A)14 b(disk)g(is)h(used)g(the)f(same)g(w)o(a)o[m
[32m+[m[32m(y)g(whether)h(or)g(not)g(it)f(has)i(a)f(trac)o(k)f(bu\013er;)h(the)0[m
[32m+[m[32m170 y(only)h(di\013erence)f(is)h(in)g(its)g(p)q(erformance)f(c)o[m
[32m+[m[32m(haracteristics.)0 314 y Fa(4.2)70 b(T)-6 b(emplates)0[m
[32m+[m[32m407 y Ff(T)l(emplates)21 b(are)h(another)h(useful)f(but)g(dangerous)i[m
[32m+[m[32m(concept)e(in)g(C++.)39 b(With)22 b(templates,)g(y)o(ou)g(can)0[m
[32m+[m[32m467 y(parameterize)16 b(a)i(class)h(de\014nition)e(with)h(a)h[m
[32m+[m[32mFc(typ)n(e)p Ff(,)f(to)g(allo)o(w)g(y)o(ou)g(to)g(write)g(generic)f(t)o[m
[32m+[m[32m(yp)q(e-indep)q(enden)o(t)0 527 y(co)q(de.)24 b(F)l(or)17[m
[32m+[m[32mb(example,)e(our)i Fd(Stack)f Ff(implem)o(en)n(tation)f(ab)q(o)o(v)o(e)[m
[32m+[m[32mi(only)g(w)o(ork)o(ed)f(for)i(push'ing)f(and)g(p)q(op'ing)0[m
[32m+[m[32m587 y Fc(inte)n(gers)p Ff(;)k(what)f(if)e(w)o(e)h(w)o(an)o(ted)g(a)g[m
[32m+[m[32m(stac)o(k)g(of)h(c)o(haracters,)f(or)g(\015oats,)i(or)e(p)q(oin)o[m
[32m+[m[32m(ters,)g(or)h(some)e(arbitrary)0 648 y(data)f(structure?)73[m
[32m+[m[32m708 y(In)f(C++,)g(this)g(is)g(prett)o(y)g(easy)g(to)g(do)h(using)g[m
[32m+[m[32m(templates:)0 820 y Fd(template)23 b(<class)g(T>)0 880[m
[32m+[m[32my(class)h(Stack)g({)51 940 y(public:)103 1001 y(Stack\(int)e(sz\);)101[m
[32m+[m[32mb(//)25 b(Constructo)o(r:)48 b(initializ)o(e)23 b(variables)o(,)g[m
[32m+[m[32m(allocate)f(space.)103 1061 y(~Stack\(\);)227 b(//)25[m
[32m+[m[32mb(Destructor)o(:)74 b(deallocat)o(e)23 b(space)g(allocated)g(above.)103[m
[32m+[m[32m1121 y(void)h(Push\(T)f(value\);)g(//)i(Push)f(an)h(integer,)e[m
[32m+[m[32m(checking)g(for)h(overflow.)103 1181 y(bool)g(Full\(\);)151[m
[32m+[m[32mb(//)25 b(Returns)e(TRUE)h(if)h(the)f(stack)g(is)h(full,)f(FALSE)g[m
[32m+[m[32m(otherwise)o(.)51 1241 y(private:)103 1302 y(int)g(size;)229[m
[32m+[m[32mb(//)25 b(The)f(maximum)f(capacity)g(of)i(the)g(stack.)103[m
[32m+[m[32m1362 y(int)f(top;)255 b(//)25 b(Index)f(of)h(the)f(lowest)f(unused)h[m
[32m+[m[32m(position.)103 1422 y(T)h(*stack;)177 b(//)25 b(A)g(pointer)e(to)i(an)g[m
[32m+[m[32m(array)e(that)i(holds)e(the)i(contents.)0 1482 y(};)73[m
[32m+[m[32m1595 y Ff(T)l(o)18 b(de\014ne)e(a)i(template,)c(w)o(e)j(prep)q(end)g[m
[32m+[m[32m(the)g(k)o(eyw)o(ord)f Fd(template)e Ff(to)j(the)g(class)g[m
[32m+[m[32m(de\014nition,)f(and)h(w)o(e)0 1655 y(put)h(the)g(parameterized)d(t)o[m
[32m+[m[32m(yp)q(e)j(for)g(the)f(template)f(in)i(angle)g(brac)o(k)o(ets.)25[m
[32m+[m[32mb(If)17 b(w)o(e)h(need)f(to)h(parameterize)0 1715 y(the)g(implem)o(en)n[m
[32m+[m[32m(tation)e(with)h(t)o(w)o(o)h(or)h(more)d(t)o(yp)q(es,)i(it)f(w)o(orks)h[m
[32m+[m[32m(just)h(lik)o(e)d(an)i(argumen)o(t)f(list:)24 b Fd(template)0[m
[32m+[m[32m1775 y(<class)f(T,)i(class)f(S>)p Ff(.)c(W)l(e)c(can)f(use)h(the)f(t)o[m
[32m+[m[32m(yp)q(e)g(parameters)g(elsewhere)f(in)h(the)g(de\014nition,)g(just)h[m
[32m+[m[32m(lik)o(e)0 1835 y(they)g(w)o(ere)f(normal)g(t)o(yp)q(es.)73[m
[32m+[m[32m1896 y(When)i(w)o(e)g(pro)o(vide)f(the)h(implem)o(en)o(t)o(ation)e(for)[m
[32m+[m[32mi(eac)o(h)g(of)g(the)g(mem)o(b)q(er)d(functions)j(in)g(the)g(class,)f[m
[32m+[m[32m(w)o(e)0 1956 y(also)k(ha)o(v)o(e)f(to)i(declare)d(them)h(as)h[m
[32m+[m[32m(templates,)e(and)j(again,)g(once)f(w)o(e)f(do)h(that,)h(w)o(e)e(can)h[m
[32m+[m[32m(use)g(the)g(t)o(yp)q(e)0 2016 y(parameters)15 b(just)i(lik)o(e)d[m
[32m+[m[32m(normal)h(t)o(yp)q(es:)128 2128 y Fd(//)25 b(template)e(version)g(of)i[m
[32m+[m[32m(Stack::St)o(ack)0 2188 y(template)e(<class)g(T>)0 2249[m
[32m+[m[32my(Stack<T>::)o(Sta)o(ck)o(\(in)o(t)g(sz\))h({)103 2309[m
[32m+[m[32my(size)g(=)h(sz;)103 2369 y(top)f(=)h(0;)103 2429 y(stack)e(=)j(new)e[m
[32m+[m[32m(T[size];)74 b(//)25 b(Let's)f(get)g(an)h(array)f(of)h(type)f(T)0[m
[32m+[m[32m2489 y(})128 2610 y(//)h(template)e(version)g(of)i(Stack::Pu)o(sh)0[m
[32m+[m[32m2670 y(template)e(<class)g(T>)951 2795 y Ff(17)p eop[m
[32m+[m[32m%%Page: 18 18[m
[32m+[m[32m18 17 bop 0 50 a Fd(void)0 110 y(Stack<T>::)o(Pus)o(h\()o(T)23[m
[32m+[m[32mb(value\))g({)103 170 y(ASSERT\(!F)o(ul)o(l\(\))o(\);)103[m
[32m+[m[32m230 y(stack[top)o(++)o(])g(=)i(value;)0 291 y(})73 390[m
[32m+[m[32my Ff(Creating)17 b(an)f(ob)s(ject)g(of)h(a)f(template)f(class)h(is)g[m
[32m+[m[32m(similar)e(to)j(creating)f(a)g(normal)g(ob)s(ject:)0[m
[32m+[m[32m490 y Fd(void)0 551 y(test\(\))23 b({)103 611 y(Stack<int)o(>)f[m
[32m+[m[32m(stack1\(17\);)103 671 y(Stack<cha)o(r>)g(*stack2)h(=)i(new)g[m
[32m+[m[32m(Stack<char)o(>\(2)o(3\))o(;)103 791 y(stack1.Pu)o(sh)o(\(5\))o(;)103[m
[32m+[m[32m851 y(stack2->P)o(us)o(h\(')o(z'\))o(;)103 912 y(delete)e(stack2;)0[m
[32m+[m[32m972 y(})73 1072 y Ff(Ev)o(erything)e(op)q(erates)i(as)f(if)g(w)o(e)f[m
[32m+[m[32m(de\014ned)h(t)o(w)o(o)g(classes,)g(one)g(called)f Fd(Stack<int>)e[m
[32m+[m[32mFf({)j(a)g(stac)o(k)g(of)0 1132 y(in)o(tegers,)c(and)g(one)h(called)e[m
[32m+[m[32mFd(Stack<char>)d Ff({)19 b(a)g(stac)o(k)f(of)g(c)o(haracters.)28[m
[32m+[m[32mb Fd(stack1)16 b Ff(b)q(eha)o(v)o(es)i(just)g(lik)o(e)f(an)0[m
[32m+[m[32m1192 y(instance)f(of)h(the)f(\014rst;)g Fd(stack2)e Ff(b)q(eha)o(v)o[m
[32m+[m[32m(es)h(just)i(lik)o(e)d(an)j(instance)f(of)h(the)f(second.)73[m
[32m+[m[32m1252 y(So)h(what's)g(wrong)g(with)f(templates?)k(Y)l(ou'v)o(e)15[m
[32m+[m[32mb(all)g(b)q(een)h(taugh)o(t)h(to)g(mak)o(e)d(y)o(our)i(co)q(de)h(mo)q[m
[32m+[m[32m(dular)e(so)0 1312 y(that)i(it)e(can)i(b)q(e)f(re-usable,)g(so)h[m
[32m+[m[32mFc(everything)g Ff(should)g(b)q(e)g(a)f(template,)e(righ)o(t?)21[m
[32m+[m[32mb(W)l(rong.)73 1373 y(The)c(principal)e(problem)g(with)i(templates)d[m
[32m+[m[32m(is)j(that)g(they)f(can)g(b)q(e)h Fc(very)g Ff(di\016cult)e(to)i(debug)[m
[32m+[m[32mg({)f(tem-)0 1433 y(plates)h(are)g(easy)h(to)f(use)h(if)e(they)h(w)o[m
[32m+[m[32m(ork,)g(but)g(\014nding)h(a)g(bug)f(in)g(them)f(can)h(b)q(e)h[m
[32m+[m[32m(di\016cult.)23 b(In)16 b(part)i(this)0 1493 y(is)f(b)q(ecause)h[m
[32m+[m[32m(curren)o(t)f(generation)h(C++)g(debuggers)g(don't)g(really)e[m
[32m+[m[32m(understand)j(templates)c(v)o(ery)i(w)o(ell.)0 1553 y(Nev)o(ertheless,)[m
[32m+[m[32m12 b(it)h(is)g(easier)h(to)g(debug)g(a)g(template)e(than)i(t)o(w)o(o)g[m
[32m+[m[32m(nearly)f(iden)o(tical)f(implem)o(e)o(n)o(tations)g(that)0[m
[32m+[m[32m1613 y(di\013er)k(only)g(in)g(their)f(t)o(yp)q(es.)73[m
[32m+[m[32m1674 y(So)k(the)g(b)q(est)g(advice)e(is)i({)g(don't)g(mak)o(e)d(a)k[m
[32m+[m[32m(class)e(in)o(to)h(a)g(template)d(unless)j(there)f(really)f(is)i(a)g[m
[32m+[m[32m(near)0 1734 y(term)f(use)j(for)f(the)g(template.)31[m
[32m+[m[32mb(And)20 b(if)g(y)o(ou)g(do)g(need)g(to)h(implem)o(en)n(t)c(a)k[m
[32m+[m[32m(template,)e(implem)o(en)n(t)e(and)0 1794 y(debug)h(a)f(non-template)f[m
[32m+[m[32m(v)o(ersion)h(\014rst.)24 b(Once)17 b(that)h(is)f(w)o(orking,)g(it)g(w)[m
[32m+[m[32mo(on't)g(b)q(e)g(hard)h(to)g(con)o(v)o(ert)e(it)h(to)0[m
[32m+[m[32m1854 y(a)g(template.)0 2019 y Fe(5)83 b(F)-7 b(eatures)26[m
[32m+[m[32mb(T)-7 b(o)29 b(Av)n(oid)e(Lik)n(e)f(the)h(Plague)0 2128[m
[32m+[m[32my Ff(Despite)12 b(the)h(length)f(of)h(this)g(note,)g(there)f(are)g(n)o[m
[32m+[m[32m(umerous)g(features)h(in)f(C++)h(that)g(I)f(ha)o(v)o(en't)g(explained.)[m
[32m+[m[32m0 2188 y(I'm)h(sure)i(eac)o(h)f(feature)h(has)g(its)g(adv)o(o)q(cates,)[m
[32m+[m[32mg(but)g(despite)f(programming)g(in)g(C)i(and)f(C++)g(for)g(o)o(v)o(er)f[m
[32m+[m[32m(15)0 2249 y(y)o(ears,)f(I)h(ha)o(v)o(en't)e(found)j(a)f(comp)q(elling)[m
[32m+[m[32md(reason)k(to)f(use)g(them)e(in)h(an)o(y)h(co)q(de)g(that)g(I'v)o(e)e[m
[32m+[m[32m(written)h(\(outside)0 2309 y(of)k(a)f(programming)f(language)i[m
[32m+[m[32m(class!\))73 2369 y(Indeed,)11 b(there)f(is)h(a)g(comp)q(elling)e[m
[32m+[m[32m(reason)j(to)f(a)o(v)o(oid)f(using)i(these)e(features)h({)g(they)g(are)[m
[32m+[m[32mg(easy)g(to)g(misuse,)0 2429 y(resulting)h(in)g(programs)h(that)g(are)f[m
[32m+[m[32m(harder)h(to)g(read)f(and)h(understand)h(instead)e(of)h(easier)f(to)h[m
[32m+[m[32m(understand.)0 2489 y(In)k(most)g(cases,)h(the)g(features)g(are)f(also)[m
[32m+[m[32mi(redundan)o(t)f({)g(there)f(are)h(other)f(w)o(a)o(ys)h(of)g[m
[32m+[m[32m(accomplishing)e(the)0 2550 y(same)i(end.)30 b(Wh)o(y)18[m
[32m+[m[32mb(ha)o(v)o(e)h(t)o(w)o(o)g(w)o(a)o(ys)g(of)g(doing)h(the)f(same)f[m
[32m+[m[32m(thing?)30 b(Wh)o(y)19 b(not)h(stic)o(k)d(with)i(the)g(simpler)0[m
[32m+[m[32m2610 y(one?)73 2670 y(I)d(do)h(not)f(use)h(an)o(y)f(of)g(the)g(follo)o[m
[32m+[m[32m(wing)g(features)h(in)e(Nac)o(hos.)22 b(If)15 b(y)o(ou)i(use)f(them,)e[m
[32m+[m[32mFc(c)n(ave)n(at)k(hacker)p Ff(.)951 2795 y(18)p eop[m
[32m+[m[32m%%Page: 19 19[m
[32m+[m[32m19 18 bop 60 50 a Ff(1.)24 b Fb(Multiple)17 b(inheritance.)j[m
[32m+[m[32mFf(It)c(is)g(p)q(ossible)g(in)g(C++)g(to)h(de\014ne)f(a)h(class)f(as)h[m
[32m+[m[32m(inheriting)e(b)q(eha)o(vior)122 110 y(from)g(m)o(ultiple)e(classes)j[m
[32m+[m[32m(\(for)g(instance,)f(a)i(dog)g(is)f(b)q(oth)h(an)f(animal)f(and)h(a)h[m
[32m+[m[32m(furry)f(thing\).)21 b(But)16 b(if)122 170 y(programs)f(using)h(single)[m
[32m+[m[32mf(inheritance)f(can)i(b)q(e)g(di\016cult)e(to)h(un)o(tangle,)g[m
[32m+[m[32m(programs)h(with)f(m)o(ultiple)122 230 y(inheritance)g(can)h(get)h[m
[32m+[m[32m(really)e(confusing.)60 332 y(2.)24 b Fb(References.)e[m
[32m+[m[32mFf(Reference)15 b(v)m(ariables)i(are)g(rather)h(hard)f(to)h(understand)[m
[32m+[m[32mf(in)g(general;)g(they)g(pla)o(y)122 392 y(the)j(same)e(role)i(as)g(p)q[m
[32m+[m[32m(oin)o(ters,)h(with)e(sligh)o(tly)g(di\013eren)o(t)g(syn)o(tax)h[m
[32m+[m[32m(\(unfortunately)l(,)g(I'm)d(not)k(jok-)122 452 y(ing!\))g(Their)15[m
[32m+[m[32mb(most)g(common)e(use)i(is)h(to)f(declare)g(some)f(parameters)h(to)h(a)[m
[32m+[m[32mg(function)f(as)h Fc(r)n(efer)n(enc)n(e)122 513 y(p)n(ar)n(ameters)p[m
[32m+[m[32mFf(,)d(as)j(in)f(P)o(ascal.)21 b(A)14 b(call-b)o(y-reference)f[m
[32m+[m[32m(parameter)h(can)h(b)q(e)g(mo)q(di\014ed)f(b)o(y)h(the)g(calling)122[m
[32m+[m[32m573 y(function,)20 b(without)g(the)g(callee)e(ha)o(ving)i(to)g(pass)h[m
[32m+[m[32m(a)f(p)q(oin)o(ter.)32 b(The)20 b(e\013ect)f(is)h(that)g(parameters)122[m
[32m+[m[32m633 y(lo)q(ok)f(\(to)g(the)f(caller\))f(lik)o(e)g(they)h(are)g(called)g[m
[32m+[m[32m(b)o(y)g(v)m(alue)g(\(and)h(therefore)f(can't)g(c)o(hange\),)h(but)f[m
[32m+[m[32m(in)122 693 y(fact)i(can)h(b)q(e)f(transparen)o(tly)g(mo)q(di\014ed)f[m
[32m+[m[32m(b)o(y)h(the)g(called)g(function.)33 b(Ob)o(viously)l(,)20[m
[32m+[m[32mb(this)g(can)g(b)q(e)h(a)122 753 y(source)15 b(of)h(obscure)g(bugs,)g[m
[32m+[m[32m(not)g(to)f(men)o(tion)f(that)i(the)f(seman)o(tics)f(of)h(references)f[m
[32m+[m[32m(in)h(C++)h(are)f(in)122 814 y(general)h(not)h(ob)o(vious.)60[m
[32m+[m[32m915 y(3.)24 b Fb(Op)r(erator)13 b(o)n(v)n(erloading.)20[m
[32m+[m[32mb Ff(C++)12 b(lets)f(y)o(ou)h(rede\014ne)g(the)g(meanings)f(of)h(the)g[m
[32m+[m[32m(op)q(erators)i(\(suc)o(h)d(as)122 975 y Fd(+)k Ff(and)h[m
[32m+[m[32mFd(>>)p Ff(\))f(for)h(class)g(ob)s(jects.)k(This)c(is)g(dangerous)h(at)[m
[32m+[m[32me(b)q(est)h(\("exactly)f(whic)o(h)g(implem)o(en)o(tation)122[m
[32m+[m[32m1035 y(of)21 b('+')f(do)q(es)h(this)g(refer)f(to?"\),)i(and)f(when)g[m
[32m+[m[32m(used)g(in)f(non-in)o(tuitiv)o(e)f(w)o(a)o(ys,)j(a)f(source)g(of)g[m
[32m+[m[32m(great)122 1096 y(confusion,)16 b(made)e(w)o(orse)i(b)o(y)f(the)g(fact)[m
[32m+[m[32mh(that)f(C++)h(do)q(es)g(implicit)d(t)o(yp)q(e)i(con)o(v)o(ersion,)f[m
[32m+[m[32m(whic)o(h)h(can)122 1156 y(a\013ect)i(whic)o(h)f(op)q(erator)i(is)f(in)[m
[32m+[m[32mo(v)o(ok)o(ed.)k(Unfortunately)l(,)16 b(C++'s)g(I/O)h(facilities)e(mak)[m
[32m+[m[32mo(e)g(hea)o(vy)h(use)122 1216 y(of)e(op)q(erator)h(o)o(v)o(erloading)f[m
[32m+[m[32m(and)g(references,)f(so)h(y)o(ou)g(can't)f(completely)e(escap)q(e)j[m
[32m+[m[32m(them,)f(but)h(think)122 1276 y(t)o(wice)h(b)q(efore)h(y)o(ou)g[m
[32m+[m[32m(rede\014ne)g('+')f(to)i(mean)e(\\concatenate)i(these)e(t)o(w)o(o)i[m
[32m+[m[32m(strings".)60 1378 y(4.)24 b Fb(F)-5 b(unction)23 b(o)n(v)n(erloading.)[m
[32m+[m[32m33 b Ff(Y)l(ou)21 b(can)f(also)h(de\014ne)f(di\013eren)o(t)f(functions)[m
[32m+[m[32mh(in)g(a)h(class)f(with)g(the)122 1438 y(same)g(name)f(but)i[m
[32m+[m[32m(di\013eren)o(t)f(argumen)o(t)g(t)o(yp)q(es.)35 b(This)20[m
[32m+[m[32mb(is)h(also)g(dangerous)i(\(since)d(it's)g(easy)h(to)122[m
[32m+[m[32m1498 y(slip)15 b(up)h(and)h(get)f(the)f(unin)o(tended)g(v)o(ersion\),)g[m
[32m+[m[32m(and)h(w)o(e)g(nev)o(er)e(use)i(it.)21 b(W)l(e)15 b(will)g(also)h(a)o[m
[32m+[m[32m(v)o(oid)g(using)122 1558 y(default)i(argumen)o(ts)f(\(for)h(the)g[m
[32m+[m[32m(same)g(reason\).)27 b(Note)18 b(that)h(it)e(can)i(b)q(e)f(a)h(go)q(o)q[m
[32m+[m[32m(d)h(idea)e(to)g(use)g(the)122 1619 y(same)h(name)h(for)g(functions)h[m
[32m+[m[32m(in)f(di\013eren)o(t)f(classes,)i(pro)o(vided)f(they)g(use)g(the)h[m
[32m+[m[32m(same)e(argumen)o(ts)122 1679 y(and)f(b)q(eha)o(v)o(e)f(the)g(same)f(w)[m
[32m+[m[32mo(a)o(y)h({)h(a)g(go)q(o)q(d)h(example)c(of)j(this)f(is)g(that)h(most)e[m
[32m+[m[32m(Nac)o(hos)i(ob)s(jects)f(ha)o(v)o(e)122 1739 y(a)g Fd(Print\(\))c[m
[32m+[m[32mFf(metho)q(d.)60 1841 y(5.)24 b Fb(Standard)h(template)c(library)f[m
[32m+[m[32mFf(An)h(ANSI)e(standard)k(has)e(emerged)e(for)i(a)h(library)e(of)h[m
[32m+[m[32m(rou-)122 1901 y(tines)15 b(implem)o(en)n(ting)e(suc)o(h)i(things)g(as)[m
[32m+[m[32mh(lists,)f(hash)h(tables,)f(etc.,)e(called)i(the)g(standard)h(template)[m
[32m+[m[32m122 1961 y(library)l(.)j(Using)13 b(suc)o(h)g(a)h(library)e(should)i[m
[32m+[m[32m(mak)o(e)d(programming)h(m)o(uc)o(h)f(simpler)g(if)i(the)g(data)h[m
[32m+[m[32m(struc-)122 2021 y(ture)k(y)o(ou)g(need)f(is)h(already)g(pro)o(vided)f[m
[32m+[m[32m(in)h(the)f(library)l(.)26 b(Alas,)18 b(the)g(standard)h(template)d[m
[32m+[m[32m(library)122 2081 y(pushes)h(the)f(en)o(v)o(elop)q(e)f(of)i(legal)f[m
[32m+[m[32m(C++,)g(and)h(so)g(virtually)e(no)i(compilers)d(\(including)h(g++\))i[m
[32m+[m[32m(can)122 2142 y(supp)q(ort)24 b(it)e(to)q(da)o(y)l(.)42[m
[32m+[m[32mb(Not)23 b(to)g(men)o(tion)e(that)i(it)f(uses)i(\(big)e(surprise!\))41[m
[32m+[m[32mb(references,)23 b(op)q(erator)122 2202 y(o)o(v)o(erloading,)15[m
[32m+[m[32mb(and)i(function)f(o)o(v)o(erloading.)73 2315 y(While)f(I'm)f(at)j(it,)[m
[32m+[m[32me(there)g(are)i(a)f(n)o(um)o(b)q(er)f(of)h(features)g(of)g(C)h(that)f[m
[32m+[m[32m(y)o(ou)g(also)h(should)g(a)o(v)o(oid,)e(b)q(ecause)0[m
[32m+[m[32m2376 y(they)e(lead)h(to)h(bugs)f(and)h(mak)o(e)d(y)o(our)i(co)q(de)g[m
[32m+[m[32m(less)g(easy)g(to)g(understand.)21 b(See)14 b(Maguire's)f("W)l(riting)h[m
[32m+[m[32m(Solid)0 2436 y(Co)q(de")j(for)g(a)f(more)f(complete)f(discussion)j(of)[m
[32m+[m[32mf(this)g(issue.)21 b(All)15 b(of)i(these)e(features)i(are)f(legal)g(C;)[m
[32m+[m[32mg(what's)0 2496 y(legal)g(isn't)f(necessarily)h(go)q(o)q(d.)60[m
[32m+[m[32m2610 y(1.)24 b(P)o(oin)o(ter)15 b(arithmetic.)k(Runa)o(w)o(a)o(y)c(p)q[m
[32m+[m[32m(oin)o(ters)h(are)g(a)g(principal)f(source)h(of)g(hard-to-\014nd)i[m
[32m+[m[32m(bugs)e(in)g(C)122 2670 y(programs,)g(b)q(ecause)h(the)f(symptom)f(of)i[m
[32m+[m[32m(this)f(happ)q(ening)h(can)g(b)q(e)g(mangled)e(data)j(structures)e(in)[m
[32m+[m[32m951 2795 y(19)p eop[m
[32m+[m[32m%%Page: 20 20[m
[32m+[m[32m20 19 bop 122 50 a Ff(a)19 b(completely)d(di\013eren)o(t)i(part)i(of)f[m
[32m+[m[32m(the)g(program.)29 b(Dep)q(ending)20 b(on)f(exactly)f(whic)o(h)g(ob)s[m
[32m+[m[32m(jects)h(are)122 110 y(allo)q(cated)12 b(on)g(the)g(heap)g(in)g(whic)o[m
[32m+[m[32m(h)f(order,)h(p)q(oin)o(ter)g(bugs)h(can)f(app)q(ear)h(and)f(disapp)q[m
[32m+[m[32m(ear,)h(seemingly)122 170 y(at)j(random.)k(F)l(or)c(example,)c[m
[32m+[m[32mFd(printf)i Ff(sometime)o(s)f(allo)q(cates)j(mem)o(ory)d(on)j(the)f[m
[32m+[m[32m(heap,)g(whic)o(h)g(can)122 230 y(c)o(hange)j(the)g(addresses)g[m
[32m+[m[32m(returned)g(b)o(y)f(all)h(future)g(calls)f(to)h Fd(new)p[m
[32m+[m[32mFf(.)26 b(Th)o(us,)18 b(adding)h(a)f Fd(printf)e Ff(can)122[m
[32m+[m[32m291 y(c)o(hange)d(things)h(so)g(that)g(a)f(p)q(oin)o(ter)g(whic)o(h)g[m
[32m+[m[32m(used)g(to)h(\(b)o(y)f(happ)q(enstance\))h(mangle)e(a)i(critical)d[m
[32m+[m[32m(data)122 351 y(structure)18 b(\(suc)o(h)f(as)i(the)f(middle)d(of)k(a)f[m
[32m+[m[32m(thread's)g(execution)f(stac)o(k\),)h(no)o(w)g(o)o(v)o(erwrites)f[m
[32m+[m[32m(memory)122 411 y(that)g(ma)o(y)d(not)j(ev)o(en)e(b)q(e)h(used.)122[m
[32m+[m[32m491 y(The)f(b)q(est)h(w)o(a)o(y)f(to)h(a)o(v)o(oid)f(runa)o(w)o(a)o(y)g[m
[32m+[m[32m(p)q(oin)o(ters)h(is)f(\(no)h(surprise\))f(to)h(b)q(e)g[m
[32m+[m[32mFc(very)f Ff(careful)g(when)h(using)122 551 y(p)q(oin)o(ters.)21[m
[32m+[m[32mb(Instead)15 b(of)g(iterating)g(through)h(an)g(arra)o(y)f(with)g(p)q[m
[32m+[m[32m(oin)o(ter)g(arithmetic,)d(use)j(a)h(separate)122 611[m
[32m+[m[32my(index)k(v)m(ariable,)i(and)g(assert)g(that)g(the)f(index)g(is)g(nev)o[m
[32m+[m[32m(er)f(larger)h(than)h(the)f(size)g(of)g(the)g(arra)o(y)l(.)122[m
[32m+[m[32m671 y(Optimizing)c(compilers)h(ha)o(v)o(e)h(gotten)h(v)o(ery)f(go)q(o)q[m
[32m+[m[32m(d,)j(so)f(that)f(the)g(generated)f(mac)o(hine)f(co)q(de)i(is)122[m
[32m+[m[32m731 y(lik)o(ely)14 b(to)i(b)q(e)h(the)f(same)f(in)h(either)f(case.)60[m
[32m+[m[32m831 y(2.)24 b(Casts)18 b(from)d(in)o(tegers)h(to)i(p)q(oin)o(ters)e[m
[32m+[m[32m(and)i(bac)o(k.)k(Another)17 b(source)g(of)g(runa)o(w)o(a)o(y)f(p)q[m
[32m+[m[32m(oin)o(ters)h(is)g(that)122 891 y(C)d(and)h(C++)g(allo)o(w)f(y)o(ou)g[m
[32m+[m[32m(to)g(con)o(v)o(ert)g(in)o(tegers)f(to)i(p)q(oin)o(ters,)f(and)h(bac)o[m
[32m+[m[32m(k)f(again.)21 b(Needless)13 b(to)i(sa)o(y)l(,)122 951[m
[32m+[m[32my(using)g(a)f(random)g(in)o(teger)g(v)m(alue)g(as)h(a)f(p)q(oin)o(ter)g[m
[32m+[m[32m(is)g(lik)o(ely)e(to)j(result)f(in)g(unpredictable)f(symptoms)122[m
[32m+[m[32m1011 y(that)k(will)e(b)q(e)h(v)o(ery)f(hard)i(to)g(trac)o(k)e(do)o(wn.)[m
[32m+[m[32m122 1091 y(In)h(addition,)h(on)g(some)e(64)i(bit)g(mac)o(hines,)d(suc)o[m
[32m+[m[32m(h)i(as)h(the)g(Alpha,)f(it)g(is)g(no)h(longer)g(the)f(case)h(that)122[m
[32m+[m[32m1151 y(the)k(size)f(of)h(an)h(in)o(teger)e(is)g(the)h(same)f(as)i(the)e[m
[32m+[m[32m(the)h(size)f(of)i(a)f(p)q(oin)o(ter.)35 b(If)21 b(y)o(ou)g(cast)g(b)q[m
[32m+[m[32m(et)o(w)o(een)122 1211 y(p)q(oin)o(ters)16 b(and)h(in)o(tegers,)e(y)o[m
[32m+[m[32m(ou)h(are)g(also)h(writing)f(highly)g(non-p)q(ortable)i(co)q(de.)60[m
[32m+[m[32m1311 y(3.)24 b(Using)15 b(bit)g(shift)g(in)f(place)h(of)g(a)h(m)o[m
[32m+[m[32m(ultiply)c(or)j(divide.)20 b(This)15 b(is)g(a)g(clarit)o(y)f(issue.)21[m
[32m+[m[32mb(If)14 b(y)o(ou)h(are)g(doing)122 1371 y(arithmetic,)k(use)j[m
[32m+[m[32m(arithmetic)c(op)q(erators;)25 b(if)20 b(y)o(ou)h(are)h(doing)f(bit)g[m
[32m+[m[32m(manipulation,)g(use)g(bit)o(wise)122 1431 y(op)q(erators.)41[m
[32m+[m[32mb(If)22 b(I)g(am)f(trying)i(to)f(m)o(ultiply)e(b)o(y)h(8,)j(whic)o(h)e[m
[32m+[m[32m(is)g(easier)g(to)h(understand,)h Fd(x)h(<<)g(3)122 1491[m
[32m+[m[32my Ff(or)d Fd(x)j(*)h(8)p Ff(?)37 b(In)22 b(the)f(70's,)i(when)f(C)g(w)o[m
[32m+[m[32m(as)g(b)q(eing)g(dev)o(elop)q(ed,)g(the)f(former)f(w)o(ould)i(yield)e[m
[32m+[m[32m(more)122 1552 y(e\016cien)o(t)13 b(mac)o(hine)g(co)q(de,)j(but)f(to)q[m
[32m+[m[32m(da)o(y's)h(compilers)d(generate)j(the)f(same)f(co)q(de)i(in)f(b)q(oth)[m
[32m+[m[32mh(cases,)f(so)122 1612 y(readabilit)o(y)g(should)i(b)q(e)f(y)o(our)g[m
[32m+[m[32m(primary)f(concern.)60 1711 y(4.)24 b(Assignmen)o(t)17[m
[32m+[m[32mb(inside)h(conditional.)28 b(Man)o(y)19 b(programmers)e(ha)o(v)o(e)h[m
[32m+[m[32m(the)g(attitude)h(that)g(simplicit)n(y)122 1771 y(equals)i(sa)o(ving)g[m
[32m+[m[32m(as)h(man)o(y)e(k)o(eystrok)o(es)g(as)i(p)q(ossible.)36[m
[32m+[m[32mb(The)22 b(result)e(can)i(b)q(e)f(to)h(hide)e(bugs)j(that)122[m
[32m+[m[32m1831 y(w)o(ould)16 b(otherwise)g(b)q(e)h(ob)o(vious.)k(F)l(or)16[m
[32m+[m[32mb(example:)224 1955 y Fd(if)25 b(\(x)g(=)h(y\))e({)276[m
[32m+[m[32m2016 y(...)122 2140 y Ff(W)l(as)c(the)g(in)o(ten)o(t)f(really)f[m
[32m+[m[32mFd(x)26 b(==)e(y)p Ff(?)32 b(After)19 b(all,)h(it's)f(prett)o(y)g(easy)[m
[32m+[m[32mh(to)g(mistak)o(enly)d(lea)o(v)o(e)i(o\013)h(the)122[m
[32m+[m[32m2200 y(extra)13 b(equals)g(sign.)21 b(By)12 b(nev)o(er)g(using)i[m
[32m+[m[32m(assignmen)o(t)e(within)h(a)h(conditional,)f(y)o(ou)g(can)h(tell)e(b)o[m
[32m+[m[32m(y)h(co)q(de)122 2260 y(insp)q(ection)j(whether)g(y)o(ou'v)o(e)f(made)g[m
[32m+[m[32m(a)h(mistak)o(e.)60 2359 y(5.)24 b(Using)c Fd(#define)d[m
[32m+[m[32mFf(when)j(y)o(ou)g(could)g(use)g Fd(enum)p Ff(.)31 b(When)20[m
[32m+[m[32mb(a)g(v)m(ariable)g(can)g(hold)g(one)g(of)g(a)h(small)122[m
[32m+[m[32m2420 y(n)o(um)o(b)q(er)12 b(of)i(v)m(alues,)g(the)g(original)g(C)g[m
[32m+[m[32m(practice)f(w)o(as)h(to)h(use)f Fd(#define)d Ff(to)j(set)g(up)g(sym)o[m
[32m+[m[32m(b)q(olic)e(names)122 2480 y(for)19 b(eac)o(h)g(of)g(the)g(v)m(alues.)[m
[32m+[m[32m30 b Fd(enum)17 b Ff(do)q(es)j(this)f(in)g(a)g(t)o(yp)q(e-safe)g(w)o(a)[m
[32m+[m[32mo(y)g({)h(it)e(allo)o(ws)h(the)g(compiler)e(to)122 2540[m
[32m+[m[32my(v)o(erify)c(that)j(the)e(v)m(ariable)h(is)g(only)g(assigned)g(one)h[m
[32m+[m[32m(of)f(the)g(en)o(umerated)e(v)m(alues,)h(and)i(none)f(other.)122[m
[32m+[m[32m2600 y(Again,)20 b(the)f(adv)m(an)o(tage)i(is)f(to)g(eliminate)c(a)k[m
[32m+[m[32m(class)g(of)g(errors)g(from)f(y)o(our)g(program,)h(making)e(it)122[m
[32m+[m[32m2660 y(quic)o(k)o(er)c(to)j(debug.)951 2795 y(20)p eop[m
[32m+[m[32m%%Page: 21 21[m
[32m+[m[32m21 20 bop 0 50 a Fe(6)83 b(St)n(yle)26 b(Guidelines)0[m
[32m+[m[32m159 y Ff(Ev)o(en)13 b(if)f(y)o(ou)h(follo)o(w)g(the)g(approac)o(h)h[m
[32m+[m[32m(I'v)o(e)d(outlined)i(ab)q(o)o(v)o(e,)g(it)g(is)g(still)f(as)i(easy)f[m
[32m+[m[32m(to)h(write)e(unreadable)h(and)0 220 y(undebuggable)g(co)q(de)g(in)f[m
[32m+[m[32m(C++)g(as)h(it)f(is)g(in)h(C,)f(and)h(p)q(erhaps)g(easier,)f(giv)o(en)g[m
[32m+[m[32m(the)g(more)f(p)q(o)o(w)o(erful)h(features)0 280 y(the)i(language)i[m
[32m+[m[32m(pro)o(vides.)k(F)l(or)15 b(the)f(Nac)o(hos)h(pro)s(ject,)f(and)h(in)g[m
[32m+[m[32m(general,)f(w)o(e)g(suggest)i(y)o(ou)f(adhere)f(to)h(the)0[m
[32m+[m[32m340 y(follo)o(wing)h(guidelines)f(\(and)i(tell)e(us)i(if)e(y)o(ou)h[m
[32m+[m[32m(catc)o(h)g(us)h(breaking)f(them\):)60 454 y(1.)24 b(W)l(ords)15[m
[32m+[m[32mb(in)f(a)h(name)e(are)h(separated)h(SmallT)l(alk-st)o(yle)c(\(i.e.,)i[m
[32m+[m[32m(capital)h(letters)f(at)i(the)f(start)h(of)g(eac)o(h)122[m
[32m+[m[32m514 y(new)j(w)o(ord\).)29 b(All)17 b(class)h(names)g(and)h(mem)n(b)q[m
[32m+[m[32m(er)d(function)i(names)g(b)q(egin)g(with)h(a)g(capital)f(letter,)122[m
[32m+[m[32m574 y(except)11 b(for)i(mem)o(b)q(er)d(functions)j(of)g(the)f(form)g[m
[32m+[m[32mFd(getSometh)o(ing)o(\(\))d Ff(and)14 b Fd(setSometh)o(in)o(g\(\))o[m
[32m+[m[32mFf(,)c(where)122 634 y Fd(Something)g Ff(is)j(a)g(data)h(elemen)o(t)c[m
[32m+[m[32m(of)j(the)g(class)g(\(i.e.,)f(accessor)h(functions\).)20[m
[32m+[m[32mb(Note)13 b(that)g(y)o(ou)g(w)o(ould)122 695 y(w)o(an)o(t)20[m
[32m+[m[32mb(to)h(pro)o(vide)f(suc)o(h)g(functions)g(only)h(when)f(the)g(data)i[m
[32m+[m[32m(should)f(b)q(e)f(visible)f(to)i(the)f(outside)122 755[m
[32m+[m[32my(w)o(orld,)e(but)g(y)o(ou)g(w)o(an)o(t)g(to)g(force)g(all)g(accesses)g[m
[32m+[m[32m(to)g(go)h(through)g(one)f(function.)27 b(This)18 b(is)g(often)g(a)122[m
[32m+[m[32m815 y(go)q(o)q(d)i(idea,)d(since)h(y)o(ou)f(migh)o(t)g(at)h(some)f[m
[32m+[m[32m(later)g(time)f(decide)h(to)h(compute)e(the)i(data)h(instead)f(of)122[m
[32m+[m[32m875 y(storing)f(it,)e(for)i(example.)60 977 y(2.)24 b(All)12[m
[32m+[m[32mb(global)i(functions)g(should)g(b)q(e)f(capitalized,)g(except)f(for)i[m
[32m+[m[32mFd(main)e Ff(and)i(library)f(functions,)h(whic)o(h)122[m
[32m+[m[32m1037 y(are)i(k)o(ept)g(lo)o(w)o(er-case)f(for)i(historical)e(reasons.)[m
[32m+[m[32m60 1139 y(3.)24 b(Minimize)13 b(the)k(use)g(of)h(global)f(v)m[m
[32m+[m[32m(ariables.)23 b(If)17 b(y)o(ou)g(\014nd)g(y)o(ourself)f(using)i(a)f[m
[32m+[m[32m(lot)g(of)h(them,)d(try)h(and)122 1199 y(group)22 b(some)e(together)i[m
[32m+[m[32m(in)f(a)h(class)f(in)g(a)h(natural)g(w)o(a)o(y)e(or)i(pass)g(them)e(as)[m
[32m+[m[32mi(argumen)o(ts)f(to)g(the)122 1259 y(functions)16 b(that)h(need)f(them)[m
[32m+[m[32me(if)i(y)o(ou)g(can.)60 1361 y(4.)24 b(Minimize)12 b(the)i(use)i(of)f[m
[32m+[m[32m(global)h(functions)f(\(as)h(opp)q(osed)g(to)g(mem)n(b)q(er)c[m
[32m+[m[32m(functions\).)21 b(If)15 b(y)o(ou)g(write)g(a)122 1421[m
[32m+[m[32my(function)i(that)g(op)q(erates)h(on)g(some)e(ob)s(ject,)g(consider)h[m
[32m+[m[32m(making)f(it)h(a)g(mem)o(b)q(er)d(function)j(of)h(that)122[m
[32m+[m[32m1481 y(ob)s(ject.)60 1583 y(5.)24 b(F)l(or)17 b(ev)o(ery)f(class)h(or)g[m
[32m+[m[32m(set)g(of)g(related)g(classes,)f(create)h(a)g(separate)h[m
[32m+[m[32mFd(.h)e Ff(\014le)g(and)i Fd(.cc)e Ff(\014le.)23 b(The)17[m
[32m+[m[32mb Fd(.h)122 1643 y Ff(\014le)i(acts)g(as)h(the)f Fc(interfac)n(e)h[m
[32m+[m[32mFf(to)g(the)f(class,)h(and)g(the)f Fd(.cc)f Ff(\014le)h(acts)g(as)h[m
[32m+[m[32m(the)g Fc(implementation)h Ff(\(a)122 1703 y(giv)o(en)d[m
[32m+[m[32mFd(.cc)g Ff(\014le)g(should)i Fd(include)c Ff(it's)j(resp)q(ectiv)o(e)e[m
[32m+[m[32mFd(.h)h Ff(\014le\).)29 b(If,)19 b(for)g(a)h(particular)e[m
[32m+[m[32mFd(.h)h Ff(\014le,)f(y)o(ou)122 1763 y(require)i(another)i[m
[32m+[m[32mFd(.h)e Ff(\014le)g(to)i(b)q(e)f(included)f(\(e.)36 b(g.,)22[m
[32m+[m[32mb Fd(synch.h)c Ff(needs)j Fd(thread.h)p Ff(\))d(y)o(ou)k(should)122[m
[32m+[m[32m1824 y(include)17 b(it)g(in)h(the)f Fd(.h)g Ff(\014le,)h(so)g(that)h[m
[32m+[m[32m(the)e(user)h(of)g(y)o(our)g(class)g(do)q(esn't)g(ha)o(v)o(e)g(to)g[m
[32m+[m[32m(trac)o(k)f(do)o(wn)i(all)122 1884 y(the)g(dep)q(endencies)f(himself.)[m
[32m+[m[32m27 b(T)l(o)19 b(protect)g(against)h(m)o(ultiple)c(inclusion,)i(brac)o[m
[32m+[m[32m(k)o(et)g(eac)o(h)g Fd(.h)h Ff(\014le)122 1944 y(with)d(something)f[m
[32m+[m[32m(lik)o(e:)122 2066 y Fd(#ifndef)23 b(STACK_H)122 2126[m
[32m+[m[32my(#define)g(STACK_H)122 2247 y(class)h(Stack)g({)h(...)f(};)122[m
[32m+[m[32m2367 y(#endif)122 2489 y Ff(Sometimes)15 b(this)j(will)f(not)i(b)q(e)g[m
[32m+[m[32m(enough,)g(and)g(y)o(ou)f(will)f(ha)o(v)o(e)h(a)g(circular)g(dep)q[m
[32m+[m[32m(endency)l(.)26 b(In)18 b(this)122 2550 y(case,)g(y)o(ou)h(will)e(ha)o[m
[32m+[m[32m(v)o(e)h(to)g(do)h(something)f(ad-ho)q(c:)27 b(if)18[m
[32m+[m[32mb(y)o(ou)g(only)g(use)h(a)f(p)q(oin)o(ter)h(to)f(class)h[m
[32m+[m[32mFd(Stack)122 2610 y Ff(and)f(do)g(not)g(access)g(an)o(y)f(elemen)o(ts)e[m
[32m+[m[32m(of)j(the)f(class,)g(y)o(ou)h(can)g(write,)e(in)i(lieu)e(of)i(the)f[m
[32m+[m[32m(actual)h(class)122 2670 y(de\014nition:)951 2795 y(21)p[m
[32m+[m[32meop[m
[32m+[m[32m%%Page: 22 22[m
[32m+[m[32m22 21 bop 122 50 a Fd(class)24 b(Stack;)122 158 y Ff(This)15[m
[32m+[m[32mb(will)f(tell)g(the)h(compiler)e(all)i(it)f(needs)h(to)h(kno)o(w)f(to)h[m
[32m+[m[32m(deal)f(with)g(the)g(p)q(oin)o(ter.)20 b(In)15 b(a)h(few)f(cases)122[m
[32m+[m[32m218 y(this)h(w)o(on't)g(w)o(ork,)g(and)h(y)o(ou)f(will)f(ha)o(v)o(e)h[m
[32m+[m[32m(to)g(mo)o(v)o(e)e(stu\013)j(around)g(or)g(alter)f(y)o(our)g[m
[32m+[m[32m(de\014nitions.)60 316 y(6.)24 b(Use)15 b Fd(ASSERT)f[m
[32m+[m[32mFf(statemen)o(ts)g(lib)q(erally)h(to)h(c)o(hec)o(k)e(that)i(y)o(our)g[m
[32m+[m[32m(program)g(is)g(b)q(eha)o(ving)f(prop)q(erly)l(.)21 b(An)122[m
[32m+[m[32m376 y(assertion)g(is)g(a)g(condition)g(that)g(if)g(F)-5[m
[32m+[m[32mb(ALSE)20 b(signi\014es)h(that)h(there)e(is)h(a)g(bug)g(in)g(the)g[m
[32m+[m[32m(program;)122 436 y Fd(ASSERT)13 b Ff(tests)i(an)h(expression)f(and)h[m
[32m+[m[32m(ab)q(orts)h(if)e(the)g(condition)g(is)g(false.)21 b(W)l(e)15[m
[32m+[m[32mb(used)g Fd(ASSERT)e Ff(ab)q(o)o(v)o(e)122 497 y(in)22[m
[32m+[m[32mb Fd(Stack::Pus)o(h\()o(\))d Ff(to)k(c)o(hec)o(k)d(that)j(the)f(stac)o[m
[32m+[m[32m(k)g(w)o(asn't)g(full.)38 b(The)23 b(idea)f(is)g(to)g(catc)o(h)g[m
[32m+[m[32m(errors)122 557 y(as)e(early)f(as)h(p)q(ossible,)h(when)e(they)h(are)f[m
[32m+[m[32m(easier)g(to)h(lo)q(cate,)h(instead)e(of)h(w)o(aiting)g(un)o(til)e[m
[32m+[m[32m(there)h(is)122 617 y(a)g(user-visible)e(symptom)g(of)i(the)f(error)h[m
[32m+[m[32m(\(suc)o(h)f(as)i(a)f(segmen)o(tation)e(fault,)i(after)g(mem)o(ory)d[m
[32m+[m[32m(has)122 677 y(b)q(een)g(trashed)h(b)o(y)f(a)g(rogue)h(p)q(oin)o[m
[32m+[m[32m(ter\).)122 756 y(Assertions)h(are)h(particularly)e(useful)h(at)g(the)h[m
[32m+[m[32m(b)q(eginnings)f(and)h(ends)g(of)f(pro)q(cedures,)h(to)g(c)o(hec)o(k)[m
[32m+[m[32m122 816 y(that)g(the)g(pro)q(cedure)g(w)o(as)h(called)e(with)h(the)g[m
[32m+[m[32m(righ)o(t)g(argumen)o(ts,)f(and)i(that)f(the)g(pro)q(cedure)g(did)122[m
[32m+[m[32m877 y(what)e(it)e(is)h(supp)q(osed)h(to.)22 b(F)l(or)16[m
[32m+[m[32mb(example,)d(at)k(the)f(b)q(eginning)g(of)g(List::Insert,)f(y)o(ou)h[m
[32m+[m[32m(could)g(assert)122 937 y(that)g(the)f(item)f(b)q(eing)i(inserted)f[m
[32m+[m[32m(isn't)g(already)g(on)h(the)f(list,)g(and)h(at)g(the)g(end)f(of)h(the)f[m
[32m+[m[32m(pro)q(cedure,)122 997 y(y)o(ou)h(could)g(assert)h(that)g(the)f(item)e[m
[32m+[m[32m(is)i(no)o(w)g(on)h(the)f(list.)122 1076 y(If)e(sp)q(eed)h(is)g(a)g[m
[32m+[m[32m(concern,)f(ASSER)l(Ts)h(can)g(b)q(e)g(de\014ned)f(to)h(mak)o(e)e(the)i[m
[32m+[m[32m(c)o(hec)o(k)e(in)h(the)h(debug)g(v)o(ersion)122 1136[m
[32m+[m[32my(of)j(y)o(our)g(program,)f(and)i(to)f(b)q(e)g(a)g(no-op)h(in)e(the)h[m
[32m+[m[32m(pro)q(duction)g(v)o(ersion.)25 b(But)18 b(man)o(y)e(p)q(eople)i(run)[m
[32m+[m[32m122 1196 y(with)e(ASSER)l(Ts)h(enabled)e(ev)o(en)g(in)h(pro)q(duction.)[m
[32m+[m[32m60 1294 y(7.)24 b(W)l(rite)16 b(a)i(mo)q(dule)e(test)h(for)h(ev)o(ery)d[m
[32m+[m[32m(mo)q(dule)h(in)h(y)o(our)g(program.)24 b(Man)o(y)17[m
[32m+[m[32mb(programmers)f(ha)o(v)o(e)g(the)122 1354 y(notion)j(that)f(testing)g[m
[32m+[m[32m(co)q(de)h(means)e(running)i(the)e(en)o(tire)g(program)h(on)h(some)e[m
[32m+[m[32m(sample)g(input;)i(if)122 1414 y(it)d(do)q(esn't)g(crash,)h(that)f[m
[32m+[m[32m(means)g(it's)f(w)o(orking,)h(righ)o(t?)22 b(W)l(rong.)g(Y)l(ou)16[m
[32m+[m[32mb(ha)o(v)o(e)g(no)g(w)o(a)o(y)g(of)h(kno)o(wing)122 1475[m
[32m+[m[32my(ho)o(w)i(m)o(uc)o(h)e(co)q(de)i(w)o(as)g(exercised)e(for)i(the)g[m
[32m+[m[32m(test.)29 b(Let)19 b(me)e(urge)i(y)o(ou)f(to)i(b)q(e)e(metho)q(dical)g[m
[32m+[m[32m(ab)q(out)122 1535 y(testing.)34 b(Before)20 b(y)o(ou)g(put)h(a)g(new)g[m
[32m+[m[32m(mo)q(dule)e(in)o(to)h(a)h(bigger)g(system,)f(mak)o(e)e(sure)j(the)f[m
[32m+[m[32m(mo)q(dule)122 1595 y(w)o(orks)h(as)g(adv)o(ertised)e(b)o(y)h(testing)h[m
[32m+[m[32m(it)f(standalone.)35 b(If)20 b(y)o(ou)g(do)h(this)f(for)h(ev)o(ery)e[m
[32m+[m[32m(mo)q(dule,)h(then)122 1655 y(when)d(y)o(ou)g(put)h(the)e(mo)q(dules)h[m
[32m+[m[32m(together,)g(instead)g(of)g Fc(hoping)h Ff(that)g(ev)o(erything)d(will)[m
[32m+[m[32mh(w)o(ork,)h(y)o(ou)122 1715 y(will)e Fc(know)i Ff(it)f(will)f(w)o[m
[32m+[m[32m(ork.)122 1794 y(P)o(erhaps)h(more)f(imp)q(ortan)o(tly)l(,)e(mo)q(dule)[m
[32m+[m[32mi(tests)h(pro)o(vide)f(an)i(opp)q(ortunit)o(y)f(to)g(\014nd)g(as)h(man)[m
[32m+[m[32mo(y)d(bugs)122 1854 y(as)h(p)q(ossible)f(in)g(a)g(lo)q(calized)f(con)o[m
[32m+[m[32m(text.)20 b(Whic)o(h)13 b(is)h(easier:)20 b(\014nding)14[m
[32m+[m[32mb(a)h(bug)f(in)g(a)g(100)i(line)d(program,)122 1915 y(or)k(in)e(a)i[m
[32m+[m[32m(10000)h(line)d(program?)0 2079 y Fe(7)83 b(Compiling)26[m
[32m+[m[32mb(and)i(Debugging)0 2188 y Ff(The)17 b(Mak)o(e\014les)f(w)o(e)h(will)f[m
[32m+[m[32m(giv)o(e)g(y)o(ou)h(w)o(orks)h(only)e(with)i(the)e(GNU)h(v)o(ersion)g[m
[32m+[m[32m(of)g(mak)o(e,)e(called)h(\\gmak)o(e".)0 2249 y(Y)l(ou)g(ma)o(y)f(w)o[m
[32m+[m[32m(an)o(t)h(to)h(put)f(\\alias)h(mak)o(e)d(gmak)o(e")h(in)h(y)o(our)g[m
[32m+[m[32m(.cshrc)g(\014le.)73 2309 y(Y)l(ou)g(should)g(use)f Fb(gdb)h[m
[32m+[m[32mFf(to)g(debug)g(y)o(our)f(program)g(rather)h(than)g Fb(db)n(x)p[m
[32m+[m[32mFf(.)21 b(Db)o(x)15 b(do)q(esn't)h(kno)o(w)g(ho)o(w)g(to)0[m
[32m+[m[32m2369 y(decipher)f(C++)h(names,)f(so)i(y)o(ou)f(will)f(see)h(function)g[m
[32m+[m[32m(names)g(lik)o(e)e Fd(Run__9Sche)o(dul)o(erP)o(6T)o(hre)o(ad)p[m
[32m+[m[32mFf(.)73 2429 y(On)19 b(the)g(other)g(hand,)h(in)e(GDB)h(\(but)g(not)h[m
[32m+[m[32m(DBX\))e(when)h(y)o(ou)g(do)g(a)g(stac)o(k)g(bac)o(ktrace)f(when)h(in)g[m
[32m+[m[32m(a)0 2489 y(fork)o(ed)c(thread)g(\(in)g(homew)o(ork)f(1\),)h(after)g[m
[32m+[m[32m(prin)o(ting)g(out)h(the)f(correct)f(frames)g(at)i(the)f(top)g(of)h[m
[32m+[m[32m(the)f(stac)o(k,)0 2550 y(the)e(debugger)h(will)e(sometimes)e(go)k(in)o[m
[32m+[m[32m(to)f(a)h(lo)q(op)g(prin)o(ting)e(the)h(lo)o(w)o(er-most)f(frame)g(\()p[m
[32m+[m[32mFd(ThreadRoo)o(t)p Ff(\),)e(and)0 2610 y(y)o(ou)15 b(ha)o(v)o(e)f(to)i[m
[32m+[m[32m(t)o(yp)q(e)e(con)o(trol-C)h(when)h(it)e(sa)o(ys)h(\\more?".)21[m
[32m+[m[32mb(If)14 b(y)o(ou)h(understand)h(assem)o(bly)d(language)j(and)0[m
[32m+[m[32m2670 y(can)g(\014x)h(this,)e(please)h(let)g(me)e(kno)o(w.)951[m
[32m+[m[32m2795 y(22)p eop[m
[32m+[m[32m%%Page: 23 23[m
[32m+[m[32m23 22 bop 0 50 a Fe(8)83 b(Example:)35 b(A)28 b(Stac)n(k)f(of)h(In)n[m
[32m+[m[32m(tegers)0 159 y Ff(W)l(e'v)o(e)13 b(pro)o(vided)h(the)g(complete,)f(w)o[m
[32m+[m[32m(orking)h(co)q(de)h(for)g(the)g(stac)o(k)f(example.)k(Y)l(ou)d(should)g[m
[32m+[m[32m(read)g(through)0 220 y(it)j(and)h(pla)o(y)e(around)j(with)e(it)f(to)i[m
[32m+[m[32m(mak)o(e)d(sure)j(y)o(ou)f(understand)h(the)f(features)g(of)g(C++)h[m
[32m+[m[32m(describ)q(ed)e(in)0 280 y(this)f(pap)q(er.)73 340 y(T)l(o)h(compile)d[m
[32m+[m[32m(the)i(stac)o(k)g(test,)f(do)i Fd(g++)25 b(stack.cc)d(test.cc)p[m
[32m+[m[32mFf(,)14 b(whic)o(h)h(giv)o(es)h(y)o(ou)g(an)h Fd(a.out)d[m
[32m+[m[32mFf(\014le.)0 506 y Fe(9)83 b(Epilogue)0 616 y Ff(I'v)o(e)12[m
[32m+[m[32mb(argued)i(in)g(this)f(note)h(that)h(y)o(ou)e(should)h(a)o(v)o(oid)g[m
[32m+[m[32m(using)g(certain)f(C++)h(and)g(C)g(features.)21 b(But)13[m
[32m+[m[32mb(y)o(ou're)0 676 y(probably)23 b(thinking)g(I)g(m)o(ust)e(b)q(e)j(lea)[m
[32m+[m[32mo(ving)e(something)g(out)h({)h(if)e(someone)h(put)g(the)g(feature)g(in)[m
[32m+[m[32mf(the)0 736 y(language,)15 b(there)f(m)o(ust)e(b)q(e)i(a)h(go)q(o)q(d)h[m
[32m+[m[32m(reason,)f(righ)o(t?)21 b(I)13 b(b)q(eliev)o(e)f(that)j(ev)o(ery)d[m
[32m+[m[32m(programmer)h(should)h(striv)o(e)0 796 y(to)i(write)e(co)q(de)i(whose)g[m
[32m+[m[32m(b)q(eha)o(vior)f(w)o(ould)g(b)q(e)h(imme)o(diatel)o(y)d(ob)o(vious)i[m
[32m+[m[32m(to)h(a)f(reader;)g(if)g(y)o(ou)g(\014nd)h(y)o(ourself)0[m
[32m+[m[32m857 y(writing)j(co)q(de)g(that)h(w)o(ould)f(require)f(someone)g[m
[32m+[m[32m(reading)h(the)g(co)q(de)h(to)f(th)o(um)o(b)f(through)i(a)f(man)o(ual)f[m
[32m+[m[32m(in)0 917 y(order)g(to)h(understand)g(it,)f(y)o(ou)g(are)g(almost)f[m
[32m+[m[32m(certainly)g(b)q(eing)i(w)o(a)o(y)e(to)q(o)j(subtle.)26[m
[32m+[m[32mb(There's)18 b(probably)h(a)0 977 y(m)o(uc)o(h)13 b(simpler)h(and)i[m
[32m+[m[32m(more)f(ob)o(vious)g(w)o(a)o(y)h(to)g(accomplish)e(the)h(same)g(end.)21[m
[32m+[m[32mb(Ma)o(yb)q(e)15 b(the)g(co)q(de)h(will)f(b)q(e)h(a)0[m
[32m+[m[32m1037 y(little)f(longer)j(that)f(w)o(a)o(y)l(,)g(but)g(in)g(the)g(real)g[m
[32m+[m[32m(w)o(orld,)f(it's)h(whether)g(the)g(co)q(de)g(w)o(orks)g(and)h(ho)o(w)g[m
[32m+[m[32m(simple)c(it)0 1097 y(is)h(for)h(someone)f(else)g(to)h(mo)q(dify)l(,)e[m
[32m+[m[32m(that)i(matters)f(a)h(whole)f(lot)h(more)e(than)j(ho)o(w)f(man)o(y)e(c)[m
[32m+[m[32mo(haracters)h(y)o(ou)0 1158 y(had)i(to)f(t)o(yp)q(e.)73[m
[32m+[m[32m1218 y(A)g(\014nal)g(though)o(t)h(to)g(remem)n(b)q(er:)122[m
[32m+[m[32m1332 y(\\There)f(are)g(t)o(w)o(o)g(w)o(a)o(ys)g(of)g(constructing)h(a)f[m
[32m+[m[32m(soft)o(w)o(are)g(design:)21 b(one)c(w)o(a)o(y)e(is)h(to)h(mak)o(e)d[m
[32m+[m[32m(it)h(so)122 1392 y(simple)e(that)i(there)f(are)h Fc(obviously)h[m
[32m+[m[32mFf(no)g(de\014ciencies)d(and)i(the)g(other)g(w)o(a)o(y)g(is)g(to)g(mak)[m
[32m+[m[32mo(e)e(it)h(so)122 1452 y(complicated)g(that)j(there)e(are)i(no)f[m
[32m+[m[32mFc(obvious)h Ff(de\014ciencies.")430 1512 y(C.)f(A.)f(R.)h(Hoare,)g[m
[32m+[m[32m(\\The)h(Emp)q(eror's)e(Old)h(Clothes",)g(CA)o(CM)g(F)l(eb.)21[m
[32m+[m[32mb(1981)0 1679 y Fe(10)83 b(F)-7 b(urther)27 b(Reading)122[m
[32m+[m[32m1788 y Ff(Coplien,)15 b(\\Adv)m(anced)i(C++)f(Concepts")122[m
[32m+[m[32m1890 y(C.A.R.)f(Hoare,)i(\\The)g(Emp)q(eror's)f(Old)h(Clothes.")23[m
[32m+[m[32mb Fc(Communic)n(ations)c(of)e(the)i(A)o(CM)p Ff(,)d(V)l(ol.)23[m
[32m+[m[32mb(24,)122 1950 y(No.)e(2,)16 b(F)l(ebruary)g(1981,)i(pp.)j(75-83.)122[m
[32m+[m[32m2052 y(Kernighan)16 b(and)h(Ritc)o(hie.)122 2154 y(Stev)o(e)e(Maguire,)[m
[32m+[m[32mh("W)l(riting)g(Solid)g(Co)q(de",)h(Microsoft)f(Press.)122[m
[32m+[m[32m2255 y(Stev)o(e)f(Maguire,)h("Debugging)h(the)f(Dev)o(elopmen)o(t)d[m
[32m+[m[32m(Pro)q(cess",)k(Microsoft)f(Press.)122 2357 y(Bjarne)g(Stroustrup,)g[m
[32m+[m[32m(\\The)h(C++)f(Programming)f(Language")951 2795 y(23)p[m
[32m+[m[32meop[m
[32m+[m[32m%%Trailer[m
[32m+[m[32mend[m
[32m+[m[32muserdict /end-hook known{end-hook}if[m
[32m+[m[32m%%EOF[m
[1mdiff --git a/c++example/c++.tex b/c++example/c++.tex[m
[1mnew file mode 100755[m
[1mindex 0000000..207cf4f[m
[1m--- /dev/null[m
[1m+++ b/c++example/c++.tex[m
[36m@@ -0,0 +1,1576 @@[m
[32m+[m[32m\documentstyle[12pt,fullpage]{article}[m
[32m+[m
[32m+[m[32m\newcommand{\putfig}[3]%[m
[32m+[m[32m{\begin{figure}%[m
[32m+[m[32m\centerline{%[m
[32m+[m[32m\psfig{figure=#1.ps,width=#3}}%[m
[32m+[m[32m\caption{#2}%[m
[32m+[m[32m\label{fig:#1}%[m
[32m+[m[32m\end{figure}}[m
[32m+[m
[32m+[m[32m\input{psfig}[m
[32m+[m
[32m+[m[32m\begin{document}[m
[32m+[m
[32m+[m[32m\begin{figure*}[t][m
[32m+[m[32m\begin{center}[m
[32m+[m[32m{\LARGE\bf A Quick Introduction to C++}[m
[32m+[m
[32m+[m[32m\vspace{3.0ex}[m
[32m+[m
[32m+[m[32m{\Large Tom Anderson}[m
[32m+[m[32m\end{center}[m
[32m+[m[32m\end{figure*}[m
[32m+[m
[32m+[m[32m\renewcommand{\thefootnote}{\fnsymbol{footnote}}[m
[32m+[m
[32m+[m[32m\footnotetext{This article is based on an earlier version written by Wayne Christopher.}[m
[32m+[m
[32m+[m[32m\renewcommand{\thefootnote}{}[m
[32m+[m[32m\renewcommand{\thefootnote}{\arabic{footnote}}[m
[32m+[m
[32m+[m[32m\begin{quote}[m
[32m+[m[32m``If programming in Pascal is like being put in a straightjacket,[m
[32m+[m[32mthen programming in C is like playing with knives, and programming[m
[32m+[m[32min C++ is like juggling chainsaws.'' \\ \hbox{} \hfill Anonymous.[m
[32m+[m[32m\end{quote}[m
[32m+[m
[32m+[m[32m\section{Introduction}[m
[32m+[m
[32m+[m[32mThis note introduces some simple C++ concepts and outlines a[m
[32m+[m[32msubset of C++ that is easier to learn and use than[m
[32m+[m[32mthe full language.  Although we originally wrote this note for[m
[32m+[m[32mexplaining the C++ used in the Nachos project, I believe it is[m[41m [m
[32m+[m[32museful to anyone learning C++.[m
[32m+[m[32mI assume that you are already somewhat familiar with C concepts[m
[32m+[m[32mlike procedures, for loops, and pointers; these are pretty easy[m
[32m+[m[32mto pick up from reading Kernighan and Ritchie's ``The C Programming[m[41m [m
[32m+[m[32mLanguage.''[m
[32m+[m
[32m+[m[32mI should admit up front that I am quite opinionated about C++, if[m
[32m+[m[32mthat isn't obvious already.[m
[32m+[m[32mI know several C++ purists (an oxymoron perhaps?) who violently[m
[32m+[m[32mdisagree with some of[m
[32m+[m[32mthe prescriptions contained here; most of the objections are of[m
[32m+[m[32mthe form, ``How could you have possibly left out feature X?''[m
[32m+[m[32mHowever, I've found from teaching C++ to nearly 1000 undergrads[m
[32m+[m[32mover the past several years that the subset of C++ described here is[m
[32m+[m[32mpretty easy to learn, taking only a day or so for most students[m[41m [m
[32m+[m[32mto get started.[m
[32m+[m
[32m+[m[32mThe basic premise of this note is that while object-oriented[m
[32m+[m[32mprogramming is a useful way to simplify programs, C++ is a wildly[m
[32m+[m[32mover-complicated[m
[32m+[m[32mlanguage, with a host of features that only very, very rarely find a[m
[32m+[m[32mlegitimate use.  It's not too far off the mark to say that C++ includes[m
[32m+[m[32mevery programming language feature ever imagined, and more.[m
[32m+[m[32mThe natural tendency when faced with a new language feature[m
[32m+[m[32mis to try to use it, but in C++ this approach leads to disaster.[m
[32m+[m
[32m+[m[32mThus, we need to carefully distinguish between (i) those concepts[m[41m [m
[32m+[m[32mthat are fundamental (e.g., classes, member functions, constructors)[m
[32m+[m[32m-- ones that everyone should know and use, (ii) those that are sometimes[m[41m [m
[32m+[m[32mbut rarely useful (e.g., single inheritance, templates) -- ones that[m
[32m+[m[32mbeginner programmers should be able to recognize (in case they run across[m
[32m+[m[32mthem) but avoid using in their own programs, at least for a while,[m
[32m+[m[32mand (iii) those that are just a bad idea and should be avoided like[m
[32m+[m[32mthe plague (e.g., multiple inheritance, exceptions, overloading,[m
[32m+[m[32mreferences, etc).[m
[32m+[m
[32m+[m[32mOf course, all the items in this last category have their proponents,[m
[32m+[m[32mand I will admit that, like the hated goto, it is possible to[m
[32m+[m[32mconstruct cases when the program would be simpler using a goto or[m
[32m+[m[32mmultiple inheritance.  However, it is[m
[32m+[m[32mmy belief that most programmers will never encounter such cases,[m
[32m+[m[32mand even if you do, you will be much more likely to misuse the[m[41m [m
[32m+[m[32mfeature than properly apply it.[m
[32m+[m[32mFor example, I seriously doubt an undergraduate would need any of[m[41m [m
[32m+[m[32mthe features listed under (iii) for any course project (at least[m
[32m+[m[32mat Berkeley this is true).  And if you find yourself wanting to use[m[41m [m
[32m+[m[32ma feature like multiple inheritance, then, my advice is to fully[m[41m [m
[32m+[m[32mimplement your program both with and without the feature, and choose[m[41m [m
[32m+[m[32mwhichever is simpler.  Sure, this takes more effort, but[m
[32m+[m[32mpretty soon you'll know from experience when a feature is useful and when[m
[32m+[m[32mit isn't, and you'll be able to skip the dual implementation.[m
[32m+[m
[32m+[m[32mA really good way to learn a language is to read clear programs in that[m
[32m+[m[32mlanguage.  I have tried to make the Nachos code as readable as possible;[m
[32m+[m[32mit is written in the subset of C++ described in this note.[m
[32m+[m[32mIt is a good idea to look over the first assignment as you read this[m
[32m+[m[32mintroduction.  Of course, your TA's will answer any questions you may[m
[32m+[m[32mhave.[m
[32m+[m
[32m+[m[32mYou should not need a book on C++ to do the Nachos assignments, but if[m[41m [m
[32m+[m[32myou are curious, there is a large selection of C++ books[m
[32m+[m[32mat Cody's and other technical bookstores. (My wife quips that C++ was[m
[32m+[m[32minvented to make researchers at Bell Labs rich from writing[m
[32m+[m[32m``How to Program in C++'' books.)   Most new software development[m
[32m+[m[32mthese days is being done in C++, so it is a pretty good bet you'll[m[41m [m
[32m+[m[32mrun across it in the future.  I use Stroustrup's "The C++[m
[32m+[m[32mProgramming Language" as a reference manual, although other[m[41m [m
[32m+[m[32mbooks may be more readable.  I would also recommend Scott Meyer's[m
[32m+[m[32m``Effective C++'' for people just beginning to learn the language,[m
[32m+[m[32mand Coplien's ``Advanced C++'' once you've been programming in C++[m[41m [m
[32m+[m[32mfor a couple years and are familiar with the language basics.[m
[32m+[m[32mAlso, C++ is continually evolving, so be careful to buy books that describe[m
[32m+[m[32mthe latest version (currently 3.0, I think!).[m
[32m+[m
[32m+[m[32m\section{C in C++}[m
[32m+[m
[32m+[m[32mTo a large extent, C++ is a superset of C, and most carefully written[m
[32m+[m[32mANSI C will compile as C++.  There are a few major caveats though:[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item All functions must be declared before they are used, rather than[m
[32m+[m[32mdefaulting to type {\tt int}.[m
[32m+[m
[32m+[m[32m\item All function declarations and definition headers must use[m
[32m+[m[32mnew-style declarations, e.g.,[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mextern int foo(int a, char* b);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe form {\tt extern int foo();} means that {\tt foo} takes {\it no}[m
[32m+[m[32marguments, rather than arguments of an unspecified type and number.[m
[32m+[m[32mIn fact, some advise using a C++ compiler even[m
[32m+[m[32mon normal C code, because it will catch errors like misused functions that[m
[32m+[m[32ma normal C compiler will let slide.[m
[32m+[m
[32m+[m[32m\item If you need to link C object files together with C++, when you[m
[32m+[m[32mdeclare the C functions for the C++ files, they must be done like this:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mextern "C" int foo(int a, char* b);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mOtherwise the C++ compiler will alter the name in a strange manner.[m
[32m+[m
[32m+[m[32m\item There are a number of new keywords, which you may not use as[m
[32m+[m[32midentifiers --- some common ones are {\tt new}, {\tt delete}, {\tt[m
[32m+[m[32mconst}, and {\tt class}.[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\section{Basic Concepts}[m
[32m+[m
[32m+[m[32mBefore giving examples of C++ features, I will first go over some of[m
[32m+[m[32mthe basic concepts of object-oriented languages.  If this discussion[m
[32m+[m[32mat first seems a bit obscure, it will become clearer when we get[m
[32m+[m[32mto some examples.[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item {\bf Classes and objects}.  A class is similar to a C {\em structure},[m
[32m+[m[32mexcept that the definition of the data structure, {\em and} all of the[m[41m [m
[32m+[m[32mfunctions that operate on the data structure are grouped together[m
[32m+[m[32min one place.  An {\em object} is an instance of a class (an instance[m
[32m+[m[32mof the data structure); objects share the same functions with other objects[m
[32m+[m[32mof the same class, but each object (each instance) has its own copy of[m[41m [m
[32m+[m[32mthe data structure.  A class thus defines two aspects of the objects:[m[41m [m
[32m+[m[32mthe {\em data} they contain, and the {\em behavior} they have.[m
[32m+[m
[32m+[m[32m\item {\bf Member functions}.  These are functions which are[m
[32m+[m[32mconsidered part of the object and are declared in the class[m
[32m+[m[32mdefinition.  They are often referred to as {\em methods} of the class.[m
[32m+[m[32mIn addition to member functions, a class's behavior is also defined[m
[32m+[m[32mby:[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m[32m\item What to do when you create a new object (the {\bf constructor}[m
[32m+[m[32mfor that object) -- in other words, initialize the object's data.[m
[32m+[m[32m\item What to do when you delete an object (the {\bf destructor} for[m
[32m+[m[32mthat object).[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\item {\bf Private vs. public members}.  A public member of a class is[m
[32m+[m[32mone that can be read or written by anybody, in the case of a data[m
[32m+[m[32mmember, or called by anybody, in the case of a member function.  A[m
[32m+[m[32mprivate member can only be read, written, or called by a member[m
[32m+[m[32mfunction of that class.[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32mClasses are used for two main reasons: (1) it makes it much easier to[m
[32m+[m[32morganize your programs if you can group together data with the[m
[32m+[m[32mfunctions that manipulate that data, and (2) the use of private[m
[32m+[m[32mmembers makes it possible to do {\em information hiding}, so that you[m
[32m+[m[32mcan be more confident about the way information flows in your[m
[32m+[m[32mprograms.[m
[32m+[m
[32m+[m[32m\subsection{Classes}[m
[32m+[m
[32m+[m[32mC++ classes are similar to C structures in many ways.  In fact, a C++[m
[32m+[m[32mstruct is really a class that has only public data members.[m
[32m+[m[32mIn the following explanation of how classes work, we will use a stack[m
[32m+[m[32mclass as an example.[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m[32m\item {\bf Member functions.}   Here is a (partial) example of a class[m
[32m+[m[32mwith a member function and some data members:[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    int top;          // Index of the top of the stack.[m
[32m+[m[32m    int stack[10];    // The elements of the stack.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mStack::Push(int value) {[m
[32m+[m[32m    ASSERT(top < 10);		// stack should never overflow[m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThis class has two data members, {\tt top} and {\tt stack}, and one[m
[32m+[m[32mmember function, {\tt Push}.[m[41m  [m
[32m+[m[32mThe notation {\em class}::{\em function} denotes the[m
[32m+[m[32m{\em function} member of the class {\em class}.  (In the style we use,[m
[32m+[m[32mmost function names are capitalized.)  The function is defined beneath[m
[32m+[m[32mit.[m[41m  [m
[32m+[m
[32m+[m[32mAs an aside, note that we use a call to {\tt ASSERT} to check that[m[41m [m
[32m+[m[32mthe stack hasn't overflowed; ASSERT drops into the debugger if the condition[m
[32m+[m[32mis false.  It is an extremely good idea for you to use ASSERT[m
[32m+[m[32mstatements liberally throughout your code to document assumptions[m
[32m+[m[32mmade by your implementation.  Better to catch errors automatically[m
[32m+[m[32mvia ASSERTs than to let them go by and have your program overwrite[m[41m [m
[32m+[m[32mrandom locations.[m[41m  [m
[32m+[m
[32m+[m[32mIn actual usage, the definition of {\tt class Stack} would typically[m
[32m+[m[32mgo in the file {\tt stack.h} and the definitions of the member[m
[32m+[m[32mfunctions, like {\tt Stack::Push}, would go in the file {\tt[m
[32m+[m[32mstack.cc}.[m
[32m+[m
[32m+[m[32mIf we have a pointer to a {\tt Stack} object called {\tt s}, we can[m
[32m+[m[32maccess the {\tt top} element as {\tt s->top}, just as in C.  However,[m
[32m+[m[32min C++ we can also call the member function using the following syntax:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    s->Push(17);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mOf course, as in C, {\tt s} must point to a valid {\tt Stack} object.[m
[32m+[m
[32m+[m[32mInside a member function, one may refer to the members of the class[m
[32m+[m[32mby their names alone.  In other words, the class definition[m
[32m+[m[32mcreates a scope that includes the member (function and data) definitions.[m
[32m+[m
[32m+[m[32mNote that if you are inside a member function, you can get a pointer[m
[32m+[m[32mto the object you were called on by using the variable {\tt this}.[m
[32m+[m[32mIf you want to call another member function on the same object, you[m
[32m+[m[32mdo not need to use the {\tt this} pointer, however.  Let's extend the Stack[m
[32m+[m[32mexample to illustrate this by adding a {\tt Full()} function.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m    int top;          // Index of the lowest unused position.[m
[32m+[m[32m    int stack[10];    // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m[32m\newpage[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mbool[m
[32m+[m[32mStack::Full() {[m
[32m+[m[32m    return (top == 10);[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mNow we can rewrite {\tt Push} this way:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mvoid[m
[32m+[m[32mStack::Push(int value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mWe could have also written the ASSERT:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    ASSERT(!(this->Full());[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mbut in a member function, the \verb+this->+ is implicit.[m
[32m+[m
[32m+[m[32mThe purpose of member functions is to encapsulate the functionality of[m
[32m+[m[32ma type of object along with the data that the object contains.  A[m
[32m+[m[32mmember function does not take up space in an object of the class.[m
[32m+[m
[32m+[m[32m\item {\bf Private members.}  One can declare some[m
[32m+[m[32mmembers of a class to be {\it private}, which are hidden to all but[m
[32m+[m[32mthe member functions of that class, and some to be {\it public}, which[m
[32m+[m[32mare visible and accessible to everybody.  Both data and function members[m
[32m+[m[32mcan be either public or private.[m
[32m+[m
[32m+[m[32mIn our stack example, note that once we have the {\tt Full()}[m
[32m+[m[32mfunction, we really don't need to look at the {\tt top} or {\tt stack}[m
[32m+[m[32mmembers outside of the class -- in fact, we'd rather that users of the Stack[m
[32m+[m[32mabstraction {\em not} know about its internal implementation, in case[m
[32m+[m[32mwe change it.  Thus we can rewrite the class as follows:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m  private:[m
[32m+[m[32m    int top;          // Index of the top of the stack.[m
[32m+[m[32m    int stack[10];    // The elements of the stack.[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mBefore, given a pointer to a {\tt Stack} object, say {\tt s}, any part[m
[32m+[m[32mof the program could access {\tt s->top}, in potentially bad ways.[m
[32m+[m[32mNow, since the {\tt top} member is private, only a member function,[m
[32m+[m[32msuch as {\tt Full()}, can access it.  If any other part of the[m
[32m+[m[32mprogram attempts to use {\tt s->top} the compiler will report an error.[m
[32m+[m
[32m+[m[32mYou can have alternating {\tt public:} and {\tt private:} sections in[m
[32m+[m[32ma class.  Before you specify either of these, class members are[m
[32m+[m[32mprivate, thus the above example could have been written:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m    int top;          // Index of the top of the stack.[m
[32m+[m[32m    int stack[10];    // The elements of the stack.[m
[32m+[m[32m  public:[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mWhich form you prefer is a matter of style, but it's usually best[m
[32m+[m[32mto be explicit, so that it is obvious what is intended.  In Nachos,[m
[32m+[m[32mwe make everything explicit.[m
[32m+[m
[32m+[m[32mWhat is not a matter of style: {\bf all data members of a class[m[41m [m
[32m+[m[32mshould be private.}  All operations on data should be via that[m
[32m+[m[32mclass' member functions.  Keeping data private adds to the modularity[m[41m [m
[32m+[m[32mof the system, since you can redefine how the data members are stored[m[41m [m
[32m+[m[32mwithout changing how you access them.[m
[32m+[m
[32m+[m[32m\item {\bf Constructors and the operator new.}  In C, in[m
[32m+[m[32morder to create a new object of type {\tt Stack}, one might write:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    struct Stack *s = (struct Stack *) malloc(sizeof (struct Stack));[m
[32m+[m[32m    InitStack(s, 17);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe {\tt InitStack()} function might take the second argument as the[m
[32m+[m[32msize of the stack to create, and use {\tt malloc()} again to get an[m
[32m+[m[32marray of 17 integers.[m
[32m+[m
[32m+[m[32mThe way this is done in C++ is as follows:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    Stack *s = new Stack(17);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe {\tt new} function takes the place of {\tt malloc()}.  To[m
[32m+[m[32mspecify how the object should be initialized, one declares a {\it[m
[32m+[m[32mconstructor} function as a member of the class, with the name of the[m
[32m+[m[32mfunction being the same as the class name:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack(int sz);    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the lowest unused position.[m
[32m+[m[32m    int* stack;       // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mStack::Stack(int sz) {[m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    top = 0;[m
[32m+[m[32m    stack = new int[size];   // Let's get an array of integers.[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThere are a few things going on here, so we will describe them one at[m
[32m+[m[32ma time.[m
[32m+[m
[32m+[m[32mThe {\tt new} operator automatically creates (i.e. allocates) the object[m
[32m+[m[32mand then calls the constructor function for the new object.[m
[32m+[m[32mThis same sequence happens even if, for instance, you declare an object[m
[32m+[m[32mas an automatic variable inside a function or block -- the compiler allocates[m
[32m+[m[32mspace for the object on the stack, and calls the constructor function on it.[m
[32m+[m
[32m+[m[32mIn this example, we create two stacks of different sizes, one[m
[32m+[m[32mby declaring it as an automatic variable, and one by using {\tt new}.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mvoid[m
[32m+[m[32mtest() {[m
[32m+[m[32m    Stack s1(17);[m
[32m+[m[32m    Stack* s2 = new Stack(23);[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mNote there are two ways of providing arguments to constructors: with[m
[32m+[m[32m{\tt new}, you put the argument list after the class name, and with[m
[32m+[m[32mautomatic or global variables, you put them after the variable name.[m
[32m+[m
[32m+[m[32mIt is crucial that you {\bf always} define a constructor[m
[32m+[m[32mfor every class you define, and that the constructor initialize[m
[32m+[m[32m{\bf every} data member of the class.  If you don't define[m[41m [m
[32m+[m[32myour own constructor, the compiler will automatically define[m
[32m+[m[32mone for you, and believe me, it won't do what you want[m
[32m+[m[32m(``the unhelpful compiler'').[m
[32m+[m[32mThe data members will be initialized to random, unrepeatable[m
[32m+[m[32mvalues, and while your program may work anyway, it might not[m
[32m+[m[32mthe next time you recompile (or vice versa!).[m
[32m+[m
[32m+[m[32mAs with normal C variables, variables declared inside a function[m
[32m+[m[32mare deallocated automatically when the function returns; for[m[41m  [m
[32m+[m[32mexample, the {\tt s1} object is deallocated when {\tt test}[m
[32m+[m[32mreturns.  Data allocated with {\tt new} (such as {\tt s2}) is[m[41m [m
[32m+[m[32mstored on the heap, however, and remains after the function returns;[m
[32m+[m[32mheap data must be explicitly disposed of using {\tt delete}, described below.[m[41m  [m
[32m+[m
[32m+[m[32mThe {\tt new} operator can also be used to allocate arrays, illustrated[m
[32m+[m[32mabove in allocating an array of {\tt ints}, of dimension {\tt size}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    stack = new int[size];[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mNote that you can use {\tt new} and {\tt delete} (described below)[m
[32m+[m[32mwith built-in types like {\tt int} and {\tt char} as well as with[m
[32m+[m[32mclass objects like {\tt Stack}.[m
[32m+[m
[32m+[m[32m\item {\bf Destructors and the operator delete.}  Just as {\tt new} is the[m
[32m+[m[32mreplacement for {\tt malloc()}, the replacement for {\tt free()} is[m
[32m+[m[32m{\tt delete}.  To get rid of the {\tt Stack} object we allocated[m
[32m+[m[32mabove with {\tt new}, one can do:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    delete s2;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThis will deallocate the object, but first it will call the[m
[32m+[m[32m{\it destructor} for the {\tt Stack} class, if there is one.  This[m
[32m+[m[32mdestructor is a member function of {\tt Stack} called {\tt {\verb^~^}Stack()}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack(int sz);    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~Stack();         // Destructor:   deallocate space allocated above.[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();      // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the lowest unused position.[m
[32m+[m[32m    int* stack;       // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mStack::~Stack() {[m
[32m+[m[32m    delete [] stack;  // delete an array of integers[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe destructor has the job of deallocating the data the constructor[m
[32m+[m[32mallocated.  Many classes won't need destructors, and some will use[m
[32m+[m[32mthem to close files and otherwise clean up after themselves.[m
[32m+[m
[32m+[m[32mThe destructor for an object is called when the object is deallocated.[m
[32m+[m[32mIf the object was created with {\tt new}, then you must call[m
[32m+[m[32m{\tt delete} on the object, or else the object will continue[m
[32m+[m[32mto occupy space until the program is over -- this is called[m
[32m+[m[32m``a memory leak.''  Memory leaks are bad things -- although virtual[m
[32m+[m[32mmemory is supposed to be unlimited, you can in fact run out of it --[m
[32m+[m[32mand so you should be careful to {\bf always} delete what you allocate.[m
[32m+[m[32mOf course, it is even worse to call {\tt delete} too early --[m
[32m+[m[32m{\tt delete} calls the destructor and puts the space back on the heap[m[41m [m
[32m+[m[32mfor later re-use.  If you are still using the object, you will[m
[32m+[m[32mget random and non-repeatable results that will be very difficult[m
[32m+[m[32mto debug.  In my experience, using data that has already been deleted[m[41m [m
[32m+[m[32mis major source of hard-to-locate bugs in student (and professional)[m
[32m+[m[32mprograms, so hey, be careful out there![m
[32m+[m
[32m+[m[32mIf the object is an automatic, allocated on the execution stack[m
[32m+[m[32mof a function, the destructor will be called and the space deallocated when[m
[32m+[m[32mthe function returns; in the {\tt test()} example above, {\tt s1}[m
[32m+[m[32mwill be deallocated when {\tt test()} returns, without you having to[m
[32m+[m[32mdo anything.[m
[32m+[m
[32m+[m[32mIn Nachos, we always explicitly allocate and deallocate objects with[m[41m [m
[32m+[m[32m{\tt new} and {\tt delete}, to make it clear when the constructor and[m
[32m+[m[32mdestructor is being called.  For example, if an object contains another[m[41m [m
[32m+[m[32mobject as a member variable, we use[m
[32m+[m[32m{\tt new} to explicitly allocated and initialize the member variable,[m
[32m+[m[32minstead of implicitly allocating it as part of the containing object.[m
[32m+[m[32mC++ has strange, non-intuitive rules for the order in which the[m[41m [m
[32m+[m[32mconstructors and destructors are called when you implicitly allocate[m[41m [m
[32m+[m[32mand deallocate objects.  In practice, although simpler, explicit allocation[m[41m [m
[32m+[m[32mis slightly slower and it makes it more likely that you will forget[m[41m [m
[32m+[m[32mto deallocate an object (a bad thing!), and so some would disagree with[m[41m [m
[32m+[m[32mthis approach.[m
[32m+[m
[32m+[m[32mWhen you deallocate an array, you have to tell the compiler that[m
[32m+[m[32myou are deallocating an array, as opposed to a single element in the array.[m
[32m+[m[32mHence to delete the array of integers in {\tt Stack::{\verb^~^}Stack}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    delete [] stack;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\subsection{Other Basic C++ Features}[m
[32m+[m
[32m+[m[32mHere are a few other C++ features that are useful to know.[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item When you define a {\tt class Stack}, the name {\tt Stack} becomes[m
[32m+[m[32musable as a type name as if created with {\tt typedef}.  The same is[m
[32m+[m[32mtrue for {\tt enum}s.[m
[32m+[m
[32m+[m[32m\item You can define functions inside of a {\tt class} definition,[m
[32m+[m[32mwhereupon they become {\it inline functions}, which are expanded in[m
[32m+[m[32mthe body of the function where they are used.  The rule of thumb to[m
[32m+[m[32mfollow is to only consider inlining one-line functions, and even then[m[41m [m
[32m+[m[32mdo so rarely.[m[41m  [m
[32m+[m
[32m+[m[32mAs an example, we could make the {\tt Full} routine an inline.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m   ...[m
[32m+[m[32m   bool Full() { return (top == size); };[m
[32m+[m[32m   ...[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThere are two motivations for inlines: convenience[m
[32m+[m[32mand performance.  If overused, inlines can make your code more confusing,[m
[32m+[m[32mbecause the implementation for an object is no longer in one place,[m[41m [m
[32m+[m[32mbut spread between the {\tt .h} and {\tt .c} files.  Inlines can sometimes[m
[32m+[m[32mspeed up your code (by avoiding the overhead of a procedure call), but[m[41m [m
[32m+[m[32mthat shouldn't be your principal concern as a student (rather, at least to[m[41m [m
[32m+[m[32mbegin with, you should be most concerned with writing code that is simple[m[41m [m
[32m+[m[32mand bug free).  Not to mention that inlining sometimes slows down a program,[m
[32m+[m[32msince the object code for the function is duplicated wherever the function[m[41m [m
[32m+[m[32mis called, potentially hurting cache performance.[m
[32m+[m
[32m+[m[32m\item Inside a function body, you can declare some variables, execute[m
[32m+[m[32msome statements, and then declare more variables.  This can make code[m
[32m+[m[32ma lot more readable.  In fact, you can even write things like:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mfor (int i = 0; i < 10; i++) ;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mDepending on your compiler, however, the variable {\tt i} may still visible[m
[32m+[m[32mafter the end of the {\tt for}[m
[32m+[m[32mloop, however, which is not what one might expect or desire.[m
[32m+[m
[32m+[m[32m\item Comments can begin with the characters \verb+//+ and extend to[m
[32m+[m[32mthe end of the line.  These are usually more handy than the[m
[32m+[m[32m\verb+/* */+ style of comments.[m
[32m+[m
[32m+[m[32m\item C++ provides some new opportunities to use the[m[41m [m
[32m+[m[32m{\tt const} keyword from ANSI C.  The basic idea of {\tt const}[m
[32m+[m[32mis to provide extra information to the compiler about how a variable[m
[32m+[m[32mor function is used, to allow it to flag an error if it is being[m[41m [m
[32m+[m[32mused improperly.  You should always look for ways to get the compiler[m[41m [m
[32m+[m[32mto catch bugs for you.  After all, which takes less time?  Fixing[m
[32m+[m[32ma compiler-flagged error, or chasing down the same bug using gdb?[m[41m  [m
[32m+[m
[32m+[m[32mFor example, you can declare that a member function only reads the[m[41m [m
[32m+[m[32mmember data, and never modifies the object:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m   ...[m
[32m+[m[32m   bool Full() const;  // Full() never modifies member data[m
[32m+[m[32m   ...[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mAs in C, you can use {\tt const} to declare that a variable is never[m[41m [m
[32m+[m[32mmodified:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    const int InitialHashTableSize = 8;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThis is {\em much} better than using {\tt \#define} for constants,[m
[32m+[m[32msince the above is type-checked.[m
[32m+[m
[32m+[m[32m\item Input/output in C++ can be done with the {\tt >>} and {\tt <<}[m
[32m+[m[32moperators and the objects {\tt cin} and {\tt cout}.  For example,[m
[32m+[m[32mto write to {\tt stdout}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    cout << "Hello world!  This is section " << 3 << "!";[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThis is equivalent to the normal C code[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    fprintf(stdout, "Hello world!  This is section %d!\n", 3);[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mexcept that the C++ version is type-safe; with {\tt printf}, the[m
[32m+[m[32mcompiler won't complain if you try to print a floating point number[m
[32m+[m[32mas an integer. In fact, you can use traditional {\tt printf} in a C++[m
[32m+[m[32mprogram, but you will get bizarre behavior if you try to use both[m
[32m+[m[32m{\tt printf} and {\tt <<} on the same stream.  Reading from {\tt stdin}[m
[32m+[m[32mworks the same way as writing to {\tt stdout}, except using the shift[m[41m [m
[32m+[m[32mright operator instead of shift left.[m[41m  [m
[32m+[m[32mIn order to read two integers from {\tt stdin}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    int field1, field2;[m
[32m+[m[32m    cin >> field1 >> field2;[m
[32m+[m[32m        // equivalent to fscanf(stdin, "%d %d", &field1, &field2);[m
[32m+[m[32m        // note that field1 and field2 are implicitly modified[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mIn fact, {\tt cin} and {\tt cout} are implemented as normal C++[m
[32m+[m[32mobjects, using operator overloading and reference parameters, but[m
[32m+[m[32m(fortunately!) you don't need to understand either of those to be able[m
[32m+[m[32mto do I/O in C++.[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\section{Advanced Concepts in C++: Dangerous but Occasionally Useful}[m
[32m+[m
[32m+[m[32mThere are a few C++ features, namely (single) inheritance and templates,[m
[32m+[m[32mwhich are easily abused, but can dramatically simplify an[m
[32m+[m[32mimplementation if used properly.  I describe the basic idea[m
[32m+[m[32mbehind these ``dangerous but useful'' features here, in case you[m[41m [m
[32m+[m[32mrun across them.  Feel free to skip this section -- it's long,[m
[32m+[m[32mcomplex, and you can understand 99\% of the code in Nachos without[m
[32m+[m[32mreading this section.[m
[32m+[m
[32m+[m[32mUp to this point, there really hasn't been any fundamental difference[m
[32m+[m[32mbetween programming in C and in C++.  In fact, most experienced[m[41m [m
[32m+[m[32mC programmers organize their functions into modules that relate[m
[32m+[m[32mto a single data structure (a "class"), and often even use a naming[m[41m [m
[32m+[m[32mconvention which mimics C++, for example, naming routines[m[41m [m
[32m+[m[32m{\tt StackFull()} and {\tt StackPush()}.  However, the features[m[41m [m
[32m+[m[32mI'm about to describe {\em do} require a paradigm shift -- there[m
[32m+[m[32mis no simple translation from them into a normal C program.[m
[32m+[m[32mThe benefit will be that, in some circumstances, you will be able to[m[41m [m
[32m+[m[32mwrite generic code that works with multiple kinds of objects.[m
[32m+[m
[32m+[m[32mNevertheless, I would advise a beginning C++ programmer against trying[m
[32m+[m[32mto use these features, because you will almost[m
[32m+[m[32mcertainly misuse them.  It's possible (even easy!) to write completely[m[41m [m
[32m+[m[32minscrutable code using inheritance and/or templates.  Although[m
[32m+[m[32myou might find it amusing to write code that is impossible for your[m[41m [m
[32m+[m[32mgraders to understand, I assure you they won't find it amusing at all,[m
[32m+[m[32mand will return the favor when they assign grades.  In industry,[m
[32m+[m[32ma high premium is placed on keeping code simple and readable.[m[41m [m
[32m+[m[32mIt's easy to write new code, but the real cost comes when[m
[32m+[m[32myou try to keep it working, even as you add new features to it.[m
[32m+[m
[32m+[m[32mNachos contains a few examples of the correct use of inheritance[m[41m [m
[32m+[m[32mand templates, but realize that Nachos does {\em not} use them[m
[32m+[m[32meverywhere.  In fact, if you get confused by this section, don't worry,[m
[32m+[m[32myou don't need to use any of these features in order to do the Nachos[m
[32m+[m[32massignments.  I omit a whole bunch of details; if you find yourself[m
[32m+[m[32mmaking widespread use of inheritance or templates, you should consult a C++[m
[32m+[m[32mreference manual for the real scoop.  This is meant to[m
[32m+[m[32mbe just enough to get you started, and to help you identify when it would[m
[32m+[m[32mbe appropriate to use these features and thus learn more[m
[32m+[m[32mabout them![m
[32m+[m
[32m+[m[32m\subsection{Inheritance}[m
[32m+[m[32mInheritance captures the idea that certain classes of objects are[m
[32m+[m[32mrelated to each other in useful ways.  For example, lists[m
[32m+[m[32mand sorted lists have quite similar behavior -- they both[m[41m [m
[32m+[m[32mallow the user to insert, delete, and find elements that are[m
[32m+[m[32mon the list.  There are two benefits to using inheritance:[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item You can write generic code that doesn't[m
[32m+[m[32mcare exactly which kind of object it is manipulating.  For[m
[32m+[m[32mexample, inheritance is widely used in windowing systems.[m
[32m+[m[32mEverything on the screen (windows, scroll bars, titles, icons)[m
[32m+[m[32mis its own object, but they all share a set of member functions[m
[32m+[m[32min common, such as a routine {\tt Repaint} to redraw the object[m
[32m+[m[32monto the screen.  This way, the code to repaint the entire screen[m[41m [m
[32m+[m[32mcan simply call the {\tt Repaint} function on every object on the screen.[m
[32m+[m[32mThe code that calls {\tt Repaint} doesn't need to know which[m
[32m+[m[32mkinds of objects are on the screen, as long as each implements[m
[32m+[m[32m{\tt Repaint}.[m
[32m+[m
[32m+[m[32m\item You can share pieces of an implementation between two[m
[32m+[m[32mobjects.  For example, if you were to implement both lists and[m[41m [m
[32m+[m[32msorted lists in C, you'd probably find yourself repeating code[m
[32m+[m[32min both places -- in fact, you might be really tempted to[m
[32m+[m[32monly implement sorted lists, so that you only had to debug[m
[32m+[m[32mone version.  Inheritance provides a way to re-use code[m
[32m+[m[32mbetween nearly similar classes.  For example, given an implementation[m
[32m+[m[32mof a list class, in C++ you can implement sorted lists by replacing[m
[32m+[m[32mthe insert member function -- the other functions, delete, isFull,[m
[32m+[m[32mprint, all remain the same.[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\subsubsection{Shared Behavior}[m
[32m+[m
[32m+[m[32mLet me use our Stack example to illustrate the first of these.[m
[32m+[m[32mOur Stack implementation[m[41m [m
[32m+[m[32mabove could have been implemented with linked lists, instead of an array.[m
[32m+[m[32mAny code using a Stack shouldn't[m
[32m+[m[32mcare which implementation is being used, except that the linked list[m
[32m+[m[32mimplementation can't overflow. (In fact, we could also change the[m
[32m+[m[32marray implementation to handle overflow by automatically resizing[m
[32m+[m[32mthe array as items are pushed on the stack.)[m
[32m+[m
[32m+[m[32mTo allow the two implementations to coexist, we first define an[m
[32m+[m[32m{\em abstract} Stack, containing just the public member functions,[m[41m [m
[32m+[m[32mbut no data.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack();[m
[32m+[m[32m    virtual ~Stack();          // deallocate the stack[m
[32m+[m[32m    virtual void Push(int value) = 0;[m[41m [m
[32m+[m[32m                               // Push an integer, checking for overflow.[m
[32m+[m[32m    virtual bool Full() = 0;   // Is the stack is full?[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// For g++, need these even though no data to initialize.[m
[32m+[m[32mStack::Stack {}[m[41m             [m
[32m+[m[32mStack::~Stack() {}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe {\tt Stack} definition is called a {\em base class} or sometimes a {\em[m
[32m+[m[32msuperclass}.  We can then define two different {\em derived classes},[m[41m [m
[32m+[m[32msometimes called {\em subclasses} which inherit behavior from the base[m
[32m+[m[32mclass.  (Of course, inheritance is recursive -- a derived class can in[m[41m [m
[32m+[m[32mturn be a base class for yet another derived class, and so on.)[m
[32m+[m[32mNote that I have prepended the functions in the base class is prepended[m[41m [m
[32m+[m[32mwith the keyword {\tt virtual}, to signify that they can be redefined by[m[41m [m
[32m+[m[32meach of the two derived classes.  The virtual functions are[m
[32m+[m[32minitialized to zero, to tell the compiler that those functions[m
[32m+[m[32mmust be defined by the derived classes.[m
[32m+[m
[32m+[m[32mHere's how we could declare the array-based and list-based[m
[32m+[m[32mimplementations of {\tt Stack}. The syntax {\tt : public Stack} signifies[m[41m [m
[32m+[m[32mthat both {\tt ArrayStack} and {\tt ListStack} are kinds[m[41m [m
[32m+[m[32mof {\tt Stacks}, and share the same behavior as the base class.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass ArrayStack : public Stack {  // the same as in Section 2[m
[32m+[m[32m  public:[m
[32m+[m[32m    ArrayStack(int sz);   // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~ArrayStack();        // Destructor:   deallocate space allocated above.[m
[32m+[m[32m    void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();     // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;        // The maximum capacity of the stack.[m
[32m+[m[32m    int top;         // Index of the lowest unused position.[m
[32m+[m[32m    int *stack;      // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mclass ListStack : public Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    ListStack();[m[41m [m
[32m+[m[32m    ~ListStack();[m
[32m+[m[32m    void Push(int value);[m
[32m+[m[32m    bool Full();[m
[32m+[m[32m  private:[m
[32m+[m[32m    List *list;		// list of items pushed on the stack[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mListStack::ListStack() {[m[41m [m
[32m+[m[32m    list = new List;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mListStack::~ListStack() {[m[41m [m
[32m+[m[32m    delete list;[m[41m [m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m[32m\newpage[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mvoid ListStack::Push(int value) {[m
[32m+[m[32m    list->Prepend(value);[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbool ListStack::Full() {[m
[32m+[m[32m    return FALSE; 	// this stack never overflows![m
[32m+[m[32m}[m[41m  [m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe neat concept here is that I can assign pointers to instances of[m
[32m+[m[32m{\tt ListStack} or {\tt ArrayStack} to a variable of type {\tt Stack}, and[m
[32m+[m[32mthen use them as if they were of the base type.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    Stack *s1 = new ListStack;[m
[32m+[m[32m    Stack *s2 = new ArrayStack(17);[m
[32m+[m
[32m+[m[32m    if (!stack->Full())[m
[32m+[m[32m        s1->Push(5);[m
[32m+[m[32m    if (!s2->Full())[m
[32m+[m[32m        s2->Push(6);[m
[32m+[m
[32m+[m[32m    delete s1;[m
[32m+[m[32m    delete s2;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe compiler automatically invokes {\tt ListStack} operations[m
[32m+[m[32mfor {\tt s1}, and {\tt ArrayStack} operations for {\tt s2};[m
[32m+[m[32mthis is done by creating a procedure table for each object,[m
[32m+[m[32mwhere derived objects override the default entries in the table[m
[32m+[m[32mdefined by the base class.  To the code above, it invokes the[m
[32m+[m[32moperations {\tt Full}, {\tt Push}, and {\tt delete} by indirection[m
[32m+[m[32mthrough the procedure table, so that the code doesn't need to know[m
[32m+[m[32mwhich kind of object it is.[m
[32m+[m
[32m+[m[32mIn this example, since I never create an instance of the[m
[32m+[m[32mabstract class {\tt Stack}, I do not need to {\em implement} its[m
[32m+[m[32mfunctions.  This might seem a bit strange, but remember that[m
[32m+[m[32mthe derived classes are the various implementations of Stack,[m
[32m+[m[32mand Stack serves only to reflect the shared behavior between[m
[32m+[m[32mthe different implementations.[m[41m  [m
[32m+[m
[32m+[m[32mAlso note that the destructor for {\tt Stack} is a virtual[m[41m [m
[32m+[m[32mfunction but the constructor is not.  Clearly, when I create an[m
[32m+[m[32mobject, I have to know which kind of object it is, whether[m[41m [m
[32m+[m[32m{\tt ArrayStack} or {\tt ListStack}.  The compiler[m[41m [m
[32m+[m[32mmakes sure that no one creates an instance of the abstract {\tt Stack}[m[41m [m
[32m+[m[32mby mistake -- you cannot instantiate any class whose virtual[m[41m [m
[32m+[m[32mfunctions are not completely defined (in other words, if any of[m[41m [m
[32m+[m[32mits functions are set to zero in the class definition).[m
[32m+[m
[32m+[m[32mBut when I deallocate an object, I may no longer know its exact[m
[32m+[m[32mtype.  In the above code, I want to call the destructor for the[m
[32m+[m[32mderived object, even though the code only knows that I am deleting[m
[32m+[m[32man object of class {\tt Stack}.  If the destructor were not virtual,[m
[32m+[m[32mthen the compiler would invoke {\tt Stack}'s destructor, which is[m[41m [m
[32m+[m[32mnot at all what I want.  This is an easy mistake to make (I made[m
[32m+[m[32mit in the first draft of this article!) -- if you don't define[m
[32m+[m[32ma destructor for the abstract class, the compiler will define one[m[41m [m
[32m+[m[32mfor you implicitly (and by the way, it won't be virtual, since you[m
[32m+[m[32mhave a {\em really} unhelpful compiler).  The result for the[m
[32m+[m[32mabove code would be a memory leak, and who knows how you would[m[41m [m
[32m+[m[32mfigure that out![m
[32m+[m
[32m+[m[32m\subsubsection{Shared Implementation}[m
[32m+[m
[32m+[m[32mWhat about sharing code, the other reason for inheritance?[m[41m [m
[32m+[m[32mIn C++, it is possible to use member functions[m
[32m+[m[32mof a base class in its derived class.  (You can also share[m
[32m+[m[32mdata between a base class and derived classes, but this[m
[32m+[m[32mis a bad idea for reasons I'll discuss later.)[m
[32m+[m
[32m+[m[32mSuppose that I wanted to add a new member function,[m
[32m+[m[32m{\tt NumberPushed()}, to both implementations of {\tt Stack}.[m
[32m+[m[32mThe {\tt ArrayStack} class already keeps count of the number of[m
[32m+[m[32mitems on the stack, so I could duplicate that code in {\tt ListStack}.[m
[32m+[m[32mIdeally, I'd like to be able to use the same code in both places.[m
[32m+[m[32mWith inheritance, we can move the counter into the[m[41m [m
[32m+[m[32m{\tt Stack} class, and then invoke the base class operations[m
[32m+[m[32mfrom the derived class to update the counter.[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    virtual ~Stack();		// deallocate data[m
[32m+[m[32m    virtual void Push(int value); // Push an integer, checking for overflow.[m
[32m+[m[32m    virtual bool Full() = 0;	// return TRUE if full[m
[32m+[m[32m    int NumPushed();	        // how many are currently on the stack?[m
[32m+[m[32m  protected:[m
[32m+[m[32m    Stack();			// initialize data[m
[32m+[m[32m  private:[m
[32m+[m[32m    int numPushed;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mStack::Stack() {[m[41m [m
[32m+[m[32m    numPushed = 0;[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Stack::Push(int value) {[m[41m [m
[32m+[m[32m    numPushed++;[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint Stack::NumPushed() {[m[41m [m
[32m+[m[32m    return numPushed;[m[41m [m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mWe can then modify both {\tt ArrayStack} and {\tt ListStack}[m
[32m+[m[32mto make use the new behavior of {\tt Stack}.  I'll only list[m
[32m+[m[32mone of them here:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass ArrayStack : public Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    ArrayStack(int sz);[m[41m   [m
[32m+[m[32m    ~ArrayStack();[m[41m        [m
[32m+[m[32m    void Push(int value);[m[41m [m
[32m+[m[32m    bool Full();[m[41m     [m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;        // The maximum capacity of the stack.[m
[32m+[m[32m    int *stack;      // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mArrayStack::ArrayStack(int sz) : Stack() {[m[41m [m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    stack = new int[size];   // Let's get an array of integers.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mArrayStack::Push(int value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[32m    stack[NumPushed()] = value;[m
[32m+[m[32m    Stack::Push();	     // invoke base class to increment numPushed[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThere are a few things to note:[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item The constructor for {\tt ArrayStack} needs to invoke the[m
[32m+[m[32mconstructor for {\tt Stack}, in order to initialize {\tt numPushed}.[m
[32m+[m[32mIt does that by adding {\tt : Stack()} to the first line in the constructor:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mArrayStack::ArrayStack(int sz) : Stack()[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mThe same thing applies to destructors.  There are special rules for which[m[41m [m
[32m+[m[32mget called first -- the constructor/destructor for the base class or[m[41m [m
[32m+[m[32mthe constructor/destructor for the derived class.  All I should say is,[m
[32m+[m[32mit's a bad idea to rely on whatever the rule is -- more generally, it is a[m[41m [m
[32m+[m[32mbad idea to write code which requires the reader to consult a manual[m[41m [m
[32m+[m[32mto tell whether or not the code works![m
[32m+[m
[32m+[m[32m\item I introduced a new keyword, {\tt protected}, in the new definition[m
[32m+[m[32mof {\tt Stack}.  For a base class, {\tt protected} signifies that those[m
[32m+[m[32mmember data and functions are accessible to classes derived (recursively)[m
[32m+[m[32mfrom this class, but inaccessible to other classes.  In other words, protected[m
[32m+[m[32mdata is {\tt public} to derived classes, and {\tt private} to everyone else.[m
[32m+[m[32mFor example, we need {\tt Stack}'s constructor to be callable by[m[41m [m
[32m+[m[32m{\tt ArrayStack} and {\tt ListStack}, but we don't want anyone[m
[32m+[m[32melse to create instances of {\tt Stack}.  Hence, we make {\tt Stack}'s[m[41m [m
[32m+[m[32mconstructor a protected function.  In this case, this is not strictly[m
[32m+[m[32mnecessary since the compiler will complain if anyone tries to create an[m
[32m+[m[32minstance of {\tt Stack} because {\tt Stack} still has an undefined virtual[m[41m [m
[32m+[m[32mfunctions, {\tt Push}.  By defining {\tt Stack::Stack} as {\tt protected},[m[41m [m
[32m+[m[32myou are safe even if someone comes along later and defines {\tt Stack::Push}.[m
[32m+[m
[32m+[m[32mNote however that I made {\tt Stack}'s data member {\tt private}, not[m
[32m+[m[32m{\tt protected}.  Although there is some debate on this point,[m
[32m+[m[32mas a rule of thumb you should never allow one class to see directly[m
[32m+[m[32maccess the data in another, even among classes related[m
[32m+[m[32mby inheritance.  Otherwise, if you ever change the implementation[m
[32m+[m[32mof the base class, you will have to examine and change all the[m[41m [m
[32m+[m[32mimplementations of the derived classes, violating modularity.[m
[32m+[m
[32m+[m[32m\item The interface for a derived class automatically includes all[m
[32m+[m[32mfunctions defined for its base class, without having to explicitly[m[41m [m
[32m+[m[32mlist them in the derived class.  Although we didn't define[m[41m [m
[32m+[m[32m{\tt NumPushed()} in {\tt ArrayStack}, we can still call it for[m[41m [m
[32m+[m[32mthose objects:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    ArrayStack *s = new ArrayStack(17);[m
[32m+[m
[32m+[m[32m    ASSERT(s->NumPushed() == 0);	// should be initialized to 0[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32m\item Conversely, even though we have defined a routine {\tt Stack::Push()},[m
[32m+[m[32mbecause it is declared as {\tt virtual}, if we invoke {\tt Push()}[m[41m [m
[32m+[m[32mon an {\tt ArrayStack} object, we will get {\tt ArrayStack}'s version[m[41m [m
[32m+[m[32mof {\tt Push}:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    Stack *s = new ArrayStack(17);[m
[32m+[m
[32m+[m[32m    if (!s->Full())		// ArrayStack::Full[m
[32m+[m[32m        s->Push(5);		// ArrayStack::Push[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32m\item {\tt Stack::NumPushed()} is not {\tt virtual}.  That means[m[41m [m
[32m+[m[32mthat it cannot be re-defined by {\tt Stack}'s derived classes.[m
[32m+[m[32mSome people believe that you should mark {\em all} functions[m
[32m+[m[32min a base class as {\tt virtual}; that way, if you later want to[m
[32m+[m[32mimplement a derived class that redefines a function, you don't have[m
[32m+[m[32mto modify the base class to do so.[m
[32m+[m
[32m+[m[32m\item Member functions in a derived class can explicitly invoke[m[41m [m
[32m+[m[32mpublic or protected functions in the base class, by the full[m
[32m+[m[32mname of the function, {\tt Base::Function()}, as in:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mvoid ArrayStack::Push(int value)[m
[32m+[m[32m{[m
[32m+[m[32m    ...[m
[32m+[m[32m    Stack::Push();	     // invoke base class to increment numPushed[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mOf course, if we just called {\tt Push()} here (without prepending[m[41m [m
[32m+[m[32m{\tt Stack::}, the compiler would think we were referring[m[41m [m
[32m+[m[32mto {\tt ArrayStack}'s {\tt Push()}, and so that would recurse,[m
[32m+[m[32mwhich is not exactly what we had in mind here.[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32mWhew!  Inheritance in C++ involves lots and lots of details.[m
[32m+[m[32mBut it's real downside is that it tends to spread implementation[m[41m [m
[32m+[m[32mdetails across multiple files -- if you have a deep inheritance[m[41m [m
[32m+[m[32mtree, it can take some serious digging to figure out what code[m[41m [m
[32m+[m[32mactually executes when a member function is invoked.[m
[32m+[m
[32m+[m[32mSo the question to ask yourself before using inheritance is:[m
[32m+[m[32mwhat's your goal?  Is it to write your programs with the[m
[32m+[m[32mfewest number of characters possible?  If so, inheritance is[m
[32m+[m[32mreally useful, but so is changing all of your function and variable[m[41m [m
[32m+[m[32mnames to be one letter long -- "a", "b", "c" -- and once you[m
[32m+[m[32mrun out of lower case ones, start using upper case, then two character[m[41m [m
[32m+[m[32mvariable names: "XX XY XZ Ya ..." (I'm joking here.)[m
[32m+[m[32mNeedless to say, it is really easy to write unreadable code[m
[32m+[m[32musing inheritance.[m[41m  [m
[32m+[m
[32m+[m[32mSo when is it a good idea to use inheritance and when should it be[m
[32m+[m[32mavoided?  My rule of thumb is to only use it for representing[m[41m [m
[32m+[m[32m{\em shared behavior} between objects, and to never use it for[m
[32m+[m[32mrepresenting {\em shared implementation}.  With C++, you can use[m[41m [m
[32m+[m[32minheritance for both concepts, but only the first will lead to[m
[32m+[m[32mtruly simpler implementations.[m
[32m+[m
[32m+[m[32mTo illustrate the difference between shared behavior and shared[m
[32m+[m[32mimplementation, suppose you had a whole bunch of different kinds[m
[32m+[m[32mof objects that you needed to put on lists.  For example, almost everything[m
[32m+[m[32min an operating system goes on a list of some sort: buffers, threads,[m
[32m+[m[32musers, terminals, etc.[m
[32m+[m
[32m+[m[32mA very common approach to this problem (particularly among people new[m
[32m+[m[32mto object-oriented programming) is to make every object inherit from[m
[32m+[m[32ma single base class {\em Object}, which contains the forward and backward[m
[32m+[m[32mpointers for the list.  But what if some object needs to go on multiple[m
[32m+[m[32mlists?  The whole scheme breaks down, and it's because we tried to use[m
[32m+[m[32minheritance to share implementation (the code for the forward and backward[m
[32m+[m[32mpointers) instead of to share behavior.  A much cleaner (although slightly[m
[32m+[m[32mslower) approach would[m
[32m+[m[32mbe to define a list implementation that allocated forward/backward[m
[32m+[m[32mpointers for each object that gets put on a list.[m
[32m+[m
[32m+[m[32mIn sum, if two classes share at least some of the same member function[m
[32m+[m[32msignatures -- that is, the same behavior, {\em and} if there's code that[m
[32m+[m[32monly relies on the shared behavior, then there {\em may}[m
[32m+[m[32mbe a benefit to using inheritance.  In Nachos, locks don't inherit from[m
[32m+[m[32msemaphores, even though locks are implemented using semaphores.  The[m
[32m+[m[32moperations on semaphores and locks are different.  Instead, inheritance is[m
[32m+[m[32monly used for various kinds of lists (sorted, keyed, etc.),[m
[32m+[m[32mand for different implementations of the physical disk abstraction,[m
[32m+[m[32mto reflect whether the disk has a track buffer, etc.  A disk is used[m
[32m+[m[32mthe same way whether or not it has a track buffer; the only difference is[m
[32m+[m[32min its performance characteristics.[m
[32m+[m
[32m+[m[32m\subsection{Templates}[m
[32m+[m
[32m+[m[32mTemplates are another useful but dangerous concept in C++.[m
[32m+[m[32mWith templates, you can parameterize a class definition[m
[32m+[m[32mwith a {\em type}, to allow you to write generic type-independent[m
[32m+[m[32mcode.  For example, our {\tt Stack} implementation above only worked[m[41m [m
[32m+[m[32mfor pushing and popping {\em integers}; what if we wanted a stack[m[41m [m
[32m+[m[32mof characters, or floats, or pointers, or some arbitrary data structure?[m
[32m+[m
[32m+[m[32mIn C++, this is pretty easy to do using templates:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mtemplate <class T>[m[41m [m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack(int sz);    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~Stack();         // Destructor:   deallocate space allocated above.[m
[32m+[m[32m    void Push(T value); // Push an integer, checking for overflow.[m
[32m+[m[32m    bool Full();      // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the lowest unused position.[m
[32m+[m[32m    T *stack;       // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mTo define a template, we prepend the keyword {\tt template} to[m
[32m+[m[32mthe class definition, and we put the parameterized type for the[m
[32m+[m[32mtemplate in angle brackets.  If we need to parameterize the implementation[m
[32m+[m[32mwith two or more types, it works just like an argument list:[m
[32m+[m[32m{\tt template <class T, class S>}.  We can use the type parameters[m
[32m+[m[32melsewhere in the definition, just like they were normal types.[m
[32m+[m
[32m+[m[32mWhen we provide the implementation for each of the member functions[m
[32m+[m[32min the class, we also have to declare them as templates, and again,[m
[32m+[m[32monce we do that, we can use the type parameters just like normal types:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m     // template version of Stack::Stack[m
[32m+[m[32mtemplate <class T>[m[41m [m
[32m+[m[32mStack<T>::Stack(int sz) {[m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    top = 0;[m
[32m+[m[32m    stack = new T[size];   // Let's get an array of type T[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m     // template version of Stack::Push[m
[32m+[m[32mtemplate <class T>[m[41m [m
[32m+[m[32mvoid[m
[32m+[m[32mStack<T>::Push(T value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mCreating an object of a template class is similar to creating[m
[32m+[m[32ma normal object:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mvoid[m
[32m+[m[32mtest() {[m
[32m+[m[32m    Stack<int> s1(17);[m
[32m+[m[32m    Stack<char> *s2 = new Stack<char>(23);[m
[32m+[m
[32m+[m[32m    s1.Push(5);[m
[32m+[m[32m    s2->Push('z');[m
[32m+[m[32m    delete s2;[m
[32m+[m[32m}[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mEverything operates as if we defined two classes, one[m
[32m+[m[32mcalled {\tt Stack<int>} -- a stack of integers, and one[m
[32m+[m[32mcalled {\tt Stack<char>} -- a stack of characters.[m
[32m+[m[32m{\tt s1} behaves just like an instance of the first;[m
[32m+[m[32m{\tt s2} behaves just like an instance of the second.[m
[32m+[m[32mIn fact, that is exactly how templates are typically implemented --[m
[32m+[m[32myou get a complete {\em copy} of the code for the template[m
[32m+[m[32mfor each different instantiated type. In the above example,[m
[32m+[m[32mwe'd get one copy of the code for {\tt ints} and one copy for {\tt chars}.[m
[32m+[m
[32m+[m[32mSo what's wrong with templates?  You've all been taught to make[m
[32m+[m[32myour code modular so that it can be re-usable, so {\em everything}[m
[32m+[m[32mshould be a template, right?  Wrong.[m[41m  [m
[32m+[m
[32m+[m[32mThe principal problem with templates is that they can be {\em very}[m[41m [m
[32m+[m[32mdifficult to debug -- templates are easy to use if they work, but[m[41m [m
[32m+[m[32mfinding a bug in them can be difficult. In part this is because[m[41m [m
[32m+[m[32mcurrent generation C++ debuggers don't really understand templates[m[41m [m
[32m+[m[32mvery well.  Nevertheless, it is easier to debug a template than[m
[32m+[m[32mtwo nearly identical implementations that differ only in their types.[m
[32m+[m
[32m+[m[32mSo the best advice is -- don't make a class into a template[m
[32m+[m[32munless there really is a near term use for the template. And if you[m
[32m+[m[32mdo need to implement a template, implement and debug a non-template[m
[32m+[m[32mversion first.  Once that is working, it won't be hard to convert[m
[32m+[m[32mit to a template.  Then all you have to worry about code[m
[32m+[m[32mexplosion -- e.g., your program's object code is now megabytes[m
[32m+[m[32mbecause of the 15 copies of the hash table/list/... routines, one for[m[41m [m
[32m+[m[32meach kind of thing you want to put in a hash table/list/...[m
[32m+[m[32m(Remember, you have an unhelpful compiler!)[m
[32m+[m
[32m+[m[32m\section{Features To Avoid Like the Plague}[m
[32m+[m
[32m+[m[32mDespite the length of this note, there are numerous[m
[32m+[m[32mfeatures in C++ that I haven't explained.  I'm sure each feature[m
[32m+[m[32mhas its advocates, but despite programming in C and C++ for over 15[m[41m [m
[32m+[m[32myears, I haven't found a compelling reason to use them in any code[m
[32m+[m[32mthat I've written (outside of a programming language class!)[m[41m [m
[32m+[m
[32m+[m[32mIndeed, there is a compelling reason to avoid using these features -- they are[m[41m [m
[32m+[m[32measy to misuse, resulting in programs that are harder to read and understand[m
[32m+[m[32minstead of easier to understand.  In most cases, the features are also[m[41m [m
[32m+[m[32mredundant -- there are other ways of accomplishing the same end.  Why have[m
[32m+[m[32mtwo ways of doing the same thing?  Why not stick with the simpler one?[m
[32m+[m
[32m+[m[32mI do not use any of the following features in Nachos.[m[41m  [m
[32m+[m[32mIf you use them, {\it caveat hacker}.[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item {\bf Multiple inheritance.}  It is possible in C++ to define[m
[32m+[m[32ma class as inheriting behavior from multiple classes (for instance,[m
[32m+[m[32ma dog is both an animal and a furry thing).  But if programs[m
[32m+[m[32musing single inheritance can be difficult to untangle, programs[m
[32m+[m[32mwith multiple inheritance can get really confusing.[m
[32m+[m
[32m+[m[32m\item {\bf References.}  Reference variables are rather hard to[m
[32m+[m[32munderstand in general; they play the same role as pointers, with[m
[32m+[m[32mslightly different syntax (unfortunately, I'm not joking!)[m[41m [m
[32m+[m[32mTheir most common use is to declare some parameters to a function[m[41m [m
[32m+[m[32mas {\it reference parameters}, as in Pascal.  A call-by-reference[m[41m [m
[32m+[m[32mparameter can be modified by the calling function, without the callee[m[41m [m
[32m+[m[32mhaving to pass a pointer.  The effect is that parameters look[m[41m [m
[32m+[m[32m(to the caller) like they are called by value (and therefore can't change),[m[41m [m
[32m+[m[32mbut in fact can be transparently modified by the called function.[m
[32m+[m[32mObviously, this can be a source of obscure bugs, not to mention[m
[32m+[m[32mthat the semantics of references in C++ are in general not obvious.[m
[32m+[m
[32m+[m[32m\item {\bf Operator overloading.}  C++ lets you redefine the meanings[m
[32m+[m[32mof the operators (such as {\tt +} and \verb+>>+) for class objects.[m
[32m+[m[32mThis is dangerous at best ("exactly which implementation of '+' does[m
[32m+[m[32mthis refer to?"), and when used in non-intuitive ways, a[m
[32m+[m[32msource of great confusion, made worse by the fact that C++ does[m[41m [m
[32m+[m[32mimplicit type conversion, which can affect which operator[m
[32m+[m[32mis invoked.  Unfortunately, C++'s I/O facilities[m
[32m+[m[32mmake heavy use of operator overloading and references, so you[m
[32m+[m[32mcan't completely escape them, but think twice before you redefine[m
[32m+[m[32m'+' to mean ``concatenate these two strings''.[m
[32m+[m
[32m+[m[32m\item {\bf Function overloading.}  You can also define different functions[m
[32m+[m[32min a class with the same name but different argument types.  This is also[m
[32m+[m[32mdangerous (since it's easy to slip up and get the unintended version),[m[41m [m
[32m+[m[32mand we never use it.  We will also avoid using default arguments (for the[m
[32m+[m[32msame reason).  Note that it can be a good idea to use the same name for[m[41m [m
[32m+[m[32mfunctions in different classes, provided they use the same[m
[32m+[m[32marguments and behave the same way -- a good example of this is that[m[41m [m
[32m+[m[32mmost Nachos objects have a {\tt Print()} method.[m
[32m+[m
[32m+[m[32m\item {\bf Standard template library.} An ANSI standard has emerged for a[m
[32m+[m[32mlibrary of routines implementing such things as lists, hash tables,[m
[32m+[m[32metc., called the standard template library.  Using such a library[m
[32m+[m[32mshould make programming much simpler if the data structure you need[m
[32m+[m[32mis already provided in the library.  Alas, the standard template[m
[32m+[m[32mlibrary pushes the envelope of legal C++, and so virtually no[m
[32m+[m[32mcompilers (including g++) can support it today.  Not to mention that[m[41m [m
[32m+[m[32mit uses (big surprise!) references, operator overloading, and[m[41m [m
[32m+[m[32mfunction overloading.[m
[32m+[m
[32m+[m[32m\item {\bf Exceptions.} There are two ways to return an error from[m
[32m+[m[32ma procedure.  One is simple -- just define the procedure to return[m
[32m+[m[32man error code if it isn't able to do it's job.  For example,[m
[32m+[m[32mthe standard library routine {\tt malloc} returns NULL if there[m
[32m+[m[32mis no available memory.  However, lots of programmers are lazy and[m[41m [m
[32m+[m[32mdon't check error codes.  So what's the solution?  You might think[m[41m [m
[32m+[m[32mit would be to get programmers who aren't lazy, but no, the C++ solution[m[41m [m
[32m+[m[32mis to add a programming language construct!  A procedure can[m
[32m+[m[32mreturn an error by ``raising an exception'' which effectively[m
[32m+[m[32mcauses a {\tt goto} back up the execution stack to the last[m
[32m+[m[32mplace the programmer put an exception handler.  You would think[m
[32m+[m[32mthis is too bizarre to be true, but unfortunately,[m
[32m+[m[32mI'm not making this up.[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32mWhile I'm at it, there are a number of features of C that you also[m
[32m+[m[32mshould avoid, because they lead to bugs and make your code less easy[m
[32m+[m[32mto understand.  See Maguire's "Writing Solid Code" for a more complete[m
[32m+[m[32mdiscussion of this issue.  All of these features are legal C;[m
[32m+[m[32mwhat's legal isn't necessarily good.[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m[32m\item Pointer arithmetic.  Runaway pointers are a principal source[m[41m [m
[32m+[m[32mof hard-to-find bugs in C programs, because the symptom of this happening[m
[32m+[m[32mcan be mangled data structures in a completely different part of the program.[m
[32m+[m[32mDepending on exactly which objects are allocated on the heap in which[m[41m [m
[32m+[m[32morder, pointer bugs can appear and disappear, seemingly at random.[m
[32m+[m[32mFor example, {\tt printf} sometimes allocates memory on the heap,[m
[32m+[m[32mwhich can change the addresses returned by all future calls to {\tt new}.[m
[32m+[m[32mThus, adding a {\tt printf} can change things so that a pointer[m
[32m+[m[32mwhich used to (by happenstance) mangle a critical data structure[m
[32m+[m[32m(such as the middle of a thread's execution stack), now overwrites memory[m[41m [m
[32m+[m[32mthat may not even be used.[m
[32m+[m
[32m+[m[32mThe best way to avoid runaway pointers is (no surprise) to be[m[41m [m
[32m+[m[32m{\em very} careful when using pointers.  Instead of iterating[m
[32m+[m[32mthrough an array with pointer arithmetic, use a separate index[m[41m  [m
[32m+[m[32mvariable, and assert that the index is never larger than the size[m
[32m+[m[32mof the array.  Optimizing compilers have gotten very good, so that the[m
[32m+[m[32mgenerated machine code is likely to be the same in either case.[m
[32m+[m
[32m+[m[32mEven if you don't use pointer arithmetic, it's still easy[m
[32m+[m[32m(easy is bad in this context!) to have an off-by-one errror[m[41m [m
[32m+[m[32mthat causes your program to step beyond the end of an array.[m
[32m+[m[32mHow do you fix this?  Define a class to contain the array[m
[32m+[m[32m{\em and its length}; before allowing any access to the array,[m
[32m+[m[32myou can then check whether the access is legal or in error.[m
[32m+[m
[32m+[m[32m\item Casts from integers to pointers and back.  Another source[m
[32m+[m[32mof runaway pointers is that C and C++ allow you to convert[m
[32m+[m[32mintegers to pointers, and back again.  Needless to say, using a[m[41m [m
[32m+[m[32mrandom integer value as a pointer is likely to result in unpredictable[m
[32m+[m[32msymptoms that will be very hard to track down.[m
[32m+[m
[32m+[m[32mIn addition, on some 64 bit machines, such as the Alpha, it is[m
[32m+[m[32mno longer the case that the size of an integer is the same as the[m
[32m+[m[32mthe size of a pointer.  If you cast between pointers and integers,[m
[32m+[m[32myou are also writing highly non-portable code.[m
[32m+[m
[32m+[m[32m\item Using bit shift in place of a multiply or divide.[m
[32m+[m[32mThis is a clarity issue.  If you are doing arithmetic, use[m
[32m+[m[32marithmetic operators; if you are doing bit manipulation,[m
[32m+[m[32muse bitwise operators.  If I am trying to multiply by 8, which is[m[41m [m
[32m+[m[32measier to understand, {\tt x << 3} or {\tt x * 8}?  In the 70's,[m[41m [m
[32m+[m[32mwhen C was being developed, the former would yield more efficient[m[41m [m
[32m+[m[32mmachine code, but today's compilers generate the same code in both[m
[32m+[m[32mcases, so readability should be your primary concern.[m
[32m+[m
[32m+[m[32m\item Assignment inside conditional.  Many programmers have the attitude[m
[32m+[m[32mthat simplicity equals saving as many keystrokes as possible.[m
[32m+[m[32mThe result can be to hide bugs that would otherwise be obvious.[m
[32m+[m[32mFor example:[m
[32m+[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m    if (x = y) {[m
[32m+[m[32m      ...[m
[32m+[m[32m\end{verbatim}[m
[32m+[m
[32m+[m[32mWas the intent really {\tt x == y}?  After all, it's pretty easy[m
[32m+[m[32mto mistakenly leave off the extra equals sign.  By never using[m
[32m+[m[32massignment within a conditional, you can tell by code inspection[m
[32m+[m[32mwhether you've made a mistake.[m
[32m+[m
[32m+[m[32m\item Using {\tt \#define} when you could use {\tt enum}.[m
[32m+[m[32mWhen a variable can hold one of a small number of values,[m
[32m+[m[32mthe original C practice was to use {\tt \#define} to set up[m[41m [m
[32m+[m[32msymbolic names for each of the values.  {\tt enum} does this[m[41m [m
[32m+[m[32min a type-safe way -- it allows the compiler to verify[m
[32m+[m[32mthat the variable is only assigned one of the enumerated values,[m
[32m+[m[32mand none other.  Again, the advantage is to eliminate a class of[m
[32m+[m[32merrors from your program, making it quicker to debug.[m
[32m+[m[32m\end{enumerate}[m
[32m+[m[32m\newpage[m
[32m+[m
[32m+[m[32m\section{Style Guidelines}[m
[32m+[m
[32m+[m[32mEven if you follow the approach I've outlined above, it is still[m
[32m+[m[32mas easy to write unreadable and undebuggable code in C++ as it[m
[32m+[m[32mis in C, and perhaps easier, given the more powerful features the[m
[32m+[m[32mlanguage provides.  For the Nachos project, and in general, we suggest[m[41m [m
[32m+[m[32myou adhere to the following guidelines (and tell us if you catch us[m[41m [m
[32m+[m[32mbreaking them):[m
[32m+[m
[32m+[m[32m\begin{enumerate}[m
[32m+[m
[32m+[m[32m\item Words in a name are separated SmallTalk-style (i.e., capital[m
[32m+[m[32mletters at the start of each new word).  All class names and member[m
[32m+[m[32mfunction names begin with a capital letter, except for member[m
[32m+[m[32mfunctions of the form {\tt getSomething()} and {\tt setSomething()},[m
[32m+[m[32mwhere {\tt Something} is a data element of the class (i.e., accessor[m
[32m+[m[32mfunctions).  Note that you would want to provide such functions only[m
[32m+[m[32mwhen the data should be visible to the outside world, but you want to[m
[32m+[m[32mforce all accesses to go through one function.  This is often a good[m
[32m+[m[32midea, since you might at some later time decide to compute the data[m
[32m+[m[32minstead of storing it, for example.[m
[32m+[m
[32m+[m[32m\item All global functions should be capitalized,[m
[32m+[m[32mexcept for {\tt main} and library[m
[32m+[m[32mfunctions, which are kept lower-case for historical reasons.[m
[32m+[m
[32m+[m[32m\item Minimize the use of global variables.  If you find yourself[m
[32m+[m[32musing a lot of them, try and group some together in a class in a[m
[32m+[m[32mnatural way or pass them as arguments to the functions that need them[m
[32m+[m[32mif you can.[m
[32m+[m
[32m+[m[32m\item Minimize the use of global functions (as opposed to member[m
[32m+[m[32mfunctions).  If you write a function that operates on some object,[m
[32m+[m[32mconsider making it a member function of that object.[m
[32m+[m
[32m+[m[32m\item For every class or set of related classes, create a separate[m
[32m+[m[32m{\tt .h} file and {\tt .cc} file. The {\tt .h} file acts as the {\it[m
[32m+[m[32minterface} to the class, and the {\tt .cc} file acts as the[m
[32m+[m[32m{\it implementation} (a given {\tt .cc} file should {\tt include} it's[m
[32m+[m[32mrespective {\tt .h} file).  If using a particular {\tt .h} file requires[m
[32m+[m[32manother {\tt .h} file to be included (e.g., {\tt synch.h} needs[m
[32m+[m[32mclass definitions from {\tt thread.h}) you should include the dependency[m
[32m+[m[32min the {\tt .h} file, so that the user of your class doesn't have to[m[41m [m
[32m+[m[32mtrack down all the dependencies himself.[m[41m  [m
[32m+[m[32mTo protect against multiple inclusion, bracket each {\tt .h}[m
[32m+[m[32mfile with something like:[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32m#ifndef STACK_H[m
[32m+[m[32m#define STACK_H[m
[32m+[m
[32m+[m[32mclass Stack { ... };[m
[32m+[m
[32m+[m[32m#endif[m
[32m+[m[32m\end{verbatim}[m
[32m+[m[32mSometimes this will not be enough, and you will have a circular[m
[32m+[m[32mdependency.  For example, you might have a {\tt .h} file that[m
[32m+[m[32muses a definition from one {\tt .h} file, but also defines something[m
[32m+[m[32mneeded by that {\tt .h} file.  In this case, you will have to do[m[41m [m
[32m+[m[32msomething ad-hoc.  One thing to realize is that you don't always[m
[32m+[m[32mhave to completely define a class before it is used.  If you[m
[32m+[m[32monly use a pointer to class {\tt Stack} and do not access any[m
[32m+[m[32mmember functions or data from the class, you can write, in lieu of[m[41m [m
[32m+[m[32mincluding {\tt stack.h}:[m
[32m+[m[32m\begin{verbatim}[m
[32m+[m[32mclass Stack;[m
[32m+[m[32m\end{verbatim}[m
[32m+[m[32mThis will tell the compiler all it[m
[32m+[m[32mneeds to know to deal with the pointer.  In a few cases this won't work,[m
[32m+[m[32mand you will have to move stuff around or alter your definitions.[m
[32m+[m
[32m+[m[32m\item Use {\tt ASSERT} statements liberally to check that your program[m
[32m+[m[32mis behaving properly.  An assertion is a condition that if[m
[32m+[m[32mFALSE signifies that there is a bug in the program;[m
[32m+[m[32m{\tt ASSERT} tests an expression and aborts if the condition is[m
[32m+[m[32mfalse.  We used {\tt ASSERT} above in {\tt Stack::Push()} to check[m[41m [m
[32m+[m[32mthat the stack wasn't full. The idea is to catch errors as early[m
[32m+[m[32mas possible, when they are easier to locate, instead of waiting until[m[41m [m
[32m+[m[32mthere is a user-visible symptom of the error (such as a segmentation[m[41m [m
[32m+[m[32mfault, after memory has been trashed by a rogue pointer).[m
[32m+[m
[32m+[m[32mAssertions are particularly useful at the beginnings and ends of[m[41m [m
[32m+[m[32mprocedures, to check that the procedure was called with the right[m[41m [m
[32m+[m[32marguments, and that the procedure did what it is supposed to.[m
[32m+[m[32mFor example, at the beginning of List::Insert, you could assert that[m[41m [m
[32m+[m[32mthe item being inserted isn't already on the list, and at the end of[m
[32m+[m[32mthe procedure, you could assert that the item is now on the list.[m
[32m+[m
[32m+[m[32mIf speed is a concern, ASSERTs can be defined to make the check[m
[32m+[m[32min the debug version of your program, and to be a no-op in the production[m
[32m+[m[32mversion.  But many people run with ASSERTs enabled even in production.[m
[32m+[m
[32m+[m[32m\item Write a module test for every module in your program.[m
[32m+[m[32mMany programmers have the notion that testing code means running[m
[32m+[m[32mthe entire program on some sample input; if it doesn't crash, that[m[41m [m
[32m+[m[32mmeans it's working, right?  Wrong.  You have no way of knowing[m
[32m+[m[32mhow much code was exercised for the test.  Let me urge you to[m
[32m+[m[32mbe methodical about testing.  Before you put a new module[m
[32m+[m[32minto a bigger system, make sure the module works as advertised[m[41m [m
[32m+[m[32mby testing it standalone.  If you do this for every module,[m[41m [m
[32m+[m[32mthen when you put the modules together, instead of {\em hoping}[m
[32m+[m[32mthat everything will work, you will {\em know} it will work.[m
[32m+[m
[32m+[m[32mPerhaps more importantly, module tests provide an opportunity[m
[32m+[m[32mto find as many bugs as possible in a localized context.[m[41m  [m
[32m+[m[32mWhich is easier: finding a bug in a 100 line program, or in a[m[41m [m
[32m+[m[32m10000 line program?[m
[32m+[m
[32m+[m[32m\end{enumerate}[m
[32m+[m
[32m+[m[32m\section{Compiling and Debugging}[m
[32m+[m
[32m+[m[32mThe Makefiles we will give you works only with the GNU version of[m
[32m+[m[32mmake, called ``gmake''.  You may want[m
[32m+[m[32mto put ``alias make gmake'' in your .cshrc file.[m
[32m+[m
[32m+[m[32mYou should use {\bf gdb} to debug your program rather than {\bf dbx}.[m
[32m+[m[32mDbx doesn't know how to decipher C++ names, so you will see function[m
[32m+[m[32mnames like \verb+Run__9SchedulerP6Thread+.[m
[32m+[m
[32m+[m[32mOn the other hand, in GDB (but not DBX) when you do a stack backtrace[m
[32m+[m[32mwhen in a forked thread (in homework 1), after printing out the[m
[32m+[m[32mcorrect frames at the top of the stack, the debugger will sometimes[m
[32m+[m[32mgo into a loop printing the lower-most frame ({\tt ThreadRoot}), and[m[41m [m
[32m+[m[32myou have to type control-C when it says ``more?''.  If you understand[m
[32m+[m[32massembly language and can fix this, please let me know.[m
[32m+[m
[32m+[m[32m\section{Example: A Stack of Integers}[m
[32m+[m
[32m+[m[32mWe've provided the complete, working code for the stack example.  You should[m
[32m+[m[32mread through it and play around with it to make sure you understand[m
[32m+[m[32mthe features of C++ described in this paper.[m
[32m+[m
[32m+[m[32mTo compile the simple stack test, type {\tt make all} --[m
[32m+[m[32mthis will compile the simple stack test ({\tt stack.cc}),[m[41m [m
[32m+[m[32mthe inherited stack test ({\tt inheritstack.cc}), and[m
[32m+[m[32mthe template version of stacks ({\tt templatestack.cc}).[m
[32m+[m
[32m+[m[32m\section{Epilogue}[m
[32m+[m
[32m+[m[32mI've argued in this note that you should avoid using certain C++[m[41m [m
[32m+[m[32mand C features.  But you're probably thinking I must be leaving[m[41m [m
[32m+[m[32msomething out -- if someone put the[m
[32m+[m[32mfeature in the language, there must be a good reason, right?  I believe that[m
[32m+[m[32mevery programmer should strive to write code whose behavior would be[m
[32m+[m[32mimmediately obvious to a reader;[m
[32m+[m[32mif you find yourself writing code that would require someone reading the code[m
[32m+[m[32mto thumb through a manual in order to understand it, you are almost certainly[m
[32m+[m[32mbeing way too subtle.  There's probably a much simpler and more obvious[m
[32m+[m[32mway to accomplish the same end.  Maybe the code will be a little longer[m
[32m+[m[32mthat way,[m
[32m+[m[32mbut in the real world, it's whether the code works and how simple it is for[m
[32m+[m[32msomeone else to modify, that matters a whole lot more than how many[m
[32m+[m[32mcharacters you had to type.[m
[32m+[m
[32m+[m[32mA final thought to remember:[m
[32m+[m
[32m+[m[32m\begin{quote}[m
[32m+[m[32m``There are two ways of constructing a software design: one way is to[m
[32m+[m[32mmake it so simple that there are {\em obviously} no deficiencies and[m
[32m+[m[32mthe other way is to make it so complicated that there are no {\em[m
[32m+[m[32mobvious} deficiencies.'' \\ \hbox{} \hfill C. A. R. Hoare, ``The Emperor's[m
[32m+[m[32mOld Clothes'', CACM Feb. 1981[m
[32m+[m[32m\end{quote}[m
[32m+[m
[32m+[m[32m\section{Further Reading}[m
[32m+[m
[32m+[m[32m\begin{itemize}[m
[32m+[m[32m\item[] James Coplien, ``Advanced C++'', Addison-Wesley.[m
[32m+[m[32mThis book is only for experts, but it has some good ideas in it,[m
[32m+[m[32mso keep it in mind once you've been programming in C++ for a few years.[m
[32m+[m
[32m+[m[32m\item[] James Gosling.  ``The Java Language.''  Online at[m
[32m+[m[32m``http://java.sun.com/''  Java is a safe subset of C++.  It's main[m[41m [m
[32m+[m[32mapplication is the safe extension of Web browsers by allowing[m[41m [m
[32m+[m[32myou to download Java code as part of clicking on a link to[m[41m [m
[32m+[m[32minterpret and display the document.  Safety is key here, since[m[41m [m
[32m+[m[32mafter all, you don't want to click on a Web link and have[m[41m [m
[32m+[m[32mit download code that will crash your browser.  Java was defined[m[41m [m
[32m+[m[32mindependently of this document, but interestingly, it enforces a[m[41m [m
[32m+[m[32mvery similar style (for example, no multiple inheritance and[m
[32m+[m[32mno operator overloading).[m
[32m+[m
[32m+[m[32m\item[] C.A.R. Hoare, ``The Emperor's Old Clothes.''[m
[32m+[m[32m{\em Communications of the ACM}, Vol. 24, No. 2, February 1981,[m
[32m+[m[32mpp. 75-83.  Tony Hoare's Turing Award lecture.  How do you build[m[41m [m
[32m+[m[32msoftware that really works?  Attitude is everything -- you need[m
[32m+[m[32ma healthy respect for how hard it is to build working software.[m[41m [m
[32m+[m[32mIt might seem that addding this whiz-bang feature is only[m[41m [m
[32m+[m[32m``a small matter of code'', but that's the path to late, buggy[m
[32m+[m[32mproducts that don't work.[m
[32m+[m
[32m+[m[32m\item[] Brian Kernighan and Dennis Ritchie, ``The C Programming Language'',[m
[32m+[m[32mPrentice-Hall.  The original C book -- a very easy read.  But the[m
[32m+[m[32mlanguage has evolved since it was first designed, and this book doesn't[m
[32m+[m[32mdescribe all of C's newest features.  But still the best place for[m
[32m+[m[32ma beginner to start, even when learning C++.[m
[32m+[m
[32m+[m[32m\item[] Steve Maguire, ``Writing Solid Code'', Microsoft Press.[m
[32m+[m[32mHow to write bug-free software; I think this should be required[m[41m [m
[32m+[m[32mreading for all software engineers.  This really {\em will} change[m[41m [m
[32m+[m[32myour life -- if you don't follow the recommendations in this book,[m[41m [m
[32m+[m[32myou'll probably never write code that completely works, and you'll[m
[32m+[m[32mspend your entire life struggling with hard to find bugs.[m[41m  [m
[32m+[m[32mThere is a better way!  Contrary to the programming language types,[m[41m [m
[32m+[m[32mthis doesn't involve proving the correctness of your programs, whatever[m
[32m+[m[32mthat means.  Instead, Maguire has a set of practical engineering[m[41m [m
[32m+[m[32msolutions to writing solid code.[m
[32m+[m
[32m+[m[32m\item[] Steve Maguire, ``Debugging the Development Process'', Microsoft Press.[m
[32m+[m[32mMaguire's follow up book on how to lead an effective team, and[m
[32m+[m[32mby the way, how to be an effective engineer.  Maguire's background is[m[41m [m
[32m+[m[32mthat he is a turnaround artist for Microsoft -- he gets assigned to[m[41m [m
[32m+[m[32mfloundering teams, and figures out how to make them effective.[m
[32m+[m[32mAfter you've pulled a few all-nighters to get that last bug out[m
[32m+[m[32mof your course project, you're probably wondering why in heck you're[m
[32m+[m[32mstudying computer science anyway.  This book will explain how[m
[32m+[m[32mto write programs that work, {\em and} still have a life![m
[32m+[m
[32m+[m[32m\item[] Scott Meyers, ``Effective C++''.  This book describes how[m
[32m+[m[32m50 easy ways to make mistakes C++; if you avoid these, you will[m[41m [m
[32m+[m[32mbe a lot more likely to write C++ code that works.[m
[32m+[m
[32m+[m[32m\item[] Bjarne Stroustrup, ``The C++ Programming Language'', Addison-Wesley.[m
[32m+[m[32mThis should be the definite reference manual, but it isn't.[m
[32m+[m[32mYou probably thought I was joking when I said the C++ language was[m
[32m+[m[32mcontinually evolving.  I bought the second edition of this[m
[32m+[m[32mbook three years ago, and it is already out of date.[m
[32m+[m[32mFortunately, it's still OK for the subset of C++ that I use.[m
[32m+[m[32m\end{itemize}[m
[32m+[m
[32m+[m[32m\end{document}[m
[1mdiff --git a/c++example/copyright.h b/c++example/copyright.h[m
[1mnew file mode 100755[m
[1mindex 0000000..15f0623[m
[1m--- /dev/null[m
[1m+++ b/c++example/copyright.h[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m#ifndef COPYRIGHT_H[m
[32m+[m[32m#define COPYRIGHT_H[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32mCopyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32mAll rights reserved.[m
[32m+[m
[32m+[m[32mPermission to use, copy, modify, and distribute this software and its[m
[32m+[m[32mdocumentation for any purpose, without fee, and without written agreement is[m
[32m+[m[32mhereby granted, provided that the above copyright notice and the following[m
[32m+[m[32mtwo paragraphs appear in all copies of this software.[m
[32m+[m
[32m+[m[32mIN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR[m
[32m+[m[32mDIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT[m
[32m+[m[32mOF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF[m
[32m+[m[32mCALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.[m
[32m+[m
[32m+[m[32mTHE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,[m
[32m+[m[32mINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY[m
[32m+[m[32mAND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS[m
[32m+[m[32mON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO[m
[32m+[m[32mPROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mstatic char *copyright = "Copyright (c) 1992,1993,1995 The Regents of the University of California.  All rights reserved.";[m
[32m+[m
[32m+[m[32m#endif  /* COPYRIGHT_H */[m
[1mdiff --git a/c++example/inheritstack.cc b/c++example/inheritstack.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..b4f2432[m
[1m--- /dev/null[m
[1m+++ b/c++example/inheritstack.cc[m
[36m@@ -0,0 +1,230 @@[m
[32m+[m[32m// inheritstack.cc[m
[32m+[m[32m//	Routines for two implementions of a LIFO stack of integers,[m[41m [m
[32m+[m[32m//	one as an array, the other as a list.[m
[32m+[m[32m//[m[41m	[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m
[32m+[m[32mextern "C" {[m
[32m+[m[32m#include <assert.h>[m
[32m+[m
[32m+[m[32m#define ASSERT(expression)  assert(expression)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst bool FALSE = false;[m
[32m+[m[32mconst bool TRUE = true;[m
[32m+[m
[32m+[m[32m#include <iostream.h>[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "list.h"[m
[32m+[m[32m#include "inheritstack.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Stack, Stack::~Stack[m
[32m+[m[32m// 	constructor and destructor for the Stack class; no data[m
[32m+[m[32m//	to initialize![m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mStack::Stack() {}[m
[32m+[m[32mStack::~Stack() {}[m
[32m+[m
[32m+[m
[32m+[m[32m// IMPLEMENTATION #1: AS AN ARRAY[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::ArrayStack[m
[32m+[m[32m// 	The constructor for the ArrayStack class.[m
[32m+[m[32m//[m
[32m+[m[32m// 	"sz" -- maximum number of elements on the ArrayStack at any time[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mArrayStack::ArrayStack(int sz) : Stack() {[m
[32m+[m
[32m+[m[32m    ASSERT(sz >= 1);[m
[32m+[m
[32m+[m[32m    // Initialize the data members of the stack object.[m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    top = 0;[m
[32m+[m[32m    stack = new int[size];   // allocate an array of integers.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::~ArrayStack[m
[32m+[m[32m// 	The destructor for the ArrayStack class.  Just get rid of the array we[m
[32m+[m[32m// 	allocated in the constructor.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mArrayStack::~ArrayStack() {[m
[32m+[m
[32m+[m[32m    delete [] stack;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::Push[m
[32m+[m[32m// 	Put an integer on the top of the stack; error on overflow.[m
[32m+[m[32m//[m
[32m+[m[32m//	"value" -- the value to put on the stack[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mArrayStack::Push(int value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[41m    [m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::Pop[m
[32m+[m[32m// 	Remove an integer from the top of the stack, returning its value.[m
[32m+[m[32m//	Error if the stack is empty.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mArrayStack::Pop() {[m
[32m+[m
[32m+[m[32m    ASSERT(!Empty());[m
[32m+[m[41m    [m
[32m+[m[32m    return (stack[--top]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::Full[m
[32m+[m[32m// 	Return TRUE if the stack has no more room.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mArrayStack::Full() {[m
[32m+[m[32m    return (top == size);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ArrayStack::Empty[m
[32m+[m[32m// 	Return TRUE if the stack has nothing on it.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mArrayStack::Empty() {[m
[32m+[m[32m    return (top == 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m// IMPLEMENTATION #2: AS A LIST[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::ListStack[m
[32m+[m[32m// 	The constructor for the ListStack class.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mListStack::ListStack() : Stack() {[m
[32m+[m
[32m+[m[32m    stack = new List;	 // allocate an empty list of integers.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::~ListStack[m
[32m+[m[32m// 	The destructor for the ListStack class.  Just get rid of the list we[m
[32m+[m[32m// 	allocated in the constructor.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mListStack::~ListStack() {[m
[32m+[m
[32m+[m[32m    delete stack;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::Push[m
[32m+[m[32m// 	Put an integer on the top of the stack.[m
[32m+[m[32m//[m
[32m+[m[32m//	"value" -- the value to put on the stack[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mListStack::Push(int value) {[m
[32m+[m[32m    stack->Prepend(value);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::Pop[m
[32m+[m[32m// 	Remove an integer from the top of the stack, returning its value.[m
[32m+[m[32m//	Error if the stack is empty.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mListStack::Pop() {[m
[32m+[m
[32m+[m[32m    ASSERT(!Empty());[m
[32m+[m[41m    [m
[32m+[m[32m    return stack->Remove();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::Full[m
[32m+[m[32m// 	Return FALSE, because a liststack can never overflow[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mListStack::Full() {[m
[32m+[m[32m    return FALSE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// ListStack::Empty[m
[32m+[m[32m// 	Return TRUE if the stack has nothing on it.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mListStack::Empty() {[m
[32m+[m[32m    return stack->Empty();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::SelfTest[m
[32m+[m[32m// 	Test our stack implementation by pushing 10 numbers onto the[m[41m [m
[32m+[m[32m//	stack, and then print them as it pops them off.[m
[32m+[m[32m//[m
[32m+[m[32m//	Note this code is generic between the two versions --[m
[32m+[m[32m//	it doesn't matter whether this is an ArrayStack or a ListStack![m
[32m+[m[32m//[m
[32m+[m[32m//	"numToPush" is the number of items to put on the stack in the[m[41m [m
[32m+[m[32m//	selftest.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mStack::SelfTest(int numToPush) {[m
[32m+[m[32m    int count = 17;[m
[32m+[m[41m    [m
[32m+[m[32m    // Put a bunch of stuff in the stack...[m
[32m+[m[32m    for (int i = 0; i < numToPush; i++) {[m
[32m+[m	[32mASSERT(!Full());[m
[32m+[m	[32mcout << "pushing " << count << "\n";[m
[32m+[m	[32mPush(count++);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // ... and take it out again.[m
[32m+[m[32m    while (!Empty()) {[m
[32m+[m	[32mcout << "popping " << Pop() << "\n";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// main[m
[32m+[m[32m// 	Run the test code for the stack implementation.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mmain() {[m
[32m+[m[32m    Stack *s1 = new ArrayStack(10);   // Constructor with an argument.[m
[32m+[m[32m    Stack *s2 = new ListStack();[m[41m [m
[32m+[m
[32m+[m[32m    cout << "Testing ArrayStack\n";[m
[32m+[m[32m    s1->SelfTest(10);[m
[32m+[m
[32m+[m[32m    cout << "Testing ListStack\n";[m
[32m+[m[32m    s2->SelfTest(10);[m
[32m+[m
[32m+[m[32m    delete s1;		   // always delete what you allocate[m
[32m+[m[32m    delete s2;		   // always delete what you allocate[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
[1mdiff --git a/c++example/inheritstack.h b/c++example/inheritstack.h[m
[1mnew file mode 100755[m
[1mindex 0000000..2a20d17[m
[1m--- /dev/null[m
[1m+++ b/c++example/inheritstack.h[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m// inheritstack.h[m
[32m+[m[32m//	Data structures for a "stack" -- a Last-In-First-Out list of integers.[m
[32m+[m[32m//[m
[32m+[m[32m//	We define two separate implementations of stacks, to[m
[32m+[m[32m//	illustrate C++ inheritance.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef INHERITSTACK_H		// to prevent recursive includes[m
[32m+[m[32m#define INHERITSTACK_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "list.h"[m
[32m+[m
[32m+[m
[32m+[m[32m// The following defines an "abstract" stack of integers.[m
[32m+[m[32m// This class is abstract because no one is allowed to create[m
[32m+[m[32m// instances of it; instead, you make instances of the derived[m
[32m+[m[32m// classes that inherit from it.[m
[32m+[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    virtual ~Stack();   // Destructor[m
[32m+[m[41m    [m
[32m+[m[32m    virtual void Push(int value) = 0; // Push an integer on the stack[m
[32m+[m[32m    virtual int Pop() = 0;      // Pop an integer off the stack[m
[32m+[m[41m    [m
[32m+[m[32m    virtual bool Full() = 0;    // Returns TRUE if the stack is full[m
[32m+[m[32m    virtual bool Empty() = 0;   // Returns TRUE if the stack is empty[m
[32m+[m
[32m+[m[32m    void SelfTest(int numToPush); // Test whether the implementation works.[m
[32m+[m[32m                        // Note that the test routine is shared among[m
[32m+[m			[32m// all derived classes because it shouldn't[m[41m [m
[32m+[m			[32m// matter to the test code which version we're using![m
[32m+[m
[32m+[m[32m  protected:[m
[32m+[m[32m    Stack();            // Constructor is protected to prevent anyone but[m[41m [m
[32m+[m			[32m// derived classes from calling constructor.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m[32m// The following defines an implementation of Stack using arrays.[m
[32m+[m[32m// This is the same as the original implementation in stack.h,[m
[32m+[m[32m// except we don't need a SelfTest() because that's defined above by Stack![m
[32m+[m
[32m+[m[32mclass ArrayStack : public Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    ArrayStack(int sz);    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~ArrayStack();         // Destructor:   deallocate space allocated above.[m
[32m+[m[41m    [m
[32m+[m[32m    void Push(int value); // Push an integer on the stack[m
[32m+[m[32m    int Pop();        // Pop an integer off the stack[m
[32m+[m[41m    [m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full[m
[32m+[m[32m    bool Empty();      // Returns TRUE if the stack is empty[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the next position to be used.[m
[32m+[m[32m    int *stack;       // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m[32m// The following defines an implementation of Stack using lists.[m
[32m+[m[32m//[m
[32m+[m[32m// Note that a list implementation can't overflow, so we don't[m
[32m+[m[32m// need to pass a maximum size into the constructor.[m
[32m+[m
[32m+[m[32mclass ListStack : public Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    ListStack();    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~ListStack();   // Destructor:   deallocate space allocated above.[m
[32m+[m[41m    [m
[32m+[m[32m    void Push(int value); // Push an integer on the stack[m
[32m+[m[32m    int Pop();     // Pop an integer off the stack[m
[32m+[m[41m    [m
[32m+[m[32m    bool Full();   // Always return FALSE, this implementation never overflows[m
[32m+[m[32m    bool Empty();  // Returns TRUE if the stack is empty[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    List *stack;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif INHERITSTACK_H[m
[1mdiff --git a/c++example/list.cc b/c++example/list.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..52c919f[m
[1m--- /dev/null[m
[1m+++ b/c++example/list.cc[m
[36m@@ -0,0 +1,133 @@[m
[32m+[m[32m// list.cc[m[41m [m
[32m+[m[32m//     	Routines to manage a singly-linked list of integers.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m// 	A "ListElement" is allocated for each item to be put on the[m
[32m+[m[32m//	list; it is de-allocated when the item is removed. This means[m
[32m+[m[32m//      we don't need to keep a "next" pointer in every object we[m
[32m+[m[32m//      want to put on a list.[m
[32m+[m[32m//[m[41m [m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m
[32m+[m[32mextern "C" {[m
[32m+[m[32m#include <assert.h>[m
[32m+[m
[32m+[m[32m#define ASSERT(expression)  assert(expression)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "list.h"[m
[32m+[m
[32m+[m[32mconst int NULL = 0;[m
[32m+[m
[32m+[m
[32m+[m[32m// The following class defines a "list element" -- which is[m
[32m+[m[32m// used to keep track of one item on a list.  It is equivalent to a[m
[32m+[m[32m// LISP cell, with a "car" ("next") pointing to the next element on the list,[m
[32m+[m[32m// and a "cdr" ("item") containing the item on the list.[m
[32m+[m[32m//[m
[32m+[m[32m// Class defined in list.cc, because only the List class can be allocating[m
[32m+[m[32m// and accessing ListElements.[m
[32m+[m
[32m+[m[32mclass ListElement {[m
[32m+[m[32m   public:[m
[32m+[m[32m     ListElement(int value) { item = value; next = NULL;};[m
[32m+[m[41m     [m					[32m// constructor for list element[m
[32m+[m
[32m+[m[32m     ListElement *next;		// next element on list,[m[41m [m
[32m+[m				[32m// NULL if this is the last[m
[32m+[m[32m     int item; 	    	        // value of this element[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// List::List[m
[32m+[m[32m//	Initialize a list, empty to start with.[m
[32m+[m[32m//	Elements can now be added to the list.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mList::List() {[m[41m [m
[32m+[m
[32m+[m[32m    first = last = NULL;[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// List::~List[m
[32m+[m[32m//	Prepare a list for deallocation.  If the list still contains any[m[41m [m
[32m+[m[32m//	ListElements, de-allocate them.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mList::~List() {[m[41m [m
[32m+[m[41m   [m
[32m+[m[32m    while (!Empty())[m
[32m+[m	[32m(void) Remove();	 // delete all the list elements[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// List::Prepend[m
[32m+[m[32m//      Put an integer on the front of the list.[m
[32m+[m[32m//[m[41m      [m
[32m+[m[32m//	Allocate a ListElement to keep track of the integer.[m
[32m+[m[32m//      If the list is empty, then this will be the only element.[m
[32m+[m[32m//	Otherwise, put it at the beginning.[m
[32m+[m[32m//[m
[32m+[m[32m//	"value" is the integer to be put on the list.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mList::Prepend(int value) {[m
[32m+[m[32m    ListElement *element = new ListElement(value);[m
[32m+[m
[32m+[m[32m    if (Empty()) {		// list is empty[m
[32m+[m	[32mfirst = element;[m
[32m+[m	[32mlast = element;[m
[32m+[m[32m    } else {			// else put it before first[m
[32m+[m	[32melement->next = first;[m
[32m+[m	[32mfirst = element;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// List::Remove[m
[32m+[m[32m//      Remove the first integer from the front of the list.[m
[32m+[m[32m//	Error if nothing on the list.[m
[32m+[m[32m//[m[41m [m
[32m+[m[32m// Returns:[m
[32m+[m[32m//	The removed integer.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mList::Remove() {[m
[32m+[m[32m    ListElement *element = first;[m
[32m+[m[32m    int value;[m
[32m+[m
[32m+[m[32m    ASSERT(!Empty());[m
[32m+[m
[32m+[m[32m    element = first;[m
[32m+[m[32m    value = first->item;[m
[32m+[m
[32m+[m[32m    if (first == last) {	// list had one item, now has none[m[41m [m
[32m+[m[32m        first = NULL;[m
[32m+[m	[32mlast = NULL;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        first = element->next;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    delete element;		// deallocate list element -- no longer needed[m
[32m+[m[32m    return value;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// List::Empty[m
[32m+[m[32m//      Returns TRUE if the list is empty (has no items).[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mList::Empty() {[m[41m [m
[32m+[m[32m    return (first == NULL);[m
[32m+[m[32m}[m
[1mdiff --git a/c++example/list.h b/c++example/list.h[m
[1mnew file mode 100755[m
[1mindex 0000000..f056acb[m
[1m--- /dev/null[m
[1m+++ b/c++example/list.h[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m// list.h[m[41m [m
[32m+[m[32m//	Data structures to manage LISP-like lists.[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef LIST_H[m
[32m+[m[32m#define LIST_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32mclass ListElement;[m
[32m+[m
[32m+[m[32m// The following class defines a "list" -- a singly linked list of[m
[32m+[m[32m// list elements, each of which contains an integer.[m
[32m+[m
[32m+[m[32mclass List {[m
[32m+[m[32m  public:[m
[32m+[m[32m    List();			// initialize the list[m
[32m+[m[32m    ~List();			// de-allocate the list[m
[32m+[m
[32m+[m[32m    void Prepend(int value); 	// Put item at the beginning of the list[m
[32m+[m[32m    int Remove(); 	 	// Take item off the front of the list[m
[32m+[m
[32m+[m[32m    bool Empty();		// is the list empty?[m[41m [m
[32m+[m
[32m+[m[32m    void SelfTest();[m
[32m+[m[41m    [m
[32m+[m[32m  private:[m
[32m+[m[32m    ListElement *first;  	// Head of the list, NULL if list is empty[m
[32m+[m[32m    ListElement *last;		// Last element of list[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // LIST_H[m
[1mdiff --git a/c++example/stack.cc b/c++example/stack.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..322732e[m
[1m--- /dev/null[m
[1m+++ b/c++example/stack.cc[m
[36m@@ -0,0 +1,135 @@[m
[32m+[m[32m// stack.cc[m
[32m+[m[32m//	Routines to implement a LIFO stack of integers.[m
[32m+[m[32m//[m[41m	[m
[32m+[m[32m//	The stack is represented as an array; we return an error[m
[32m+[m[32m//	if the caller tries to push more things onto the stack than we have[m
[32m+[m[32m//	room for.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m
[32m+[m[32mextern "C" {[m
[32m+[m[32m#include <assert.h>[m
[32m+[m
[32m+[m[32m#define ASSERT(expression)  assert(expression)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#include <iostream.h>[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "stack.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Stack[m
[32m+[m[32m// 	The constructor for the Stack class.  Note that it doesn't have a[m
[32m+[m[32m// 	return type.[m
[32m+[m[32m//[m
[32m+[m[32m// 	"sz" -- maximum number of elements on the Stack at any time[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mStack::Stack(int sz) {[m
[32m+[m
[32m+[m[32m    ASSERT(sz >= 1);[m
[32m+[m
[32m+[m[32m    // Initialize the data members of the stack object.[m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    top = 0;[m
[32m+[m[32m    stack = new int[size];   // allocate an array of integers.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::~Stack[m
[32m+[m[32m// 	The destructor for the Stack class.  Just get rid of the array we[m
[32m+[m[32m// 	allocated in the constructor.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mStack::~Stack() {[m
[32m+[m
[32m+[m[32m    delete [] stack;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Push[m
[32m+[m[32m// 	Put an integer on the top of the stack; error on overflow.[m
[32m+[m[32m//[m
[32m+[m[32m//	"value" -- the value to put on the stack[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mStack::Push(int value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[41m    [m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Pop[m
[32m+[m[32m// 	Remove an integer from the top of the stack, returning its value.[m
[32m+[m[32m//	Error if the stack is empty.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mStack::Pop() {[m
[32m+[m
[32m+[m[32m    ASSERT(!Empty());[m
[32m+[m[41m    [m
[32m+[m[32m    return (stack[--top]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Full[m
[32m+[m[32m// 	Return TRUE if the stack has no more room.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mStack::Full() {[m
[32m+[m[32m    return (top == size);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::Empty[m
[32m+[m[32m// 	Return TRUE if the stack has nothing on it.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mStack::Empty() {[m
[32m+[m[32m    return (top == 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack::SelfTest[m
[32m+[m[32m// 	Test our stack implementation by pushing 10 numbers onto the[m[41m [m
[32m+[m[32m//	stack, and then print them as it pops them off.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mStack::SelfTest() {[m
[32m+[m[32m    int count = 17;[m
[32m+[m[41m    [m
[32m+[m[32m    // Put a bunch of stuff in the stack...[m
[32m+[m[32m    while (!Full()) {[m
[32m+[m	[32mcout << "pushing " << count << "\n";[m
[32m+[m	[32mPush(count++);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // ... and take it out again.[m
[32m+[m[32m    while (!Empty()) {[m
[32m+[m	[32mcout << "popping " << Pop() << "\n";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// main[m
[32m+[m[32m// 	Run the test code for the stack implementation.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mmain() {[m
[32m+[m[32m    Stack *stack = new Stack(10);   // Constructor with an argument.[m
[32m+[m
[32m+[m[32m    stack->SelfTest();[m
[32m+[m
[32m+[m[32m    delete stack;		   // always delete what you allocate[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
[1mdiff --git a/c++example/stack.h b/c++example/stack.h[m
[1mnew file mode 100755[m
[1mindex 0000000..1b3d557[m
[1m--- /dev/null[m
[1m+++ b/c++example/stack.h[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m// stack.h[m
[32m+[m[32m//	Data structures for a "stack" -- a Last-In-First-Out list of integers.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef STACK_H		// to prevent recursive includes[m
[32m+[m[32m#define STACK_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m// The following defines the Stack class.  The functions are[m
[32m+[m[32m// implemented in the file stack.cc.[m
[32m+[m[32m//[m
[32m+[m[32m// The constructor (initializer) for the Stack is passed the number[m
[32m+[m[32m// of elements (integers) in the stack.[m
[32m+[m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack(int sz);    // Constructor:  initialize variables, allocate space.[m
[32m+[m[32m    ~Stack();         // Destructor:   deallocate space allocated above.[m
[32m+[m[41m    [m
[32m+[m[32m    void Push(int value); // Push an integer on the stack, checking for overflow[m
[32m+[m[32m    int Pop();        // Pop an integer off the stack, checking for underflow.[m
[32m+[m[41m    [m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full, FALSE otherwise.[m
[32m+[m[32m    bool Empty();      // Returns TRUE if the stack is empty, FALSE otherwise.[m
[32m+[m
[32m+[m[32m    void SelfTest();	// Test whether the implementation works.[m
[32m+[m[41m    [m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the next position to be used.[m
[32m+[m[32m    int *stack;       // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // STACK_H[m
[1mdiff --git a/c++example/templatestack.cc b/c++example/templatestack.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..9bb1abe[m
[1m--- /dev/null[m
[1m+++ b/c++example/templatestack.cc[m
[36m@@ -0,0 +1,149 @@[m
[32m+[m[32m// templatestack.cc[m
[32m+[m[32m//	Routines to implement a LIFO stack of arbitrary things.[m
[32m+[m[32m//[m[41m	[m
[32m+[m[32m//	The stack is represented as an array; we return an error[m
[32m+[m[32m//	if the caller tries to push more things onto the stack than we have[m
[32m+[m[32m//	room for.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m
[32m+[m[32mextern "C" {[m
[32m+[m[32m#include <assert.h>[m
[32m+[m
[32m+[m[32m#define ASSERT(expression)  assert(expression)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#include <iostream.h>[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "templatestack.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::Stack[m
[32m+[m[32m// 	The constructor for the Stack class.  Note that it doesn't have a[m
[32m+[m[32m// 	return type.[m
[32m+[m[32m//[m
[32m+[m[32m// 	"sz" -- maximum number of elements on the Stack at any time[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mStack<T>::Stack(int sz) {[m
[32m+[m
[32m+[m[32m    ASSERT(sz >= 1);[m
[32m+[m
[32m+[m[32m    // Initialize the data members of the stack object.[m
[32m+[m[32m    size = sz;[m
[32m+[m[32m    top = 0;[m
[32m+[m[32m    stack = new T[size];   // allocate an array of integers.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::~Stack[m
[32m+[m[32m// 	The destructor for the Stack class.  Just get rid of the array we[m
[32m+[m[32m// 	allocated in the constructor.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mStack<T>::~Stack() {[m
[32m+[m
[32m+[m[32m    delete [] stack;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::Push[m
[32m+[m[32m// 	Put a T on the top of the stack; error on overflow.[m
[32m+[m[32m//[m
[32m+[m[32m//	"value" -- the value to put on the stack[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mvoid[m
[32m+[m[32mStack<T>::Push(T value) {[m
[32m+[m[32m    ASSERT(!Full());[m
[32m+[m[41m    [m
[32m+[m[32m    stack[top++] = value;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::Pop[m
[32m+[m[32m// 	Remove a T from the top of the stack, returning its value.[m
[32m+[m[32m//	Error if the stack is empty.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mT[m
[32m+[m[32mStack<T>::Pop() {[m
[32m+[m
[32m+[m[32m    ASSERT(!Empty());[m
[32m+[m[41m    [m
[32m+[m[32m    return (stack[--top]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::Full[m
[32m+[m[32m// 	Return TRUE if the stack has no more room.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mbool[m
[32m+[m[32mStack<T>::Full() {[m
[32m+[m[32m    return (top == size);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::Empty[m
[32m+[m[32m// 	Return TRUE if the stack has nothing on it.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mbool[m
[32m+[m[32mStack<T>::Empty() {[m
[32m+[m[32m    return (top == 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Stack<T>::SelfTest[m
[32m+[m[32m// 	Test our stack implementation by pushing 10 T's onto the[m[41m [m
[32m+[m[32m//	stack, and then print them as it pops them off.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mtemplate <class T>[m
[32m+[m[32mvoid[m
[32m+[m[32mStack<T>::SelfTest(T start) {[m
[32m+[m[32m    T count = start;[m
[32m+[m[41m    [m
[32m+[m[32m    // Put a bunch of stuff in the stack...[m
[32m+[m[32m    while (!Full()) {[m
[32m+[m	[32mcout << "pushing " << count << "\n";[m
[32m+[m	[32mPush(count++);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // ... and take it out again.[m
[32m+[m[32m    while (!Empty()) {[m
[32m+[m	[32mcout << "popping " << Pop() << "\n";[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// main[m
[32m+[m[32m// 	Run the test code for the stack implementation.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mmain() {[m
[32m+[m[32m    Stack<int> *s1 = new Stack<int>(10);[m[41m   [m
[32m+[m[32m    Stack<char> *s2 = new Stack<char>(10);[m[41m   [m
[32m+[m
[32m+[m[32m    cout << "Testing Stack<int>\n";[m
[32m+[m[32m    s1->SelfTest(17);[m
[32m+[m
[32m+[m[32m    cout << "Testing Stack<char>\n";[m
[32m+[m[32m    s2->SelfTest('a');[m
[32m+[m
[32m+[m[32m    delete s1;		   // always delete what you allocate[m
[32m+[m[32m    delete s2;		   // always delete what you allocate[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
[1mdiff --git a/c++example/templatestack.h b/c++example/templatestack.h[m
[1mnew file mode 100755[m
[1mindex 0000000..7b6277e[m
[1m--- /dev/null[m
[1m+++ b/c++example/templatestack.h[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m// templatestack.h[m
[32m+[m[32m//	Data structures for a stack" -- a Last-In-First-Out list --[m
[32m+[m[32m//	of arbitrary things.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992,1993,1995 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef TEMPLATESTACK_H		// to prevent recursive includes[m
[32m+[m[32m#define TEMPLATESTACK_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m// The following defines the Stack class.  The functions are[m
[32m+[m[32m// implemented in the file templatestack.cc.[m
[32m+[m[32m//[m
[32m+[m[32m// T is the type of the thing we want to put on the stack.[m
[32m+[m
[32m+[m[32mtemplate <class T>[m[41m [m
[32m+[m[32mclass Stack {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Stack(int sz);    // Constructor[m
[32m+[m[32m    ~Stack();         // Destructor[m
[32m+[m[41m    [m
[32m+[m[32m    void Push(T value); // Push a T on the stack[m
[32m+[m[32m    T Pop();        	// Pop a T off the stack[m
[32m+[m[41m    [m
[32m+[m[32m    bool Full();       // Returns TRUE if the stack is full[m
[32m+[m[32m    bool Empty();      // Returns TRUE if the stack is empty[m
[32m+[m
[32m+[m[32m    void SelfTest(T start); // Test whether the implementation works.[m
[32m+[m[41m    [m
[32m+[m[32m  private:[m
[32m+[m[32m    int size;         // The maximum capacity of the stack.[m
[32m+[m[32m    int top;          // Index of the next position to be used.[m
[32m+[m[32m    T *stack;         // A pointer to an array that holds the contents.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // TEMPLATESTACK_H[m
[1mdiff --git a/code/.vscode/c_cpp_properties.json b/code/.vscode/c_cpp_properties.json[m
[1mnew file mode 100755[m
[1mindex 0000000..8eb4548[m
[1m--- /dev/null[m
[1m+++ b/code/.vscode/c_cpp_properties.json[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "configurations": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Mac",[m
[32m+[m[32m            "includePath": [[m
[32m+[m[32m                "/usr/include",[m
[32m+[m[32m                "/usr/local/include",[m
[32m+[m[32m                "${workspaceRoot}"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "defines": [],[m
[32m+[m[32m            "intelliSenseMode": "clang-x64",[m
[32m+[m[32m            "browse": {[m
[32m+[m[32m                "path": [[m
[32m+[m[32m                    "/usr/include",[m
[32m+[m[32m                    "/usr/local/include",[m
[32m+[m[32m                    "${workspaceRoot}"[m
[32m+[m[32m                ],[m
[32m+[m[32m                "limitSymbolsToIncludedHeaders": true,[m
[32m+[m[32m                "databaseFilename": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "macFrameworkPath": [[m
[32m+[m[32m                "/System/Library/Frameworks",[m
[32m+[m[32m                "/Library/Frameworks"[m
[32m+[m[32m            ][m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Linux",[m
[32m+[m[32m            "includePath": [[m
[32m+[m[32m                "/usr/include",[m
[32m+[m[32m                "/usr/local/include",[m
[32m+[m[32m                "${workspaceRoot}"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "defines": [],[m
[32m+[m[32m            "intelliSenseMode": "clang-x64",[m
[32m+[m[32m            "browse": {[m
[32m+[m[32m                "path": [[m
[32m+[m[32m                    "/usr/include",[m
[32m+[m[32m                    "/usr/local/include",[m
[32m+[m[32m                    "${workspaceRoot}"[m
[32m+[m[32m                ],[m
[32m+[m[32m                "limitSymbolsToIncludedHeaders": true,[m
[32m+[m[32m                "databaseFilename": ""[m
[32m+[m[32m            }[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Win32",[m
[32m+[m[32m            "includePath": [[m
[32m+[m[32m                "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.11.25503/include/*",[m
[32m+[m[32m                "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/um",[m
[32m+[m[32m                "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/ucrt",[m
[32m+[m[32m                "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/shared",[m
[32m+[m[32m                "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/winrt",[m
[32m+[m[32m                "${workspaceRoot}",[m
[32m+[m[32m                "${workspaceRoot}/threads",[m
[32m+[m[32m                "${workspaceRoot}/filesys",[m
[32m+[m[32m                "${workspaceRoot}/machine",[m
[32m+[m[32m                "${workspaceRoot}/bin",[m
[32m+[m[32m                "${workspaceRoot}/test",[m
[32m+[m[32m                "${workspaceRoot}/userprog"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "defines": [[m
[32m+[m[32m                "_DEBUG",[m
[32m+[m[32m                "UNICODE"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "intelliSenseMode": "msvc-x64",[m
[32m+[m[32m            "browse": {[m
[32m+[m[32m                "path": [[m
[32m+[m[32m                    "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.11.25503/include/*",[m
[32m+[m[32m                    "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/um",[m
[32m+[m[32m                    "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/ucrt",[m
[32m+[m[32m                    "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/shared",[m
[32m+[m[32m                    "C:/Program Files (x86)/Windows Kits/10/Include/10.0.15063.0/winrt",[m
[32m+[m[32m                    "${workspaceRoot}"[m
[32m+[m[32m                ],[m
[32m+[m[32m                "limitSymbolsToIncludedHeaders": true,[m
[32m+[m[32m                "databaseFilename": ""[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "version": 3[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/code/Makefile b/code/Makefile[m
[1mnew file mode 100755[m
[1mindex 0000000..67b45d9[m
[1m--- /dev/null[m
[1m+++ b/code/Makefile[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m# Copyright (c) 1992 The Regents of the University of California.[m
[32m+[m[32m# All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m# of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32mMAKE = gmake[m
[32m+[m[32mLPR = lpr[m
[32m+[m
[32m+[m[32mall:[m[41m [m
[32m+[m	[32mcd threads; $(MAKE) depend[m
[32m+[m	[32mcd threads; $(MAKE) nachos[m
[32m+[m	[32mcd userprog; $(MAKE) depend[m[41m [m
[32m+[m	[32mcd userprog; $(MAKE) nachos[m[41m [m
[32m+[m	[32mcd vm; $(MAKE) depend[m
[32m+[m	[32mcd vm; $(MAKE) nachos[m[41m [m
[32m+[m	[32mcd filesys; $(MAKE) depend[m
[32m+[m	[32mcd filesys; $(MAKE) nachos[m[41m [m
[32m+[m	[32mcd network; $(MAKE) depend[m
[32m+[m	[32mcd network; $(MAKE) nachos[m[41m [m
[32m+[m	[32mcd bin; make all[m
[32m+[m	[32mcd test; make all[m
[32m+[m
[32m+[m[32m# don't delete executables in "test" in case there is no cross-compiler[m
[32m+[m[32mclean:[m
[32m+[m	[32m/bin/csh -c "rm -f *~ */{core,nachos,DISK,*.o,swtch.s,*~} test/{*.coff} bin/{coff2flat,coff2noff,disassemble,out}"[m
[32m+[m
[32m+[m[32mprint:[m
[32m+[m	[32m/bin/csh -c "$(LPR) Makefile* */Makefile"[m
[32m+[m	[32m/bin/csh -c "$(LPR) threads/*.h threads/*.cc threads/*.s"[m
[32m+[m	[32m/bin/csh -c "$(LPR) userprog/*.h userprog/*.cc"[m[41m [m
[32m+[m	[32m/bin/csh -c "$(LPR) filesys/*.h filesys/*.cc[m
[32m+[m	[32m/bin/csh -c "$(LPR) network/*.h network/*.cc[m[41m [m
[32m+[m	[32m/bin/csh -c "$(LPR) machine/*.h machine/*.cc[m
[32m+[m	[32m/bin/csh -c "$(LPR) bin/noff.h bin/coff.h bin/coff2noff.c"[m
[32m+[m	[32m/bin/csh -c "$(LPR) test/*.h test/*.c test/*.s"[m
[1mdiff --git a/code/Makefile.common b/code/Makefile.common[m
[1mnew file mode 100755[m
[1mindex 0000000..2105e64[m
[1m--- /dev/null[m
[1m+++ b/code/Makefile.common[m
[36m@@ -0,0 +1,139 @@[m
[32m+[m[32m# This is part of a GNU Makefile, included by the Makefiles in[m
[32m+[m[32m# each of the subdirectories.[m[41m  [m
[32m+[m[32m#[m
[32m+[m[32m# This file includes all of the baseline code provided by Nachos.[m
[32m+[m[32m# Whenever you add a .h or .cc file, put it in the appropriate[m[41m [m
[32m+[m[32m# _H,_C, or _O list.[m
[32m+[m[32m#[m
[32m+[m[32m# The dependency graph between assignments is:[m
[32m+[m[32m#   1. THREADS before everything else[m
[32m+[m[32m#   2. USERPROG must come before VM[m
[32m+[m[32m#   3. USERPROG can come before or after FILESYS, but if USERPROG comes[m[41m [m
[32m+[m[32m#	before (as in this distribution), then it must define FILESYS_STUB[m
[32m+[m[32m#[m
[32m+[m[32m#   Other than that, you have complete flexibility.[m
[32m+[m[32m#[m
[32m+[m[32m# Also whenever you change the include structure of your program, you should[m[41m [m
[32m+[m[32m# do a gmake depend in the subdirectory -- this will modify the Makefile[m
[32m+[m[32m# to keep track of the new dependency.[m
[32m+[m
[32m+[m[32m# You might want to play with the CFLAGS, but if you use -O it may[m
[32m+[m[32m# break the thread system.  You might want to use -fno-inline if[m
[32m+[m[32m# you need to call some inline functions from the debugger.[m
[32m+[m
[32m+[m[32m# Copyright (c) 1992 The Regents of the University of California.[m
[32m+[m[32m# All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m# of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32mCFLAGS = -g -Wall -Wshadow $(INCPATH) $(DEFINES) $(HOST) -DCHANGED[m[41m [m
[32m+[m
[32m+[m[32m# These definitions may change as the software is updated.[m
[32m+[m[32m# Some of them are also system dependent[m
[32m+[m[32mCPP= gcc -E[m
[32m+[m[32mCC = g++[m
[32m+[m[32mLD = g++[m
[32m+[m[32mAS = as[m
[32m+[m
[32m+[m[32mPROGRAM = nachos[m
[32m+[m
[32m+[m[32mTHREAD_H =../threads/copyright.h\[m
[32m+[m	[32m../threads/list.h\[m
[32m+[m	[32m../threads/scheduler.h\[m
[32m+[m	[32m../threads/synch.h \[m
[32m+[m	[32m../threads/synchlist.h\[m
[32m+[m	[32m../threads/system.h\[m
[32m+[m	[32m../threads/thread.h\[m
[32m+[m	[32m../threads/utility.h\[m
[32m+[m	[32m../machine/interrupt.h\[m
[32m+[m	[32m../machine/sysdep.h\[m
[32m+[m	[32m../machine/stats.h\[m
[32m+[m	[32m../machine/timer.h[m
[32m+[m
[32m+[m[32mTHREAD_C =../threads/main.cc\[m
[32m+[m	[32m../threads/list.cc\[m
[32m+[m	[32m../threads/scheduler.cc\[m
[32m+[m	[32m../threads/synch.cc \[m
[32m+[m	[32m../threads/synchlist.cc\[m
[32m+[m	[32m../threads/system.cc\[m
[32m+[m	[32m../threads/thread.cc\[m
[32m+[m	[32m../threads/utility.cc\[m
[32m+[m	[32m../threads/threadtest.cc\[m
[32m+[m	[32m../machine/interrupt.cc\[m
[32m+[m	[32m../machine/sysdep.cc\[m
[32m+[m	[32m../machine/stats.cc\[m
[32m+[m	[32m../machine/timer.cc[m
[32m+[m
[32m+[m[32mTHREAD_S = ../threads/switch.s[m
[32m+[m
[32m+[m[32mTHREAD_O =main.o list.o scheduler.o synch.o synchlist.o system.o thread.o \[m
[32m+[m	[32mutility.o threadtest.o interrupt.o stats.o sysdep.o timer.o[m
[32m+[m
[32m+[m[32mUSERPROG_H = ../userprog/addrspace.h\[m
[32m+[m	[32m../userprog/bitmap.h\[m
[32m+[m	[32m../filesys/filesys.h\[m
[32m+[m	[32m../filesys/openfile.h\[m
[32m+[m	[32m../machine/console.h\[m
[32m+[m	[32m../machine/machine.h\[m
[32m+[m	[32m../machine/mipssim.h\[m
[32m+[m	[32m../machine/translate.h[m
[32m+[m
[32m+[m[32mUSERPROG_C = ../userprog/addrspace.cc\[m
[32m+[m	[32m../userprog/bitmap.cc\[m
[32m+[m	[32m../userprog/exception.cc\[m
[32m+[m	[32m../userprog/progtest.cc\[m
[32m+[m	[32m../machine/console.cc\[m
[32m+[m	[32m../machine/machine.cc\[m
[32m+[m	[32m../machine/mipssim.cc\[m
[32m+[m	[32m../machine/translate.cc[m
[32m+[m
[32m+[m[32mUSERPROG_O = addrspace.o bitmap.o exception.o progtest.o console.o machine.o \[m
[32m+[m	[32mmipssim.o translate.o[m
[32m+[m
[32m+[m[32mVM_H =[m[41m [m
[32m+[m[32mVM_C =[m[41m [m
[32m+[m[32mVM_O =[m[41m [m
[32m+[m
[32m+[m[32mFILESYS_H =../filesys/directory.h \[m
[32m+[m	[32m../filesys/filehdr.h\[m
[32m+[m	[32m../filesys/filesys.h \[m
[32m+[m	[32m../filesys/openfile.h\[m
[32m+[m	[32m../filesys/synchdisk.h\[m
[32m+[m	[32m../machine/disk.h[m
[32m+[m[32mFILESYS_C =../filesys/directory.cc\[m
[32m+[m	[32m../filesys/filehdr.cc\[m
[32m+[m	[32m../filesys/filesys.cc\[m
[32m+[m	[32m../filesys/fstest.cc\[m
[32m+[m	[32m../filesys/openfile.cc\[m
[32m+[m	[32m../filesys/synchdisk.cc\[m
[32m+[m	[32m../machine/disk.cc[m
[32m+[m[32mFILESYS_O =directory.o filehdr.o filesys.o fstest.o openfile.o synchdisk.o\[m
[32m+[m	[32mdisk.o[m
[32m+[m
[32m+[m[32mNETWORK_H = ../network/post.h ../machine/network.h[m
[32m+[m[32mNETWORK_C = ../network/nettest.cc ../network/post.cc ../machine/network.cc[m
[32m+[m[32mNETWORK_O = nettest.o post.o network.o[m
[32m+[m
[32m+[m[32mS_OFILES = switch.o[m
[32m+[m
[32m+[m[32mOFILES = $(C_OFILES) $(S_OFILES)[m
[32m+[m
[32m+[m[32m$(PROGRAM): $(OFILES)[m
[32m+[m	[32m$(LD) $(OFILES) $(LDFLAGS) -o $(PROGRAM)[m
[32m+[m
[32m+[m[32m$(C_OFILES): %.o:[m
[32m+[m	[32m$(CC) $(CFLAGS) -c $<[m
[32m+[m
[32m+[m[32mswitch.o: ../threads/switch.s[m
[32m+[m	[32m$(CPP) -P $(INCPATH) $(HOST) ../threads/switch.c > swtch.s[m
[32m+[m	[32m$(AS) -o switch.o swtch.s[m
[32m+[m
[32m+[m[32mdepend: $(CFILES) $(HFILES)[m
[32m+[m	[32m$(CC) $(INCPATH) $(DEFINES) $(HOST) -DCHANGED -M $(CFILES) > makedep[m
[32m+[m	[32mecho '/^# DO NOT DELETE THIS LINE/+2,$$d' >eddep[m
[32m+[m	[32mecho '$$r makedep' >>eddep[m
[32m+[m	[32mecho 'w' >>eddep[m
[32m+[m	[32med - Makefile < eddep[m
[32m+[m	[32mrm eddep makedep[m[41m [m
[32m+[m	[32mecho '# DEPENDENCIES MUST END AT END OF FILE' >> Makefile[m
[32m+[m	[32mecho '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> Makefile[m
[32m+[m	[32mecho '# see make depend above' >> Makefile[m
[1mdiff --git a/code/Makefile.dep b/code/Makefile.dep[m
[1mnew file mode 100755[m
[1mindex 0000000..9e1cc5b[m
[1m--- /dev/null[m
[1m+++ b/code/Makefile.dep[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m# This is part of a GNU-Makefile, to specify system-dependent[m[41m [m
[32m+[m[32m# parts of the Makefile enviroment.[m
[32m+[m[32m#[m
[32m+[m[32m# This gets included as part of the GNU-Makefile used in each of[m[41m [m
[32m+[m[32m# the subdirectories.[m
[32m+[m[32m#[m
[32m+[m[32m# Depending on your platform, you need to select the correct definition.[m
[32m+[m[32m# Also, you need to edit the Makefile in the bin subdirectory.[m
[32m+[m
[32m+[m[32m# DEC MIPS, Ultrix[m
[32m+[m[32m# HOST = -DHOST_MIPS[m
[32m+[m
[32m+[m[32m# SUN SPARC, Sun 4.xx[m[41m [m
[32m+[m[32m# HOST = -DHOST_SPARC -DHOST_IS_BIG_ENDIAN[m
[32m+[m[32m# LDFLAGS = -lsocket -lnls[m
[32m+[m
[32m+[m[32m# HP PA-RISC, HP_UX[m
[32m+[m[32m# HOST = -DHOST_SNAKE -DHOST_IS_BIG_ENDIAN[m
[32m+[m
[32m+[m[32m# 386, 386BSD Unix, or NetBSD Unix (available via anon ftp[m[41m [m
[32m+[m[32m#    from agate.berkeley.edu)[m
[32m+[m[32m# also, Linux[m
[32m+[m[32mHOST = -DHOST_i386[m
[32m+[m[32mLDFLAGS =[m
[32m+[m
[32m+[m[32m# slight variant for 386 FreeBSD[m
[32m+[m[32m# HOST = -DHOST_i386 -DFreeBSD[m
[32m+[m[32m# CPP=/usr/bin/cpp[m
[1mdiff --git a/code/bin/Makefile b/code/bin/Makefile[m
[1mnew file mode 100755[m
[1mindex 0000000..2edb12f[m
[1m--- /dev/null[m
[1m+++ b/code/bin/Makefile[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32m# Use normal make for this Makefile[m
[32m+[m[32m#[m
[32m+[m[32m# Makefile for:[m
[32m+[m[32m#	coff2noff -- converts a normal MIPS executable into a Nachos executable[m
[32m+[m[32m#	disassemble -- disassembles a normal MIPS executable[m[41m [m
[32m+[m[32m#[m
[32m+[m[32m# Copyright (c) 1992 The Regents of the University of California.[m
[32m+[m[32m# All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m# of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m# If the host is big endian (SPARC, SNAKE, etc):[m
[32m+[m[32m# change to (disassemble and coff2flat don't support big endian yet):[m
[32m+[m
[32m+[m[32mCC=gcc[m
[32m+[m[32m# Sparc/Solaris[m
[32m+[m[32m# CFLAGS= -I./ -I../threads -DHOST_IS_BIG_ENDIAN[m
[32m+[m[32m# Linux[m
[32m+[m[32mCFLAGS=-I./ -I../threads -g[m
[32m+[m
[32m+[m[32mLD=gcc[m
[32m+[m
[32m+[m[32mall: coff2noff[m
[32m+[m
[32m+[m[32m# converts a COFF file to Nachos object format[m
[32m+[m[32mcoff2noff: coff2noff.o[m
[32m+[m	[32m$(LD) coff2noff.o -o coff2noff[m
[32m+[m
[32m+[m[32m# converts a COFF file to a flat address space (for Nachos version 2)[m
[32m+[m[32mcoff2flat: coff2flat.o[m
[32m+[m	[32m$(LD) coff2flat.o -o coff2flat[m
[32m+[m
[32m+[m[32m# dis-assembles a COFF file[m
[32m+[m[32mdisassemble: out.o opstrings.o[m
[32m+[m	[32m$(LD) out.o opstrings.o -o disassemble[m
[1mdiff --git a/code/bin/coff.h b/code/bin/coff.h[m
[1mnew file mode 100755[m
[1mindex 0000000..a7cf79d[m
[1m--- /dev/null[m
[1m+++ b/code/bin/coff.h[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m/* coff.h[m
[32m+[m[32m *   Data structures that describe the MIPS COFF format.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mstruct filehdr {[m
[32m+[m[32m        unsigned short  f_magic;        /* magic number */[m
[32m+[m[32m        unsigned short  f_nscns;        /* number of sections */[m
[32m+[m[32m        long            f_timdat;       /* time & date stamp */[m
[32m+[m[32m        long            f_symptr;       /* file pointer to symbolic header */[m
[32m+[m[32m        long            f_nsyms;        /* sizeof(symbolic hdr) */[m
[32m+[m[32m        unsigned short  f_opthdr;       /* sizeof(optional hdr) */[m
[32m+[m[32m        unsigned short  f_flags;        /* flags */[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m#define  MIPSELMAGIC    0x0162[m
[32m+[m
[32m+[m[32m#define OMAGIC  0407[m
[32m+[m[32m#define SOMAGIC 0x0701[m
[32m+[m
[32m+[m[32mtypedef struct aouthdr {[m
[32m+[m[32m        short   magic;          /* see above                            */[m
[32m+[m[32m        short   vstamp;         /* version stamp                        */[m
[32m+[m[32m        long    tsize;          /* text size in bytes, padded to DW bdry*/[m
[32m+[m[32m        long    dsize;          /* initialized data "  "                */[m
[32m+[m[32m        long    bsize;          /* uninitialized data "   "             */[m
[32m+[m[32m        long    entry;          /* entry pt.                            */[m
[32m+[m[32m        long    text_start;     /* base of text used for this file      */[m
[32m+[m[32m        long    data_start;     /* base of data used for this file      */[m
[32m+[m[32m        long    bss_start;      /* base of bss used for this file       */[m
[32m+[m[32m        long    gprmask;        /* general purpose register mask        */[m
[32m+[m[32m        long    cprmask[4];     /* co-processor register masks          */[m
[32m+[m[32m        long    gp_value;       /* the gp value used for this object    */[m
[32m+[m[32m      } AOUTHDR;[m
[32m+[m[32m#define AOUTHSZ sizeof(AOUTHDR)[m
[32m+[m[41m [m
[32m+[m
[32m+[m[32mstruct scnhdr {[m
[32m+[m[32m        char            s_name[8];      /* section name */[m
[32m+[m[32m        long            s_paddr;        /* physical address, aliased s_nlib */[m
[32m+[m[32m        long            s_vaddr;        /* virtual address */[m
[32m+[m[32m        long            s_size;         /* section size */[m
[32m+[m[32m        long            s_scnptr;       /* file ptr to raw data for section */[m
[32m+[m[32m        long            s_relptr;       /* file ptr to relocation */[m
[32m+[m[32m        long            s_lnnoptr;      /* file ptr to gp histogram */[m
[32m+[m[32m        unsigned short  s_nreloc;       /* number of relocation entries */[m
[32m+[m[32m        unsigned short  s_nlnno;        /* number of gp histogram entries */[m
[32m+[m[32m        long            s_flags;        /* flags */[m
[32m+[m[32m      };[m
[32m+[m[41m [m
[1mdiff --git a/code/bin/coff2flat.c b/code/bin/coff2flat.c[m
[1mnew file mode 100755[m
[1mindex 0000000..ad257e8[m
[1m--- /dev/null[m
[1m+++ b/code/bin/coff2flat.c[m
[36m@@ -0,0 +1,126 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m/* This program reads in a COFF format file, and outputs a flat file --[m
[32m+[m[32m * the flat file can then be copied directly to virtual memory and executed.[m
[32m+[m[32m * In other words, the various pieces of the object code are loaded at[m[41m [m
[32m+[m[32m * the appropriate offset in the flat file.[m
[32m+[m[32m *[m
[32m+[m[32m * Assumes coff file compiled with -N -T 0 to make sure it's not shared text.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#define MAIN[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#undef MAIN[m
[32m+[m
[32m+[m[32m#include <filehdr.h>[m
[32m+[m[32m#include <aouthdr.h>[m
[32m+[m[32m#include <scnhdr.h>[m
[32m+[m[32m#include <reloc.h>[m
[32m+[m[32m#include <syms.h>[m
[32m+[m[32m#include <sys/types.h>[m
[32m+[m[32m#include <sys/stat.h>[m
[32m+[m[32m#include <fcntl.h>[m
[32m+[m[32m#include <limits.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/* NOTE -- once you have implemented large files, it's ok to make this bigger! */[m
[32m+[m[32m#define StackSize      		1024      /* in bytes */[m
[32m+[m[32m#define ReadStruct(f,s) 	Read(f,(char *)&s,sizeof(s))[m
[32m+[m
[32m+[m[32mextern char *malloc();[m
[32m+[m
[32m+[m[32m/* read and check for error */[m
[32m+[m[32mvoid Read(int fd, char *buf, int nBytes)[m
[32m+[m[32m{[m
[32m+[m[32m    if (read(fd, buf, nBytes) != nBytes) {[m
[32m+[m	[32mfprintf(stderr, "File is too short\n");[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* write and check for error */[m
[32m+[m[32mvoid Write(int fd, char *buf, int nBytes)[m
[32m+[m[32m{[m
[32m+[m[32m    if (write(fd, buf, nBytes) != nBytes) {[m
[32m+[m	[32mfprintf(stderr, "Unable to write file\n");[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* do the real work */[m
[32m+[m[32mmain (int argc, char **argv)[m
[32m+[m[32m{[m
[32m+[m[32m    int fdIn, fdOut, numsections, i, top, tmp;[m
[32m+[m[32m    struct filehdr fileh;[m
[32m+[m[32m    struct aouthdr systemh;[m
[32m+[m[32m    struct scnhdr *sections;[m
[32m+[m[32m    char *buffer;[m
[32m+[m
[32m+[m[32m    if (argc < 2) {[m
[32m+[m	[32mfprintf(stderr, "Usage: %s <coffFileName> <flatFileName>\n", argv[0]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* open the object file (input) */[m
[32m+[m[32m    fdIn = open(argv[1], O_RDONLY, 0);[m
[32m+[m[32m    if (fdIn == -1) {[m
[32m+[m	[32mperror(argv[1]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m/* open the flat file (output) */[m
[32m+[m[32m    fdOut = open(argv[2], O_RDWR|O_CREAT|O_TRUNC, 0666);[m
[32m+[m[32m    if (fdIn == -1) {[m
[32m+[m	[32mperror(argv[2]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the file header and check the magic number. */[m
[32m+[m[32m    ReadStruct(fdIn,fileh);[m
[32m+[m[32m    if (fileh.f_magic != MIPSELMAGIC) {[m
[32m+[m	[32mfprintf(stderr, "File is not a MIPSEL COFF file\n");[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the system header and check the magic number */[m
[32m+[m[32m    ReadStruct(fdIn,systemh);[m
[32m+[m[32m    if (systemh.magic != OMAGIC) {[m
[32m+[m	[32mfprintf(stderr, "File is not a OMAGIC file\n");[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the section headers. */[m
[32m+[m[32m    numsections = fileh.f_nscns;[m
[32m+[m[32m    sections = (struct scnhdr *)malloc(fileh.f_nscns * sizeof(struct scnhdr));[m
[32m+[m[32m    Read(fdIn, (char *) sections, fileh.f_nscns * sizeof(struct scnhdr));[m
[32m+[m
[32m+[m[32m /* Copy the segments in */[m
[32m+[m[32m    printf("Loading %d sections:\n", fileh.f_nscns);[m
[32m+[m[32m    for (top = 0, i = 0; i < fileh.f_nscns; i++) {[m
[32m+[m	[32mprintf("\t\"%s\", filepos 0x%x, mempos 0x%x, size 0x%x\n",[m
[32m+[m	[32m      sections[i].s_name, sections[i].s_scnptr,[m
[32m+[m	[32m      sections[i].s_paddr, sections[i].s_size);[m
[32m+[m	[32mif ((sections[i].s_paddr + sections[i].s_size) > top)[m
[32m+[m	[32m    top = sections[i].s_paddr + sections[i].s_size;[m
[32m+[m	[32mif (strcmp(sections[i].s_name, ".bss") && /* no need to copy if .bss */[m
[32m+[m	[41m    [m	[32mstrcmp(sections[i].s_name, ".sbss")) {[m
[32m+[m	[32m    lseek(fdIn, sections[i].s_scnptr, 0);[m
[32m+[m	[32m    buffer = malloc(sections[i].s_size);[m
[32m+[m	[32m    Read(fdIn, buffer, sections[i].s_size);[m
[32m+[m	[32m    Write(fdOut, buffer, sections[i].s_size);[m
[32m+[m	[32m    free(buffer);[m
[32m+[m	[32m}[m
[32m+[m[32m    }[m
[32m+[m[32m/* put a blank word at the end, so we know where the end is! */[m
[32m+[m[32m    printf("Adding stack of size: %d\n", StackSize);[m
[32m+[m[32m    lseek(fdOut, top + StackSize - 4, 0);[m
[32m+[m[32m    tmp = 0;[m
[32m+[m[32m    Write(fdOut, (char *)&tmp, 4);[m
[32m+[m
[32m+[m[32m    close(fdIn);[m
[32m+[m[32m    close(fdOut);[m
[32m+[m[32m}[m
[1mdiff --git a/code/bin/coff2noff b/code/bin/coff2noff[m
[1mnew file mode 100755[m
[1mindex 0000000..905829d[m
Binary files /dev/null and b/code/bin/coff2noff differ
[1mdiff --git a/code/bin/coff2noff.c b/code/bin/coff2noff.c[m
[1mnew file mode 100755[m
[1mindex 0000000..3e873e0[m
[1m--- /dev/null[m
[1m+++ b/code/bin/coff2noff.c[m
[36m@@ -0,0 +1,227 @@[m
[32m+[m[32m/* coff2noff.c[m[41m [m
[32m+[m[32m *[m
[32m+[m[32m * This program reads in a COFF format file, and outputs a NOFF format file.[m
[32m+[m[32m * The NOFF format is essentially just a simpler version of the COFF file,[m
[32m+[m[32m * recording where each segment is in the NOFF file, and where it is to[m
[32m+[m[32m * go in the virtual address space.[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m * Assumes coff file is linked with either[m
[32m+[m[32m *	gld with -N -Ttext 0[m[41m [m
[32m+[m[32m * 	ld with  -N -T 0[m
[32m+[m[32m * to make sure the object file has no shared text.[m
[32m+[m[32m *[m
[32m+[m[32m * Also assumes that the COFF file has at most 3 segments:[m
[32m+[m[32m *	.text	-- read-only executable instructions[m[41m [m
[32m+[m[32m *	.data	-- initialized data[m
[32m+[m[32m *	.bss/.sbss -- uninitialized data (should be zero'd on program startup)[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m * All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m * of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#define MAIN[m
[32m+[m[32m#include "copyright.h"[m[41m [m
[32m+[m[32m#undef MAIN[m
[32m+[m
[32m+[m[32m#include <sys/types.h>[m
[32m+[m[32m#include <sys/stat.h>[m
[32m+[m[32m#include <fcntl.h>[m
[32m+[m[32m#include <limits.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m#include "coff.h"[m
[32m+[m[32m#include "noff.h"[m
[32m+[m
[32m+[m[32m/* Routines for converting words and short words to and from the[m
[32m+[m[32m * simulated machine's format of little endian.  These end up[m
[32m+[m[32m * being NOPs when the host machine is little endian.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32munsigned int[m
[32m+[m[32mWordToHost(unsigned int word) {[m
[32m+[m[32m#ifdef HOST_IS_BIG_ENDIAN[m
[32m+[m	[32m register unsigned long result;[m
[32m+[m	[32m result = (word >> 24) & 0x000000ff;[m
[32m+[m	[32m result |= (word >> 8) & 0x0000ff00;[m
[32m+[m	[32m result |= (word << 8) & 0x00ff0000;[m
[32m+[m	[32m result |= (word << 24) & 0xff000000;[m
[32m+[m	[32m return result;[m
[32m+[m[32m#else[m[41m [m
[32m+[m	[32m return word;[m
[32m+[m[32m#endif /* HOST_IS_BIG_ENDIAN */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32munsigned short[m
[32m+[m[32mShortToHost(unsigned short shortword) {[m
[32m+[m[32m#if HOST_IS_BIG_ENDIAN[m
[32m+[m	[32m register unsigned short result;[m
[32m+[m	[32m result = (shortword << 8) & 0xff00;[m
[32m+[m	[32m result |= (shortword >> 8) & 0x00ff;[m
[32m+[m	[32m return result;[m
[32m+[m[32m#else[m[41m [m
[32m+[m	[32m return shortword;[m
[32m+[m[32m#endif /* HOST_IS_BIG_ENDIAN */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#define ReadStruct(f,s) 	Read(f,(char *)&s,sizeof(s))[m
[32m+[m
[32m+[m[32mextern char *malloc();[m
[32m+[m[32mchar *noffFileName = NULL;[m
[32m+[m
[32m+[m[32m/* read and check for error */[m
[32m+[m[32mvoid Read(int fd, char *buf, int nBytes)[m
[32m+[m[32m{[m
[32m+[m[32m    if (read(fd, buf, nBytes) != nBytes) {[m
[32m+[m[32m        fprintf(stderr, "File is too short\n");[m
[32m+[m	[32munlink(noffFileName);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* write and check for error */[m
[32m+[m[32mvoid Write(int fd, char *buf, int nBytes)[m
[32m+[m[32m{[m
[32m+[m[32m    if (write(fd, buf, nBytes) != nBytes) {[m
[32m+[m	[32mfprintf(stderr, "Unable to write file\n");[m
[32m+[m	[32munlink(noffFileName);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmain (int argc, char **argv)[m
[32m+[m[32m{[m
[32m+[m[32m    int fdIn, fdOut, numsections, i, inNoffFile;[m
[32m+[m[32m    struct filehdr fileh;[m
[32m+[m[32m    struct aouthdr systemh;[m
[32m+[m[32m    struct scnhdr *sections;[m
[32m+[m[32m    char *buffer;[m
[32m+[m[32m    NoffHeader noffH;[m
[32m+[m
[32m+[m[32m    if (argc < 2) {[m
[32m+[m	[32mfprintf(stderr, "Usage: %s <coffFileName> <noffFileName>\n", argv[0]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* open the COFF file (input) */[m
[32m+[m[32m    fdIn = open(argv[1], O_RDONLY, 0);[m
[32m+[m[32m    if (fdIn == -1) {[m
[32m+[m	[32mperror(argv[1]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m/* open the NOFF file (output) */[m
[32m+[m[32m    fdOut = open(argv[2], O_WRONLY|O_CREAT|O_TRUNC , 0666);[m
[32m+[m[32m    if (fdIn == -1) {[m
[32m+[m	[32mperror(argv[2]);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m    noffFileName = argv[2];[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the file header and check the magic number. */[m
[32m+[m[32m    ReadStruct(fdIn,fileh);[m
[32m+[m[32m    fileh.f_magic = ShortToHost(fileh.f_magic);[m
[32m+[m[32m    fileh.f_nscns = ShortToHost(fileh.f_nscns);[m[41m [m
[32m+[m[32m    if (fileh.f_magic != MIPSELMAGIC) {[m
[32m+[m	[32mfprintf(stderr, "File is not a MIPSEL COFF file\n");[m
[32m+[m[32m        unlink(noffFileName);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the system header and check the magic number */[m
[32m+[m[32m    ReadStruct(fdIn,systemh);[m
[32m+[m[32m    systemh.magic = ShortToHost(systemh.magic);[m
[32m+[m[32m    if (systemh.magic != OMAGIC) {[m
[32m+[m	[32mfprintf(stderr, "File is not a OMAGIC file\n");[m
[32m+[m[32m        unlink(noffFileName);[m
[32m+[m	[32mexit(1);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m/* Read in the section headers. */[m
[32m+[m[32m    numsections = fileh.f_nscns;[m
[32m+[m[32m    printf("numsections %d \n",numsections);[m
[32m+[m[32m    sections = (struct scnhdr *)malloc(numsections * sizeof(struct scnhdr));[m
[32m+[m[32m    Read(fdIn, (char *) sections, numsections * sizeof(struct scnhdr));[m
[32m+[m
[32m+[m[32m   for (i = 0; i < numsections; i++) {[m
[32m+[m[32m     sections[i].s_paddr =  WordToHost(sections[i].s_paddr);[m
[32m+[m[32m     sections[i].s_size = WordToHost(sections[i].s_size);[m
[32m+[m[32m     sections[i].s_scnptr = WordToHost(sections[i].s_scnptr);[m
[32m+[m[32m   }[m
[32m+[m
[32m+[m[32m /* initialize the NOFF header, in case not all the segments are defined[m
[32m+[m[32m  * in the COFF file[m
[32m+[m[32m  */[m
[32m+[m[32m    noffH.noffMagic = NOFFMAGIC;[m
[32m+[m[32m    noffH.code.size = 0;[m
[32m+[m[32m    noffH.initData.size = 0;[m
[32m+[m[32m    noffH.uninitData.size = 0;[m
[32m+[m
[32m+[m[32m /* Copy the segments in */[m
[32m+[m[32m    inNoffFile = sizeof(NoffHeader);[m
[32m+[m[32m    lseek(fdOut, inNoffFile, 0);[m
[32m+[m[32m    printf("Loading %d sections:\n", numsections);[m
[32m+[m[32m    for (i = 0; i < numsections; i++) {[m
[32m+[m	[32mprintf("\t\"%s\", filepos 0x%x, mempos 0x%x, size 0x%x\n",[m
[32m+[m	[32m      sections[i].s_name, sections[i].s_scnptr,[m
[32m+[m	[32m      sections[i].s_paddr, sections[i].s_size);[m
[32m+[m	[32mif (sections[i].s_size == 0) {[m
[32m+[m		[32m/* do nothing! */[m[41m	[m
[32m+[m	[32m} else if (!strcmp(sections[i].s_name, ".text")) {[m
[32m+[m	[32m    noffH.code.virtualAddr = sections[i].s_paddr;[m
[32m+[m	[32m    noffH.code.inFileAddr = inNoffFile;[m
[32m+[m	[32m    noffH.code.size = sections[i].s_size;[m
[32m+[m[41m    [m	[32m    lseek(fdIn, sections[i].s_scnptr, 0);[m
[32m+[m[41m    [m	[32m    buffer = malloc(sections[i].s_size);[m
[32m+[m[41m    [m	[32m    Read(fdIn, buffer, sections[i].s_size);[m
[32m+[m[41m    [m	[32m    Write(fdOut, buffer, sections[i].s_size);[m
[32m+[m[41m    [m	[32m    free(buffer);[m
[32m+[m	[32m    inNoffFile += sections[i].s_size;[m
[32m+[m[41m [m	[32m} else if (!strcmp(sections[i].s_name, ".data")[m
[32m+[m	[41m  [m		[32m|| !strcmp(sections[i].s_name, ".rdata")) {[m
[32m+[m[41m  [m	[32m    /* need to check if we have both .data and .rdata[m[41m [m
[32m+[m	[32m     *  -- make sure one or the other is empty! */[m[41m [m
[32m+[m	[32m    if (noffH.initData.size != 0) {[m
[32m+[m	[32m        fprintf(stderr, "Can't handle both data and rdata\n");[m
[32m+[m	[32m        unlink(noffFileName);[m
[32m+[m	[32m        exit(1);[m
[32m+[m	[32m    }[m
[32m+[m	[32m    noffH.initData.virtualAddr = sections[i].s_paddr;[m
[32m+[m	[32m    noffH.initData.inFileAddr = inNoffFile;[m
[32m+[m	[32m    noffH.initData.size = sections[i].s_size;[m
[32m+[m[41m    [m	[32m    lseek(fdIn, sections[i].s_scnptr, 0);[m
[32m+[m[41m    [m	[32m    buffer = malloc(sections[i].s_size);[m
[32m+[m[41m    [m	[32m    Read(fdIn, buffer, sections[i].s_size);[m
[32m+[m[41m    [m	[32m    Write(fdOut, buffer, sections[i].s_size);[m
[32m+[m[41m    [m	[32m    free(buffer);[m
[32m+[m	[32m    inNoffFile += sections[i].s_size;[m
[32m+[m	[32m} else if (!strcmp(sections[i].s_name, ".bss") ||[m
[32m+[m			[32m!strcmp(sections[i].s_name, ".sbss")) {[m
[32m+[m[41m  [m	[32m    /* need to check if we have both .bss and .sbss -- make sure they[m[41m [m
[32m+[m	[32m     * are contiguous[m
[32m+[m	[32m     */[m
[32m+[m	[32m    if (noffH.uninitData.size != 0) {[m
[32m+[m	[32m        if (sections[i].s_paddr == (noffH.uninitData.virtualAddr +[m
[32m+[m	[41m        [m				[32mnoffH.uninitData.size)) {[m
[32m+[m		[32m    fprintf(stderr, "Can't handle both bss and sbss\n");[m
[32m+[m		[32m    unlink(noffFileName);[m
[32m+[m		[32m    exit(1);[m
[32m+[m		[32m}[m
[32m+[m	[32m        noffH.uninitData.size += sections[i].s_size;[m
[32m+[m	[32m    } else {[m
[32m+[m	[32m        noffH.uninitData.virtualAddr = sections[i].s_paddr;[m
[32m+[m	[32m        noffH.uninitData.size = sections[i].s_size;[m
[32m+[m	[32m    }[m
[32m+[m	[32m    /* we don't need to copy the uninitialized data! */[m
[32m+[m	[32m} else {[m
[32m+[m	[32m    fprintf(stderr, "Unknown segment type: %s\n", sections[i].s_name);[m
[32m+[m[32m            unlink(noffFileName);[m
[32m+[m	[32m    exit(1);[m
[32m+[m	[32m}[m
[32m+[m[32m    }[m
[32m+[m[32m    lseek(fdOut, 0, 0);[m
[32m+[m[32m    Write(fdOut, (char *)&noffH, sizeof(NoffHeader));[m
[32m+[m[32m    close(fdIn);[m
[32m+[m[32m    close(fdOut);[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m}[m
[1mdiff --git a/code/bin/coff2noff.o b/code/bin/coff2noff.o[m
[1mnew file mode 100644[m
[1mindex 0000000..1505a75[m
Binary files /dev/null and b/code/bin/coff2noff.o differ
[1mdiff --git a/code/bin/d.c b/code/bin/d.c[m
[1mnew file mode 100755[m
[1mindex 0000000..98dbe76[m
[1m--- /dev/null[m
[1m+++ b/code/bin/d.c[m
[36m@@ -0,0 +1,219 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "instr.h"[m
[32m+[m[32m#include "encode.h"[m
[32m+[m
[32m+[m[32m#define NULL	0[m
[32m+[m
[32m+[m[32mint sptr;[m
[32m+[m[32mint longdis = 1;[m
[32m+[m
[32m+[m[32mextern char *normalops[], *specialops[];[m
[32m+[m
[32m+[m
[32m+[m[32mchar *regstrings[] =[m
[32m+[m[32m{[m
[32m+[m[32m"0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9",[m
[32m+[m[32m"r10", "r11", "r12", "r13", "r14", "r15", "r16", "r17", "r18", "r19",[m
[32m+[m[32m"r20", "r21", "r22", "r23", "r24", "r25", "r26", "r27", "gp", "sp",[m
[32m+[m[32m"r30", "r31"[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#define R(i)	regstrings[i][m
[32m+[m
[32m+[m
[32m+[m[32mdump_ascii(instruction, pc)[m
[32m+[m[32mint instruction, pc;[m
[32m+[m[32m{[m
[32m+[m	[32mint addr;[m
[32m+[m	[32mchar *s;[m
[32m+[m	[32mint opcode;[m
[32m+[m
[32m+[m	[32mif  ( longdis )  printf("%08x: %08x  ", pc, instruction);[m
[32m+[m	[32mprintf("\t");[m
[32m+[m	[32mopcode = (unsigned) instruction >> 26;[m
[32m+[m	[32mif ( instruction == I_NOP) {[m
[32m+[m	[32m  printf("nop");[m
[32m+[m	[32m}[m
[32m+[m	[32melse if  ( opcode == I_SPECIAL )[m
[32m+[m	[32m{[m
[32m+[m		[32mopcode = instruction & 0x3f;[m
[32m+[m		[32mprintf("%s\t", specialops[opcode]);[m
[32m+[m
[32m+[m		[32mswitch( opcode )[m
[32m+[m		[32m{[m
[32m+[m
[32m+[m			[32m/* rd,rt,shamt */[m
[32m+[m			[32mcase I_SLL:[m
[32m+[m			[32mcase I_SRL:[m
[32m+[m			[32mcase I_SRA:[m
[32m+[m				[32mprintf("%s,%s,0x%x",[m[41m [m
[32m+[m					[32mR(rd(instruction)),[m
[32m+[m					[32mR(rt(instruction)),[m
[32m+[m					[32mshamt(instruction));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rd,rt,rs */[m
[32m+[m			[32mcase I_SLLV:[m
[32m+[m			[32mcase I_SRLV:[m
[32m+[m			[32mcase I_SRAV:[m
[32m+[m				[32mprintf("%s,%s,%s",[m[41m [m
[32m+[m					[32mR(rd(instruction)),[m
[32m+[m					[32mR(rt(instruction)),[m
[32m+[m					[32mR(rs(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rs */[m
[32m+[m			[32mcase I_JR:[m
[32m+[m			[32mcase I_JALR:[m
[32m+[m			[32mcase I_MFLO:[m
[32m+[m			[32mcase I_MTLO:[m
[32m+[m				[32mprintf("%s", R(rs(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32mcase I_SYSCALL:[m
[32m+[m			[32mcase I_BREAK:[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rd */[m
[32m+[m			[32mcase I_MFHI:[m
[32m+[m			[32mcase I_MTHI:[m
[32m+[m				[32mprintf("%s", R(rd(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rs,rt */[m
[32m+[m			[32mcase I_MULT:[m
[32m+[m			[32mcase I_MULTU:[m
[32m+[m			[32mcase I_DIV:[m
[32m+[m			[32mcase I_DIVU:[m
[32m+[m				[32mprintf("%s,%s",[m[41m [m
[32m+[m					[32mR(rs(instruction)),[m
[32m+[m					[32mR(rt(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rd,rs,rt */[m[41m [m
[32m+[m			[32mcase I_ADD:[m
[32m+[m			[32mcase I_ADDU:[m
[32m+[m			[32mcase I_SUB:[m
[32m+[m			[32mcase I_SUBU:[m
[32m+[m			[32mcase I_AND:[m
[32m+[m			[32mcase I_OR:[m
[32m+[m			[32mcase I_XOR:[m
[32m+[m			[32mcase I_NOR:[m
[32m+[m			[32mcase I_SLT:[m
[32m+[m			[32mcase I_SLTU:[m
[32m+[m				[32mprintf("%s,%s,%s",[m[41m [m
[32m+[m					[32mR(rd(instruction)),[m
[32m+[m					[32mR(rs(instruction)),[m
[32m+[m					[32mR(rt(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m	[32melse if  ( opcode == I_BCOND )[m
[32m+[m	[32m{[m
[32m+[m		[32mswitch ( rt(instruction) )	/* this field encodes the op */[m
[32m+[m		[32m{[m
[32m+[m		[32m    case I_BLTZ:[m
[32m+[m		[32m            printf("bltz");[m
[32m+[m			[32m    break;[m
[32m+[m		[32m    case I_BGEZ:[m
[32m+[m			[32m    printf("bgez");[m
[32m+[m			[32m    break;[m
[32m+[m		[32m    case I_BLTZAL:[m
[32m+[m			[32m    printf("bltzal");[m
[32m+[m			[32m    break;[m
[32m+[m		[32m    case I_BGEZAL:[m
[32m+[m			[32m    printf("bgezal");[m
[32m+[m			[32m    break;[m
[32m+[m		[32m    default :[m
[32m+[m		[32m            printf("BCOND");[m
[32m+[m		[32m}[m
[32m+[m		[32mprintf("\t%s,%08x",[m
[32m+[m		[32m       R(rs(instruction)),[m
[32m+[m		[32m       off16(instruction)+pc+4);[m
[32m+[m	[32m}[m
[32m+[m	[32melse[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%s\t", normalops[opcode]);[m
[32m+[m
[32m+[m		[32mswitch ( opcode )[m
[32m+[m		[32m{[m
[32m+[m			[32m/* 26-bit_target */[m
[32m+[m			[32mcase I_J:[m
[32m+[m			[32mcase I_JAL:[m
[32m+[m		[32m                printf("%08x",[m
[32m+[m				[32m       top4(pc)|off26(instruction));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rs,rt,16-bit_offset */[m
[32m+[m			[32mcase I_BEQ:[m
[32m+[m			[32mcase I_BNE:[m
[32m+[m		[32m                printf("%s,%s,%08x",[m
[32m+[m				[32m       R(rt(instruction)),[m
[32m+[m				[32m       R(rs(instruction)),[m
[32m+[m				[32m       off16(instruction)+pc+4);[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rt,rs,immediate */[m
[32m+[m			[32mcase I_ADDI:[m
[32m+[m			[32mcase I_ADDIU:[m
[32m+[m			[32mcase I_SLTI:[m
[32m+[m			[32mcase I_SLTIU:[m
[32m+[m			[32mcase I_ANDI:[m
[32m+[m			[32mcase I_ORI:[m
[32m+[m			[32mcase I_XORI:[m
[32m+[m				[32mprintf("%s,%s,0x%x",[m[41m [m
[32m+[m					[32mR(rt(instruction)),[m
[32m+[m					[32mR(rs(instruction)),[m
[32m+[m					[32mimmed(instruction));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m /* rt, immed */[m
[32m+[m			[32mcase I_LUI:[m
[32m+[m				[32mprintf("%s,0x%x",[m[41m [m
[32m+[m					[32mR(rt(instruction)),[m
[32m+[m					[32mimmed(instruction));[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* coprocessor garbage */[m
[32m+[m			[32mcase I_COP0:[m
[32m+[m			[32mcase I_COP1:[m
[32m+[m			[32mcase I_COP2:[m
[32m+[m			[32mcase I_COP3:[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32m/* rt,offset(rs) */[m
[32m+[m			[32mcase I_LB:[m
[32m+[m			[32mcase I_LH:[m
[32m+[m			[32mcase I_LWL:[m
[32m+[m			[32mcase I_LW:[m
[32m+[m			[32mcase I_LBU:[m
[32m+[m			[32mcase I_LHU:[m
[32m+[m			[32mcase I_LWR:[m
[32m+[m			[32mcase I_SB:[m
[32m+[m			[32mcase I_SH:[m
[32m+[m			[32mcase I_SWL:[m
[32m+[m			[32mcase I_SW:[m
[32m+[m			[32mcase I_SWR:[m
[32m+[m			[32mcase I_LWC0:[m
[32m+[m			[32mcase I_LWC1:[m
[32m+[m			[32mcase I_LWC2:[m
[32m+[m			[32mcase I_LWC3 :[m
[32m+[m			[32mcase I_SWC0:[m
[32m+[m			[32mcase I_SWC1:[m
[32m+[m			[32mcase I_SWC2:[m
[32m+[m			[32mcase I_SWC3:[m
[32m+[m				[32mprintf("%s,0x%x(%s)",[m[41m [m
[32m+[m					[32mR(rt(instruction)),[m
[32m+[m					[32mimmed(instruction),[m
[32m+[m					[32mR(rs(instruction)));[m
[32m+[m				[32mbreak;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/code/bin/disasm.c b/code/bin/disasm.c[m
[1mnew file mode 100755[m
[1mindex 0000000..8466352[m
[1m--- /dev/null[m
[1m+++ b/code/bin/disasm.c[m
[36m@@ -0,0 +1,172 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m/* MIPS instruction disassembler */[m
[32m+[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <filehdr.h>[m
[32m+[m[32m#include <scnhdr.h>[m
[32m+[m[32m#include <syms.h>[m
[32m+[m[32m#include <ldfcn.h>[m
[32m+[m[32m#include "int.h"[m
[32m+[m
[32m+[m[32mstatic FILE *fp;[m
[32m+[m[32mstatic LDFILE *ldptr;[m
[32m+[m[32mstatic SCNHDR texthead, rdatahead, datahead, sdatahead, sbsshead, bsshead;[m
[32m+[m
[32m+[m[32mstatic char filename[1000] = "a.out";	/* default a.out file */[m
[32m+[m[32mstatic char self[256];			/* name of invoking program */[m
[32m+[m
[32m+[m[32mchar mem[MEMSIZE];		/* main memory. use malloc later */[m
[32m+[m[32mint TRACE, Traptrace, Regtrace;[m
[32m+[m[32mint NROWS=64, ASSOC=1, LINESIZE=4, RAND=0, LRD=0;[m
[32m+[m[32mint pc;[m
[32m+[m
[32m+[m[32mextern char *strcpy();[m
[32m+[m
[32m+[m[32mmain(argc, argv)[m
[32m+[m[32mint argc;[m
[32m+[m[32mchar *argv[];[m
[32m+[m[32m{[m
[32m+[m	[32mregister char *s;[m
[32m+[m	[32mchar *fakeargv[3];[m
[32m+[m
[32m+[m	[32mstrcpy(self, argv[0]);[m
[32m+[m	[32mwhile  ( argc > 1  &&  argv[1][0] == '-' )[m
[32m+[m	[32m{[m
[32m+[m		[32m--argc; ++argv;[m
[32m+[m		[32mfor  ( s=argv[0]+1; *s != '\0'; ++s )[m
[32m+[m			[32mswitch  ( *s )[m
[32m+[m			[32m{[m
[32m+[m			[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mif (argc >= 2)[m
[32m+[m		[32mstrcpy(filename, argv[1]);[m
[32m+[m	[32mfp = fopen(filename, "r");[m
[32m+[m	[32mif (fp == NULL)[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr, "%s: Could not open '%s'\n", self, filename);[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m	[32mfclose(fp);[m
[32m+[m	[32mload_program(filename);[m
[32m+[m	[32mif  ( argv[1] == NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mfakeargv[1] = "a.out";[m
[32m+[m		[32mfakeargv[2] = NULL;[m
[32m+[m		[32margv = fakeargv;[m
[32m+[m		[32m++argc;[m
[32m+[m	[32m}[m
[32m+[m	[32mdisasm(memoffset, argc-1, argv+1); /* where things normally start */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#define LOADSECTION(head) load_section(&head);[m
[32m+[m
[32m+[m[32mload_section(hd)[m
[32m+[m[32mregister SCNHDR *hd;[m
[32m+[m[32m{[m
[32m+[m[32m  register int pc, i;[m
[32m+[m[32m  if  ( hd->s_scnptr != 0 ) {[m
[32m+[m[32m    /* printf("loading %s\n", hd->s_name); */[m
[32m+[m[32m    pc = hd->s_vaddr;[m
[32m+[m[32m    FSEEK(ldptr, hd->s_scnptr, 0);[m
[32m+[m[32m    for  ( i=0; i<hd->s_size; ++i ) {[m
[32m+[m[32m      if (pc-memoffset >= MEMSIZE)[m
[32m+[m	[32m{ printf("MEMSIZE too small. Fix and recompile.\n");[m
[32m+[m	[32m  exit(1); }[m
[32m+[m[32m      *(char *) ((mem-memoffset)+pc++) = getc(fp);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mload_program(filename)[m
[32m+[m[32mchar *filename;[m
[32m+[m[32m{[m
[32m+[m	[32mldptr = ldopen(filename, NULL);[m
[32m+[m	[32mif  ( ldptr == NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr, "%s: Load read error on %s\n", self, filename);[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m	[32mif  ( TYPE(ldptr) != 0x162 )[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr,[m
[32m+[m			[32m"big-endian object file (little-endian interp)\n");[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".text", &texthead) != 1 )[m
[32m+[m[32m                printf("text section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(texthead)[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".rdata", &rdatahead) != 1 )[m
[32m+[m[32m                printf("rdata section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(rdatahead)[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".data", &datahead) != 1 )[m
[32m+[m[32m                printf("data section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(datahead)[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".sdata", &sdatahead) != 1 )[m
[32m+[m[32m                printf("sdata section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(sdatahead)[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".sbss", &sbsshead) != 1 )[m
[32m+[m[32m                printf("sbss section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(sbsshead)[m
[32m+[m
[32m+[m[32m        if  ( ldnshread(ldptr, ".bss", &bsshead) != 1 )[m
[32m+[m[32m                printf("bss section header missing\n");[m
[32m+[m[32m        else[m
[32m+[m[32m                LOADSECTION(bsshead)[m
[32m+[m
[32m+[m
[32m+[m	[32m/* BSS is already zeroed (statically-allocated mem) */[m
[32m+[m	[32m/* this version ignores relocation info */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mint *m_alloc(n)[m
[32m+[m[32mint n;[m
[32m+[m[32m{[m
[32m+[m	[32mextern char *malloc();[m
[32m+[m
[32m+[m	[32mreturn (int *) (int) malloc((unsigned) n);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdisasm(startpc, argc, argv)[m
[32m+[m[32mint startpc, argc;[m
[32m+[m[32mchar *argv[];[m
[32m+[m[32m{[m
[32m+[m	[32mint i;[m
[32m+[m
[32m+[m	[32mpc = memoffset;[m
[32m+[m	[32mfor  ( i=0; i<texthead.s_size; i += 4 )[m[41m [m
[32m+[m	[32m{[m
[32m+[m		[32mdis1(pc);[m
[32m+[m		[32mpc = pc + 4;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdis1(xpc)[m
[32m+[m[32mint xpc;[m
[32m+[m[32m{[m
[32m+[m	[32mregister int instr;[m
[32m+[m
[32m+[m	[32minstr = fetch(pc);[m
[32m+[m	[32mdump_ascii(instr, pc);[m
[32m+[m	[32mprintf("\n");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[1mdiff --git a/code/bin/encode.h b/code/bin/encode.h[m
[1mnew file mode 100755[m
[1mindex 0000000..35b3939[m
[1m--- /dev/null[m
[1m+++ b/code/bin/encode.h[m
[36m@@ -0,0 +1,107 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m
[32m+[m[32m/* normal opcodes */[m
[32m+[m
[32m+[m[32m#define I_SPECIAL	000[m
[32m+[m[32m#define I_BCOND		001[m
[32m+[m[32m#define I_J		002[m
[32m+[m[32m#define I_JAL		003[m
[32m+[m[32m#define I_BEQ		004[m
[32m+[m[32m#define I_BNE		005[m
[32m+[m[32m#define I_BLEZ		006[m
[32m+[m[32m#define I_BGTZ		007[m
[32m+[m[32m#define I_ADDI		010[m
[32m+[m[32m#define I_ADDIU		011[m
[32m+[m[32m#define I_SLTI		012[m
[32m+[m[32m#define I_SLTIU		013[m
[32m+[m[32m#define I_ANDI		014[m
[32m+[m[32m#define I_ORI		015[m
[32m+[m[32m#define I_XORI		016[m
[32m+[m[32m#define I_LUI		017[m
[32m+[m[32m#define I_COP0		020[m
[32m+[m[32m#define I_COP1		021[m
[32m+[m[32m#define I_COP2		022[m
[32m+[m[32m#define I_COP3		023[m
[32m+[m
[32m+[m[32m#define I_LB		040[m
[32m+[m[32m#define I_LH		041[m
[32m+[m[32m#define I_LWL		042[m
[32m+[m[32m#define I_LW		043[m
[32m+[m[32m#define I_LBU		044[m
[32m+[m[32m#define I_LHU		045[m
[32m+[m[32m#define I_LWR		046[m
[32m+[m
[32m+[m[32m#define I_SB		050[m
[32m+[m[32m#define I_SH		051[m
[32m+[m[32m#define I_SWL		052[m
[32m+[m[32m#define I_SW		053[m
[32m+[m
[32m+[m[32m#define I_SWR		056[m
[32m+[m
[32m+[m[32m#define I_LWC0		060[m
[32m+[m[32m#define I_LWC1		061[m
[32m+[m[32m#define I_LWC2		062[m
[32m+[m[32m#define I_LWC3		063[m
[32m+[m
[32m+[m[32m#define I_SWC0		070[m
[32m+[m[32m#define I_SWC1		071[m
[32m+[m[32m#define I_SWC2		072[m
[32m+[m[32m#define I_SWC3		073[m
[32m+[m
[32m+[m[32m/* special opcodes */[m
[32m+[m
[32m+[m[32m#define I_SLL		000[m
[32m+[m
[32m+[m[32m#define I_SRL		002[m
[32m+[m[32m#define I_SRA		003[m
[32m+[m[32m#define I_SLLV		004[m
[32m+[m
[32m+[m[32m#define I_SRLV		006[m
[32m+[m[32m#define I_SRAV		007[m
[32m+[m[32m#define I_JR		010[m
[32m+[m[32m#define I_JALR		011[m
[32m+[m
[32m+[m[32m#define I_SYSCALL	014[m
[32m+[m[32m#define I_BREAK		015[m
[32m+[m
[32m+[m[32m#define I_MFHI		020[m
[32m+[m[32m#define I_MTHI		021[m
[32m+[m[32m#define I_MFLO		022[m
[32m+[m[32m#define I_MTLO		023[m
[32m+[m
[32m+[m[32m#define I_MULT		030[m
[32m+[m[32m#define I_MULTU		031[m
[32m+[m[32m#define I_DIV		032[m
[32m+[m[32m#define I_DIVU		033[m
[32m+[m
[32m+[m[32m#define I_ADD		040[m
[32m+[m[32m#define I_ADDU		041[m
[32m+[m[32m#define I_SUB		042[m
[32m+[m[32m#define I_SUBU		043[m
[32m+[m[32m#define I_AND		044[m
[32m+[m[32m#define I_OR		045[m
[32m+[m[32m#define I_XOR		046[m
[32m+[m[32m#define I_NOR		047[m
[32m+[m
[32m+[m[32m#define I_SLT		052[m
[32m+[m[32m#define I_SLTU		053[m
[32m+[m
[32m+[m[32m/* bcond opcodes */[m
[32m+[m
[32m+[m
[32m+[m[32m#define I_BLTZ		000[m
[32m+[m[32m#define I_BGEZ		001[m
[32m+[m
[32m+[m[32m#define I_BLTZAL	020[m
[32m+[m[32m#define I_BGEZAL	021[m
[32m+[m
[32m+[m[32m/* whole instructions */[m
[32m+[m
[32m+[m[32m#define I_NOP           000[m
[1mdiff --git a/code/bin/execute.c b/code/bin/execute.c[m
[1mnew file mode 100755[m
[1mindex 0000000..1ceae67[m
[1m--- /dev/null[m
[1m+++ b/code/bin/execute.c[m
[36m@@ -0,0 +1,574 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include "instr.h"[m
[32m+[m[32m#include "encode.h"[m
[32m+[m[32m#include "int.h"[m
[32m+[m
[32m+[m[32m#define FAST	0[m
[32m+[m[32m#define true	1[m
[32m+[m[32m#define false	0[m
[32m+[m
[32m+[m
[32m+[m[32mextern char mem[];[m
[32m+[m[32mextern int TRACE, Regtrace;[m
[32m+[m
[32m+[m[32m/* Machine registers */[m
[32m+[m[32mint Reg[32];			/* GPR's */[m
[32m+[m[32mint HI, LO;			/* mul/div machine registers */[m
[32m+[m
[32m+[m[32m/* statistics gathering places */[m
[32m+[m[32mint numjmpls;[m
[32m+[m[32mint arch1cycles;[m
[32m+[m
[32m+[m[32m/* Condition-code calculations */[m
[32m+[m[32m#define  b31(z)		(((z) >>31 )&0x1)	/* extract bit 31 */[m
[32m+[m
[32m+[m[32m/* code looks funny but is fast thanx to MIPS! */[m
[32m+[m[32m#define cc_add(rr, op1, op2)	\[m
[32m+[m	[32mN = (rr < 0);	\[m
[32m+[m	[32mZ = (rr == 0);	\[m
[32m+[m	[32mC = ((unsigned) rr < (unsigned) op2);	\[m
[32m+[m	[32mV = ((op1^op2) >= 0  &&  (op1^rr) < 0);[m
[32m+[m
[32m+[m[32m#define cc_sub(rr, op1, op2)	\[m
[32m+[m	[32mN = (rr < 0);	\[m
[32m+[m	[32mZ = (rr == 0);	\[m
[32m+[m	[32mV = b31((op1 & ~op2 & ~rr) | (~op1 & op2 & rr));	\[m
[32m+[m	[32mC = ((unsigned) op1 < (unsigned) op2);[m
[32m+[m
[32m+[m	[32m/* C = b31((~op1 & op2) | (rr & (~op1 | op2))); /* */[m
[32m+[m
[32m+[m[32m#define cc_logic(rr)	\[m
[32m+[m	[32mN = (rr < 0);	\[m
[32m+[m	[32mZ = (rr == 0);	\[m
[32m+[m	[32mV = 0;	\[m
[32m+[m	[32mC = 0;[m
[32m+[m
[32m+[m[32m#define cc_mulscc(rr, op1, op2)	\[m
[32m+[m	[32mN = (rr < 0);	\[m
[32m+[m	[32mZ = (rr == 0);	\[m
[32m+[m	[32mV = b31((op1 & op2 & ~rr) | (~op1 & ~op2 & rr));	\[m
[32m+[m	[32mC = b31((op1 & op2) | (~rr & (op1 | op2)));[m
[32m+[m
[32m+[m
[32m+[m[32mrunprogram(startpc, argc, argv)[m
[32m+[m[32mint startpc, argc;[m
[32m+[m[32mchar *argv[];[m
[32m+[m[32m{[m
[32m+[m[32m    int aci, ai, j;[m
[32m+[m[32m    register int instr, pc, xpc, npc;[m
[32m+[m[32m    register int i;		/* temporary for local stuff */[m
[32m+[m[32m    register int icount;[m
[32m+[m[32m    extern char *strcpy();[m
[32m+[m
[32m+[m[32m    icount = 0;[m
[32m+[m[32m    pc = startpc; npc = pc + 4;[m
[32m+[m[32m    i = MEMSIZE - 1024 + memoffset;	/* Initial SP value */[m
[32m+[m[32m    Reg[29] = i;			/* Initialize SP  */[m
[32m+[m[32m    /* setup argc and argv stuff (icky!) */[m
[32m+[m[32m    store(i, argc);[m
[32m+[m[32m    aci = i + 4;[m
[32m+[m[32m    ai = aci + 32;[m
[32m+[m[32m    for  ( j=0; j<argc; ++j )[m
[32m+[m[32m    {[m
[32m+[m	[32mstrcpy((mem-memoffset)+ai, argv[j]);[m
[32m+[m	[32mstore(aci, ai);[m
[32m+[m	[32maci += 4;[m
[32m+[m	[32mai += strlen(argv[j]) + 1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m    for  ( ; ; )[m
[32m+[m[32m    {[m
[32m+[m	[32m++icount;[m
[32m+[m	[32mxpc = pc; pc = npc; npc = pc + 4;[m
[32m+[m	[32minstr = ifetch(xpc);[m
[32m+[m	[32mReg[0] = 0;	/* Force r0 = 0 */[m
[32m+[m
[32m+[m	[32mif  ( instr != 0 )	/* eliminate no-ops */[m
[32m+[m	[32m{[m
[32m+[m	[32mswitch ( (instr>>26) & 0x0000003f)[m
[32m+[m	[32m{[m
[32m+[m		[32mcase I_SPECIAL:[m
[32m+[m		[32m{[m
[32m+[m		[32m    switch ( instr & 0x0000003f )[m
[32m+[m		[32m    {[m
[32m+[m
[32m+[m			[32mcase I_SLL:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rt(instr)] << shamt(instr);[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SRL:[m
[32m+[m			[32m    Reg[rd(instr)] =[m[41m [m
[32m+[m				[32m(unsigned) Reg[rt(instr)] >> shamt(instr);[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SRA:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rt(instr)] >> shamt(instr);[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SLLV:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rt(instr)] << Reg[rs(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SRLV:[m
[32m+[m			[32m    Reg[rd(instr)] =[m[41m [m
[32m+[m				[32m(unsigned) Reg[rt(instr)] >> Reg[rs(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SRAV:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rt(instr)] >> Reg[rs(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_JR:[m
[32m+[m			[32m    npc = Reg[rs(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_JALR:[m
[32m+[m			[32m    npc = Reg[rs(instr)];[m
[32m+[m			[32m    Reg[rd(instr)] = xpc + 8;[m
[32m+[m			[32m    break;[m
[32m+[m
[32m+[m			[32mcase I_SYSCALL: system_trap(); break;[m
[32m+[m			[32mcase I_BREAK: system_break(); break;[m
[32m+[m
[32m+[m			[32mcase I_MFHI: Reg[rd(instr)] = HI; break;[m
[32m+[m			[32mcase I_MTHI: HI = Reg[rs(instr)]; break;[m
[32m+[m			[32mcase I_MFLO: Reg[rd(instr)] = LO; break;[m
[32m+[m			[32mcase I_MTLO: LO = Reg[rs(instr)]; break;[m
[32m+[m
[32m+[m			[32mcase I_MULT:[m
[32m+[m			[32m    {[m
[32m+[m				[32mint t1, t2;[m
[32m+[m				[32mint t1l, t1h, t2l, t2h;[m
[32m+[m				[32mint neg;[m
[32m+[m
[32m+[m				[32mt1 = Reg[rs(instr)];[m
[32m+[m				[32mt2 = Reg[rt(instr)];[m
[32m+[m				[32mneg = 0;[m
[32m+[m				[32mif ( t1 < 0 ) { t1 = -t1 ; neg = !neg; }[m
[32m+[m				[32mif ( t2 < 0 ) { t2 = -t2 ; neg = !neg; }[m
[32m+[m				[32mLO = t1 * t2;[m
[32m+[m				[32mt1l = t1 & 0xffff;[m
[32m+[m				[32mt1h = (t1 >> 16) & 0xffff;[m
[32m+[m				[32mt2l = t2 & 0xffff;[m
[32m+[m				[32mt2h = (t2 >> 16) & 0xffff;[m
[32m+[m				[32mHI = t1h*t2h+((t1h*t2l)>>16)+((t2h*t1l)>>16);[m
[32m+[m				[32mif ( neg )[m
[32m+[m				[32m{[m
[32m+[m					[32mLO = ~LO; HI = ~HI; LO = LO + 1;[m
[32m+[m					[32mif  ( LO == 0 )  HI = HI + 1;[m
[32m+[m				[32m}[m
[32m+[m			[32m    }[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_MULTU:[m
[32m+[m			[32m    {[m
[32m+[m				[32mint t1, t2;[m
[32m+[m				[32mint t1l, t1h, t2l, t2h;[m
[32m+[m
[32m+[m				[32mt1 = Reg[rs(instr)];[m
[32m+[m				[32mt2 = Reg[rt(instr)];[m
[32m+[m				[32mt1l = t1 & 0xffff;[m
[32m+[m				[32mt1h = (t1 >> 16) & 0xffff;[m
[32m+[m				[32mt2l = t2 & 0xffff;[m
[32m+[m				[32mt2h = (t2 >> 16) & 0xffff;[m
[32m+[m				[32mLO = t1*t2;[m
[32m+[m				[32mHI = t1h*t2h+((t1h*t2l)>>16)+((t2h*t1l)>>16);[m
[32m+[m			[32m    }break;[m
[32m+[m			[32mcase I_DIV:[m
[32m+[m			[32m    LO = Reg[rs(instr)] / Reg[rt(instr)];[m
[32m+[m			[32m    HI = Reg[rs(instr)] % Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_DIVU:[m
[32m+[m			[32m    LO =[m
[32m+[m			[32m    (unsigned)Reg[rs(instr)] / (unsigned)Reg[rt(instr)];[m
[32m+[m			[32m    HI =[m
[32m+[m			[32m    (unsigned)Reg[rs(instr)] % (unsigned)Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m
[32m+[m			[32mcase I_ADD:[m
[32m+[m			[32mcase I_ADDU:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rs(instr)] + Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SUB:[m
[32m+[m			[32mcase I_SUBU:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rs(instr)] - Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_AND:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rs(instr)] & Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_OR:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rs(instr)] | Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_XOR:[m
[32m+[m			[32m    Reg[rd(instr)] = Reg[rs(instr)] ^ Reg[rt(instr)];[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_NOR:[m
[32m+[m			[32m    Reg[rd(instr)] = ~(Reg[rs(instr)] | Reg[rt(instr)]);[m
[32m+[m			[32m    break;[m
[32m+[m
[32m+[m			[32mcase I_SLT:[m
[32m+[m			[32m    Reg[rd(instr)] = (Reg[rs(instr)] < Reg[rt(instr)]);[m
[32m+[m			[32m    break;[m
[32m+[m			[32mcase I_SLTU:[m
[32m+[m			[32m    Reg[rd(instr)] =[m
[32m+[m				[32m((unsigned) Reg[rs(instr)][m[41m [m
[32m+[m					[32m< (unsigned) Reg[rt(instr)]);[m
[32m+[m			[32m    break;[m
[32m+[m			[32mdefault: u(); break;[m
[32m+[m		[32m    }[m
[32m+[m		[32m} break;[m
[32m+[m
[32m+[m		[32mcase I_BCOND:[m
[32m+[m		[32m{[m
[32m+[m		[32m    switch ( rt(instr) )	/* this field encodes the op */[m
[32m+[m		[32m    {[m
[32m+[m			[32mcase I_BLTZ:[m
[32m+[m				[32mif ( Reg[rs(instr)] < 0 )[m
[32m+[m					[32mnpc = xpc + 4 + (immed(instr)<<2);[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase I_BGEZ:[m
[32m+[m				[32mif ( Reg[rs(instr)] >= 0 )[m
[32m+[m					[32mnpc = xpc + 4 + (immed(instr)<<2);[m
[32m+[m				[32mbreak;[m
[32m+[m
[32m+[m			[32mcase I_BLTZAL:[m
[32m+[m				[32mReg[31] = xpc + 8;[m
[32m+[m				[32mif ( Reg[rs(instr)] < 0 )[m
[32m+[m					[32mnpc = xpc + 4 + (immed(instr)<<2);[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mcase I_BGEZAL:[m
[32m+[m				[32mReg[31] = xpc + 8;[m
[32m+[m				[32mif ( Reg[rs(instr)] >= 0 )[m
[32m+[m					[32mnpc = xpc + 4 + (immed(instr)<<2);[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mdefault: u(); break;[m
[32m+[m		[32m    }[m
[32m+[m[41m			[m
[32m+[m		[32m} break;[m
[32m+[m
[32m+[m		[32mcase I_J:[m
[32m+[m			[32mnpc = (xpc & 0xf0000000) | ((instr & 0x03ffffff) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_JAL:[m
[32m+[m			[32mReg[31] = xpc + 8;[m
[32m+[m			[32mnpc = (xpc & 0xf0000000) | ((instr & 0x03ffffff) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_BEQ:[m
[32m+[m			[32mif  ( Reg[rs(instr)] == Reg[rt(instr)] )[m
[32m+[m				[32mnpc = xpc + 4 + (immed(instr) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_BNE:[m
[32m+[m			[32mif  ( Reg[rs(instr)] != Reg[rt(instr)] )[m
[32m+[m				[32mnpc = xpc + 4 + (immed(instr) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_BLEZ:[m
[32m+[m			[32mif  ( Reg[rs(instr)] <= 0 )[m
[32m+[m				[32mnpc = xpc + 4 + (immed(instr) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_BGTZ:[m
[32m+[m			[32mif  ( Reg[rs(instr)] > 0 )[m
[32m+[m				[32mnpc = xpc + 4 + (immed(instr) << 2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_ADDI:[m
[32m+[m			[32mReg[rt(instr)] = Reg[rs(instr)] + immed(instr);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_ADDIU:[m
[32m+[m			[32mReg[rt(instr)] = Reg[rs(instr)] + immed(instr);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_SLTI:[m
[32m+[m			[32mReg[rt(instr)] = (Reg[rs(instr)] < immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_SLTIU:[m
[32m+[m		[32m        Reg[rt(instr)] =[m
[32m+[m			[32m  ((unsigned) Reg[rs(instr)] < (unsigned) immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_ANDI:[m
[32m+[m			[32mReg[rt(instr)] = Reg[rs(instr)] & immed(instr);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_ORI:[m
[32m+[m			[32mReg[rt(instr)] = Reg[rs(instr)] | immed(instr);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_XORI:[m
[32m+[m			[32mReg[rt(instr)] = Reg[rs(instr)] ^ immed(instr);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LUI:[m
[32m+[m			[32mReg[rt(instr)] = instr << 16;[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase I_LB:[m
[32m+[m			[32mReg[rt(instr)] = cfetch(Reg[rs(instr)] + immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LH:[m
[32m+[m			[32mReg[rt(instr)] = sfetch(Reg[rs(instr)] + immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LWL:[m
[32m+[m		[32m    i = Reg[rs(instr)] + immed(instr);[m
[32m+[m		[32m    Reg[rt(instr)] &= (-1 >> 8*((-i) & 0x03));[m
[32m+[m		[32m    Reg[rt(instr)] |= ((fetch(i & 0xfffffffc)) << 8*(i & 0x03));[m
[32m+[m		[32m    break;[m
[32m+[m		[32mcase I_LW:[m
[32m+[m			[32mReg[rt(instr)] = fetch(Reg[rs(instr)] + immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LBU:[m
[32m+[m			[32mReg[rt(instr)] = ucfetch(Reg[rs(instr)] + immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LHU:[m
[32m+[m			[32mReg[rt(instr)] = usfetch(Reg[rs(instr)] + immed(instr));[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_LWR:[m
[32m+[m		[32m    i = Reg[rs(instr)] + immed(instr);[m
[32m+[m		[32m    Reg[rt(instr)] &= (-1 << 8*(i & 0x03));[m
[32m+[m		[32m    if  ( (i & 0x03)== 0 )[m
[32m+[m			[32mReg[rt(instr)] = 0;[m
[32m+[m		[32m    Reg[rt(instr)] |=[m[41m [m
[32m+[m			[32m((fetch(i & 0xfffffffc)) >> 8*((-i) & 0x03));[m
[32m+[m		[32m    break;[m
[32m+[m
[32m+[m		[32mcase I_SB:[m
[32m+[m			[32mcstore(Reg[rs(instr)] + immed(instr), Reg[rt(instr)]);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_SH:[m
[32m+[m			[32msstore(Reg[rs(instr)] + immed(instr), Reg[rt(instr)]);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_SWL:[m
[32m+[m			[32mfprintf(stderr, "sorry, no SWL yet.\n");[m
[32m+[m			[32mu();[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase I_SW:[m
[32m+[m			[32mstore(Reg[rs(instr)] + immed(instr), Reg[rt(instr)]);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase I_SWR:[m
[32m+[m			[32mfprintf(stderr, "sorry, no SWR yet.\n");[m
[32m+[m			[32mu();[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase I_LWC0: case I_LWC1:[m
[32m+[m		[32mcase I_LWC2: case I_LWC3:[m
[32m+[m		[32mcase I_SWC0: case I_SWC1:[m
[32m+[m		[32mcase I_SWC2: case I_SWC3:[m
[32m+[m		[32mcase I_COP0: case I_COP1:[m
[32m+[m		[32mcase I_COP2: case I_COP3:[m
[32m+[m			[32mfprintf(stderr, "Sorry, no coprocessors.\n");[m
[32m+[m			[32mexit(2);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mdefault: u(); break;[m
[32m+[m	[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m#ifdef DEBUG[m
[32m+[m[32m/*[m
[32m+[m[32mprintf(" %d(%x) = %d(%x) op  %d(%x)\n", Reg[rd], Reg[rd], op1, op1, op2, op2);[m
[32m+[m[32m/* */[m
[32m+[m[32m#endif[m
[32m+[m[32m#if !FAST[m
[32m+[m	[32mif  ( TRACE )[m
[32m+[m	[32m{[m
[32m+[m	[32m    dump_ascii(instr, xpc); printf("\n"); /* */[m
[32m+[m	[32m    if  ( Regtrace )  dump_reg();[m
[32m+[m	[32m}[m
[32m+[m[32m#endif[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mu()				/* unimplemented */[m
[32m+[m[32m{[m
[32m+[m	[32mprintf("Unimplemented Instruction\n"); exit(2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mny()[m
[32m+[m[32m{[m
[32m+[m	[32mprintf("This opcode not implemeted yet.\n"); exit(2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m/* debug aids */[m
[32m+[m
[32m+[m[32mRS(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m	[32mreturn rs(i);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mRT(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m	[32mreturn rt(i);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mRD(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m	[32mreturn rd(i);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mIM(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m	[32mreturn immed(i);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mdump_reg()[m
[32m+[m[32m{[m
[32m+[m	[32mint j;[m
[32m+[m
[32m+[m	[32mprintf(" 0:"); for  ( j=0; j<8; ++j ) printf(" %08x", Reg[j]);[m
[32m+[m		[32mprintf("\n");[m
[32m+[m	[32mprintf(" 8:"); for  ( ; j<16; ++j ) printf(" %08x", Reg[j]);[m
[32m+[m		[32mprintf("\n");[m
[32m+[m	[32mprintf("16:"); for  ( ; j<24; ++j ) printf(" %08x", Reg[j]);[m
[32m+[m		[32mprintf("\n");[m
[32m+[m	[32mprintf("24:"); for  ( ; j<32; ++j ) printf(" %08x", Reg[j]);[m
[32m+[m		[32mprintf("\n");[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m	[32m0 -> 0[m
[32m+[m	[32m1 -> 1[m
[32m+[m	[32m2 -> 1[m
[32m+[m	[32m3 -> 2[m
[32m+[m	[32m4 -> 2[m
[32m+[m	[32m5 -> 2[m
[32m+[m	[32m6 -> 2[m
[32m+[m	[32m7 -> 3[m
[32m+[m	[32m8 -> 3[m
[32m+[m	[32m9 -> 3  ...[m
[32m+[m	[32mTreats all ints as unsigned numbers.[m
[32m+[m[32m*/[m
[32m+[m[32milog2(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m[32m        int j, l;[m
[32m+[m
[32m+[m	[32mif  ( i == 0 )  return 0;[m
[32m+[m	[32mj = 0;[m
[32m+[m	[32ml = 1;[m
[32m+[m[32m        if  ( (j=(i&0xffff0000)) != 0 ) { i = j; l += 16; }[m
[32m+[m[32m        if  ( (j=(i&0xff00ff00)) != 0 ) { i = j; l += 8; }[m
[32m+[m[32m        if  ( (j=(i&0xf0f0f0f0)) != 0 ) { i = j; l += 4; }[m
[32m+[m[32m        if  ( (j=(i&0xcccccccc)) != 0 ) { i = j; l += 2; }[m
[32m+[m[32m        if  ( (j=(i&0xaaaaaaaa)) != 0 ) { i = j; l += 1; }[m
[32m+[m[32m        return l;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#define NH     32[m
[32m+[m[32m#define NNN     33[m
[32m+[m
[32m+[m[32mstatic int hists[NH][NNN];[m
[32m+[m[32mint hoflo[NH], htotal[NH];[m
[32m+[m
[32m+[m[32mvoid henters(n, hist)[m
[32m+[m[32mint n, hist;[m
[32m+[m[32m{[m
[32m+[m	[32mif  ( 0 <= n  &&  n < NNN ) ++hists[hist][n]; else ++hoflo[hist];[m
[32m+[m	[32m++htotal[hist];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mhprint()[m
[32m+[m[32m{[m
[32m+[m	[32mint h, i;[m
[32m+[m	[32mdouble I;[m
[32m+[m
[32m+[m	[32mfor  ( h=0; h<=NH; ++h ) if  ( htotal[h] > 0 )[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("\nhisto %d:\n", h);[m
[32m+[m		[32mI = 0.0;[m
[32m+[m		[32mfor  ( i=0; i<NNN; ++i )[m
[32m+[m		[32m{[m
[32m+[m			[32mI += hists[h][i];[m
[32m+[m			[32mprintf("%d\t%d\t%5.2f%%\t%5.2f%%\n",[m
[32m+[m				[32mi, hists[h][i],[m
[32m+[m				[32m(double) 100*hists[h][i] / htotal[h],[m
[32m+[m				[32m(double) 100*I/htotal[h]);[m
[32m+[m		[32m}[m
[32m+[m		[32mprintf("oflo %d:\t%d/%d\t%5.2f%%\n",[m[41m [m
[32m+[m			[32mh, hoflo[h], htotal[h],[m
[32m+[m			[32m(double) 100*hoflo[h] / htotal[h]);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint numadds=1, numsubs=1, numsuccesses, numcarries;[m
[32m+[m[32mint addtable[33][33];[m
[32m+[m[32mint subtable[33][33];[m
[32m+[m
[32m+[m[32mchar fmt[] = "%6d";[m
[32m+[m[32mchar fmt2[] = "------";[m
[32m+[m
[32m+[m[32mpatable(tab)[m
[32m+[m[32mint tab[33][33];[m
[32m+[m[32m{[m
[32m+[m	[32mint i, j;[m
[32m+[m
[32m+[m	[32mprintf("  |");[m
[32m+[m	[32mfor  ( j=0; j<33; ++j )[m
[32m+[m		[32mprintf(fmt, j);[m
[32m+[m	[32mputchar('\n');[m
[32m+[m	[32mprintf("  |");[m
[32m+[m	[32mfor  ( j=0; j<33; ++j )[m
[32m+[m		[32mprintf(fmt2);[m
[32m+[m	[32mputchar('\n');[m
[32m+[m	[32mfor  ( i=0; i<33; ++i )[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%2d|", i);[m
[32m+[m		[32mfor  ( j=0; j<33; ++j )[m
[32m+[m			[32mprintf(fmt, tab[i][j]);[m
[32m+[m		[32mputchar('\n');[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mprintstatistics()[m
[32m+[m[32m{[m
[32m+[m	[32m/*[m
[32m+[m	[32mprinthist();[m
[32m+[m	[32m/*[m
[32m+[m	[32mprintf("numjmpls = %d / %d = %5.2f%%\n",[m
[32m+[m		[32mnumjmpls, arch1cycles, 100.0*numjmpls/arch1cycles);[m
[32m+[m	[32mprintf("numadds = %d, numsubs = %d, numcycles = %d, frac = %5.2f%%\n",[m
[32m+[m		[32mnumadds, numsubs,[m
[32m+[m		[32march1cycles, (double) 100 * (numadds+numsubs) / arch1cycles);[m
[32m+[m	[32mprintf("numsuccesses = %d (%5.2f%%) numcarries = %d\n",[m[41m [m
[32m+[m		[32mnumsuccesses, 100.0*numsuccesses/(numadds+numsubs), numcarries);[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32mhprint();[m
[32m+[m	[32mprintf("\nADD table:\n");patable(addtable);[m
[32m+[m	[32mprintf("\nSUB table:\n");patable(subtable);[m
[32m+[m	[32m*/[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#define NNNN	(64)[m
[32m+[m
[32m+[m[32mstatic int hist[NNNN];[m
[32m+[m
[32m+[m[32mhenter(n)[m
[32m+[m[32mint n;[m
[32m+[m[32m{[m
[32m+[m	[32mif  ( 0 <= n  &&  n < NNNN )[m
[32m+[m		[32m++hist[n];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mprinthist()[m
[32m+[m[32m{[m
[32m+[m	[32mint i;[m
[32m+[m
[32m+[m	[32mfor  ( i=0; i<NNNN; ++i )[m
[32m+[m		[32mprintf("%d %d\n", i, hist[i]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[1mdiff --git a/code/bin/halt b/code/bin/halt[m
[1mnew file mode 100755[m
[1mindex 0000000..0ce4acc[m
Binary files /dev/null and b/code/bin/halt differ
[1mdiff --git a/code/bin/instr.h b/code/bin/instr.h[m
[1mnew file mode 100755[m
[1mindex 0000000..6ebf3a4[m
[1m--- /dev/null[m
[1m+++ b/code/bin/instr.h[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m/* Instruction formats */[m
[32m+[m
[32m+[m[32m#define rd(i)		(((i) >> 11) & 0x1f)[m
[32m+[m[32m#define rt(i)		(((i) >> 16) & 0x1f)[m
[32m+[m[32m#define rs(i)		(((i) >> 21) & 0x1f)[m
[32m+[m[32m#define shamt(i)	(((i) >> 6) & 0x1f)[m
[32m+[m[32m#define immed(i)	(((i) & 0x8000) ? (i)|(-0x8000) : (i)&0x7fff)[m
[32m+[m
[32m+[m[32m#define off26(i)        (((i)&((1<<26)-1))<<2)[m
[32m+[m[32m#define top4(i)         (((i)&(~((1<<28)-1))))[m
[32m+[m[32m#define off16(i)        (immed(i)<<2)[m
[32m+[m
[32m+[m[32m#define extend(i, hibitmask)	(((i)&(hibitmask)) ? ((i)|(-(hibitmask))) : (i))[m
[1mdiff --git a/code/bin/int.h b/code/bin/int.h[m
[1mnew file mode 100755[m
[1mindex 0000000..6c5d06a[m
[1m--- /dev/null[m
[1m+++ b/code/bin/int.h[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m
[32m+[m[32m#define MEMSIZE (1<<24)[m
[32m+[m[32m#define memoffset 0x10000000[m
[32m+[m
[32m+[m[32m/* centralized memory-access primitives */[m
[32m+[m[32m#define amark(x)	x[m
[32m+[m[32m#define imark(x)	x[m
[32m+[m
[32m+[m[32m#define ifetch(addr)	(*(int *)(int) (&(mem-memoffset)[imark(addr)]))[m
[32m+[m[32m#define fetch(addr)	(*(int *)(int) (&(mem-memoffset)[amark(addr)]))[m
[32m+[m[32m#define sfetch(addr)	(*(short *)(int) (&(mem-memoffset)[amark(addr)]))[m
[32m+[m[32m#define usfetch(addr)	(*(unsigned short *)(int)(&(mem-memoffset)[amark(addr)]))[m
[32m+[m[32m#define cfetch(addr)	(*(char *)(int) (&(mem-memoffset)[amark(addr)]))[m
[32m+[m[32m#define ucfetch(addr)	(*(unsigned char *)(int)(&(mem-memoffset)[amark(addr)]))[m
[32m+[m
[32m+[m[32m#define store(addr, i)	\[m
[32m+[m	[32m((*(int *)(int) (&(mem-memoffset)[amark(addr)]) = (i)))[m
[32m+[m[32m#define sstore(addr, i)	\[m
[32m+[m	[32m((*(short *)(int) (&(mem-memoffset)[amark(addr)]) = (i)))[m
[32m+[m[32m#define cstore(addr, i)	\[m
[32m+[m	[32m(((mem-memoffset)[amark(addr)] = (i)))[m
[32m+[m
[1mdiff --git a/code/bin/main.c b/code/bin/main.c[m
[1mnew file mode 100755[m
[1mindex 0000000..a184e0b[m
[1m--- /dev/null[m
[1m+++ b/code/bin/main.c[m
[36m@@ -0,0 +1,167 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m/* MIPS instruction interpreter */[m
[32m+[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <filehdr.h>[m
[32m+[m[32m#include <scnhdr.h>[m
[32m+[m[32m#include <syms.h>[m
[32m+[m[32m#include <ldfcn.h>[m
[32m+[m[32m#include "int.h"[m
[32m+[m
[32m+[m[32mstatic FILE *fp;[m
[32m+[m[32mstatic LDFILE *ldptr;[m
[32m+[m[32mstatic SCNHDR texthead, rdatahead, datahead, sdatahead, sbsshead, bsshead;[m
[32m+[m
[32m+[m[32mstatic char filename[1000] = "a.out";	/* default a.out file */[m
[32m+[m[32mstatic char self[256];			/* name of invoking program */[m
[32m+[m
[32m+[m[32mchar mem[MEMSIZE];		/* main memory. use malloc later */[m
[32m+[m[32mint TRACE, Traptrace, Regtrace;[m
[32m+[m[32mint NROWS=64, ASSOC=1, LINESIZE=4, RAND=0, LRD=0;[m
[32m+[m
[32m+[m[32mextern char *strcpy();[m
[32m+[m
[32m+[m[32mmain(argc, argv)[m
[32m+[m[32mint argc;[m
[32m+[m[32mchar *argv[];[m
[32m+[m[32m{[m
[32m+[m	[32mregister char *s;[m
[32m+[m	[32mchar *fakeargv[3];[m
[32m+[m
[32m+[m	[32mstrcpy(self, argv[0]);[m
[32m+[m	[32mwhile  ( argc > 1  &&  argv[1][0] == '-' )[m
[32m+[m	[32m{[m
[32m+[m		[32m--argc; ++argv;[m
[32m+[m		[32mfor  ( s=argv[0]+1; *s != '\0'; ++s )[m
[32m+[m			[32mswitch  ( *s )[m
[32m+[m			[32m{[m
[32m+[m				[32mcase 't':  TRACE = 1; break;[m
[32m+[m				[32mcase 'T':  Traptrace = 1; break;[m
[32m+[m				[32mcase 'r':  Regtrace = 1; break;[m
[32m+[m				[32mcase 'm':[m
[32m+[m					[32mNROWS = atoi(*++argv);[m
[32m+[m					[32mASSOC = atoi(*++argv);[m
[32m+[m					[32mLINESIZE = atoi(*++argv);[m
[32m+[m					[32mRAND = ((*++argv)[0] == 'r');[m
[32m+[m					[32mLRD = ((*argv)[0] == 'l')[m
[32m+[m					[32m   && ((*argv)[1] == 'r')[m
[32m+[m					[32m   && ((*argv)[2] == 'd');[m
[32m+[m					[32margc -= 4;[m
[32m+[m					[32mbreak;[m
[32m+[m			[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mif (argc >= 2)[m
[32m+[m		[32mstrcpy(filename, argv[1]);[m
[32m+[m	[32mfp = fopen(filename, "r");[m
[32m+[m	[32mif (fp == NULL)[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr, "%s: Could not open '%s'\n", self, filename);[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m	[32mfclose(fp);[m
[32m+[m	[32mload_program(filename);[m
[32m+[m	[32mif  ( argv[1] == NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mfakeargv[1] = "a.out";[m
[32m+[m		[32mfakeargv[2] = NULL;[m
[32m+[m		[32margv = fakeargv;[m
[32m+[m		[32m++argc;[m
[32m+[m	[32m}[m
[32m+[m	[32mrunprogram(memoffset, argc-1, argv+1); /* where things normally start */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar *string(s)[m
[32m+[m[32mchar *s;[m
[32m+[m[32m{[m
[32m+[m	[32mchar *p;[m
[32m+[m	[32mextern char *malloc();[m
[32m+[m
[32m+[m	[32mp = malloc((unsigned) strlen(s)+1);[m
[32m+[m	[32mstrcpy(p, s);[m
[32m+[m	[32mreturn p;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mload_program(filename)[m
[32m+[m[32mchar *filename;[m
[32m+[m[32m{[m
[32m+[m	[32mregister int pc, i, j, strindex, stl;[m
[32m+[m	[32mchar str[1111];[m
[32m+[m	[32mint rc1, rc2;[m
[32m+[m
[32m+[m	[32mldptr = ldopen(filename, NULL);[m
[32m+[m	[32mif  ( ldptr == NULL )[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr, "%s: Load read error on %s\n", self, filename);[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m	[32mif  ( TYPE(ldptr) != 0x162 )[m
[32m+[m	[32m{[m
[32m+[m		[32mfprintf(stderr,[m
[32m+[m			[32m"big-endian object file (little-endian interp)\n");[m
[32m+[m		[32mexit(0);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m#define LOADSECTION(head)	\[m
[32m+[m	[32mif  ( head.s_scnptr != 0 ) \[m
[32m+[m	[32m{ \[m
[32m+[m		[32m/* printf("loading %s\n", head.s_name); /* */ \[m
[32m+[m		[32mpc = head.s_vaddr; \[m
[32m+[m		[32mFSEEK(ldptr, head.s_scnptr, 0); \[m
[32m+[m		[32mfor  ( i=0; i<head.s_size; ++i ) \[m
[32m+[m			[32m*(char *) ((mem-memoffset)+pc++) = getc(fp); \[m
[32m+[m		[32mif (pc-memoffset >= MEMSIZE) \[m
[32m+[m			[32m{ printf("MEMSIZE too small. Fix and recompile.\n"); \[m
[32m+[m			[32mexit(1); } \[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".text", &texthead) != 1 )[m
[32m+[m		[32mprintf("text section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(texthead)[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".rdata", &rdatahead) != 1 )[m
[32m+[m		[32mprintf("rdata section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(rdatahead)[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".data", &datahead) != 1 )[m
[32m+[m		[32mprintf("data section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(datahead)[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".sdata", &sdatahead) != 1 )[m
[32m+[m		[32mprintf("sdata section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(sdatahead)[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".sbss", &sbsshead) != 1 )[m
[32m+[m		[32mprintf("sbss section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(sbsshead)[m
[32m+[m
[32m+[m	[32mif  ( ldnshread(ldptr, ".bss", &bsshead) != 1 )[m
[32m+[m		[32mprintf("bss section header missing\n");[m
[32m+[m	[32melse[m
[32m+[m		[32mLOADSECTION(bsshead)[m
[32m+[m
[32m+[m	[32m/* BSS is already zeroed (statically-allocated mem) */[m
[32m+[m	[32m/* this version ignores relocation info */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mint *m_alloc(n)[m
[32m+[m[32mint n;[m
[32m+[m[32m{[m
[32m+[m	[32mextern char *malloc();[m
[32m+[m
[32m+[m	[32mreturn (int *) (int) malloc((unsigned) n);[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/code/bin/noff.h b/code/bin/noff.h[m
[1mnew file mode 100755[m
[1mindex 0000000..ddc2374[m
[1m--- /dev/null[m
[1m+++ b/code/bin/noff.h[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m/* noff.h[m[41m [m
[32m+[m[32m *     Data structures defining the Nachos Object Code Format[m
[32m+[m[32m *[m
[32m+[m[32m *     Basically, we only know about three types of segments:[m
[32m+[m[32m *	code (read-only), initialized data, and unitialized data[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#define NOFFMAGIC	0xbadfad 	/* magic number denoting Nachos[m[41m [m
[32m+[m					[32m * object code file[m[41m [m
[32m+[m					[32m */[m
[32m+[m
[32m+[m[32mtypedef struct segment {[m
[32m+[m[32m  int virtualAddr;		/* location of segment in virt addr space */[m
[32m+[m[32m  int inFileAddr;		/* location of segment in this file */[m
[32m+[m[32m  int size;			/* size of segment */[m
[32m+[m[32m} Segment;[m
[32m+[m
[32m+[m[32mtypedef struct noffHeader {[m
[32m+[m[32m   int noffMagic;		/* should be NOFFMAGIC */[m
[32m+[m[32m   Segment code;		/* executable code segment */[m[41m [m
[32m+[m[32m   Segment initData;		/* initialized data segment */[m
[32m+[m[32m   Segment uninitData;		/* uninitialized data segment --[m
[32m+[m				[32m * should be zero'ed before use[m[41m [m
[32m+[m				[32m */[m
[32m+[m[32m} NoffHeader;[m
[1mdiff --git a/code/bin/opstrings.c b/code/bin/opstrings.c[m
[1mnew file mode 100755[m
[1mindex 0000000..6210254[m
[1m--- /dev/null[m
[1m+++ b/code/bin/opstrings.c[m
[36m@@ -0,0 +1,142 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32mchar *normalops[] = {[m
[32m+[m	[32m"special",[m
[32m+[m	[32m"bcond",[m
[32m+[m	[32m"j",[m
[32m+[m	[32m"jal",[m
[32m+[m	[32m"beq",[m
[32m+[m	[32m"bne",[m
[32m+[m	[32m"blez",[m
[32m+[m	[32m"bgtz",[m
[32m+[m	[32m"addi",[m
[32m+[m	[32m"addiu",[m
[32m+[m	[32m"slti",[m
[32m+[m	[32m"sltiu",[m
[32m+[m	[32m"andi",[m
[32m+[m	[32m"ori",[m
[32m+[m	[32m"xori",[m
[32m+[m	[32m"lui",[m
[32m+[m	[32m"cop0",[m
[32m+[m	[32m"cop1",[m
[32m+[m	[32m"cop2",[m
[32m+[m	[32m"cop3",[m
[32m+[m	[32m"024",[m
[32m+[m	[32m"025",[m
[32m+[m	[32m"026",[m
[32m+[m	[32m"027",[m
[32m+[m	[32m"030",[m
[32m+[m	[32m"031",[m
[32m+[m	[32m"032",[m
[32m+[m	[32m"033",[m
[32m+[m	[32m"034",[m
[32m+[m	[32m"035",[m
[32m+[m	[32m"036",[m
[32m+[m	[32m"037",[m
[32m+[m	[32m"lb",[m
[32m+[m	[32m"lh",[m
[32m+[m	[32m"lwl",[m
[32m+[m	[32m"lw",[m
[32m+[m	[32m"lbu",[m
[32m+[m	[32m"lhu",[m
[32m+[m	[32m"lwr",[m
[32m+[m	[32m"047",[m
[32m+[m	[32m"sb",[m
[32m+[m	[32m"sh",[m
[32m+[m	[32m"swl",[m
[32m+[m	[32m"sw",[m
[32m+[m	[32m"054",[m
[32m+[m	[32m"055",[m
[32m+[m	[32m"swr",[m
[32m+[m	[32m"057",[m
[32m+[m	[32m"lwc0",[m
[32m+[m	[32m"lwc1",[m
[32m+[m	[32m"lwc2",[m
[32m+[m	[32m"lwc3",[m
[32m+[m	[32m"064",[m
[32m+[m	[32m"065",[m
[32m+[m	[32m"066",[m
[32m+[m	[32m"067",[m
[32m+[m	[32m"swc0",[m
[32m+[m	[32m"swc1",[m
[32m+[m	[32m"swc2",[m
[32m+[m	[32m"swc3",[m
[32m+[m	[32m"074",[m
[32m+[m	[32m"075",[m
[32m+[m	[32m"076",[m
[32m+[m	[32m"077"[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mchar *specialops[] = {[m
[32m+[m	[32m"sll",[m
[32m+[m	[32m"001",[m
[32m+[m	[32m"srl",[m
[32m+[m	[32m"sra",[m
[32m+[m	[32m"sllv",[m
[32m+[m	[32m"005",[m
[32m+[m	[32m"srlv",[m
[32m+[m	[32m"srav",[m
[32m+[m	[32m"jr",[m
[32m+[m	[32m"jalr",[m
[32m+[m	[32m"012",[m
[32m+[m	[32m"013",[m
[32m+[m	[32m"syscall",[m
[32m+[m	[32m"break",[m
[32m+[m	[32m"016",[m
[32m+[m	[32m"017",[m
[32m+[m	[32m"mfhi",[m
[32m+[m	[32m"mthi",[m
[32m+[m	[32m"mflo",[m
[32m+[m	[32m"mtlo",[m
[32m+[m	[32m"024",[m
[32m+[m	[32m"025",[m
[32m+[m	[32m"026",[m
[32m+[m	[32m"027",[m
[32m+[m	[32m"mult",[m
[32m+[m	[32m"multu",[m
[32m+[m	[32m"div",[m
[32m+[m	[32m"divu",[m
[32m+[m	[32m"034",[m
[32m+[m	[32m"035",[m
[32m+[m	[32m"036",[m
[32m+[m	[32m"037",[m
[32m+[m	[32m"add",[m
[32m+[m	[32m"addu",[m
[32m+[m	[32m"sub",[m
[32m+[m	[32m"subu",[m
[32m+[m	[32m"and",[m
[32m+[m	[32m"or",[m
[32m+[m	[32m"xor",[m
[32m+[m	[32m"nor",[m
[32m+[m	[32m"050",[m
[32m+[m	[32m"051",[m
[32m+[m	[32m"slt",[m
[32m+[m	[32m"sltu",[m
[32m+[m	[32m"054",[m
[32m+[m	[32m"055",[m
[32m+[m	[32m"056",[m
[32m+[m	[32m"057",[m
[32m+[m	[32m"060",[m
[32m+[m	[32m"061",[m
[32m+[m	[32m"062",[m
[32m+[m	[32m"063",[m
[32m+[m	[32m"064",[m
[32m+[m	[32m"065",[m
[32m+[m	[32m"066",[m
[32m+[m	[32m"067",[m
[32m+[m	[32m"070",[m
[32m+[m	[32m"071",[m
[32m+[m	[32m"072",[m
[32m+[m	[32m"073",[m
[32m+[m	[32m"074",[m
[32m+[m	[32m"075",[m
[32m+[m	[32m"076",[m
[32m+[m	[32m"077",[m
[32m+[m[32m};[m
[32m+[m
[1mdiff --git a/code/bin/out.c b/code/bin/out.c[m
[1mnew file mode 100755[m
[1mindex 0000000..0815018[m
[1m--- /dev/null[m
[1m+++ b/code/bin/out.c[m
[36m@@ -0,0 +1,256 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#define MAIN[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#undef MAIN[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * OUT.C[m
[32m+[m[32m * Looking at a.out formats.[m
[32m+[m[32m *[m
[32m+[m[32m * First task:[m
[32m+[m[32m * Look at mips COFF stuff:[m
[32m+[m[32m * Print out the contents of a file and do the following:[m
[32m+[m[32m *    For data, print the value and give relocation information[m
[32m+[m[32m *    For code, disassemble and give relocation information[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include <filehdr.h>[m
[32m+[m[32m#include <aouthdr.h>[m
[32m+[m[32m#include <scnhdr.h>[m
[32m+[m[32m#include <reloc.h>[m
[32m+[m[32m#include <syms.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m#define read_struct(f,s) (fread(&s,sizeof(s),1,f)==1)[m
[32m+[m
[32m+[m[32m#define MAXRELOCS 1000[m
[32m+[m
[32m+[m
[32m+[m[32m#define MAXDATA 10000[m
[32m+[m
[32m+[m[32mstruct data {[m
[32m+[m[32m  long data[MAXDATA];[m
[32m+[m[32m  struct reloc reloc[MAXRELOCS];[m
[32m+[m[32m  int length;[m
[32m+[m[32m  int relocs;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#define MAXSCNS 10[m
[32m+[m[32m#define MAXSYMS 300[m
[32m+[m[32m#define MAXSSPACE 20000[m
[32m+[m
[32m+[m[32mstruct filehdr filehdr;[m
[32m+[m[32mstruct aouthdr aouthdr;[m
[32m+[m[32mstruct scnhdr scnhdr[MAXSCNS];[m
[32m+[m[32mstruct data section[MAXSCNS];[m
[32m+[m[32mHDRR symhdr;[m
[32m+[m[32mEXTR symbols[MAXSYMS];[m
[32m+[m[32mchar sspace[20000];[m
[32m+[m
[32m+[m[32mchar *symbol_type[] = {[m
[32m+[m[32m  "Nil", "Global", "Static", "Param", "Local", "Label", "Proc", "Block",[m
[32m+[m[32m  "End", "Member", "Type", "File", "Register", "Forward", "StaticProc",[m
[32m+[m[32m  "Constant" };[m
[32m+[m
[32m+[m[32mchar *storage_class[] = {[m
[32m+[m[32m  "Nil", "Text", "Data", "Bss", "Register", "Abs", "Undefined", "CdbLocal",[m
[32m+[m[32m  "Bits", "CdbSystem", "RegImage", "Info", "UserStruct", "SData", "SBss",[m
[32m+[m[32m  "RData", "Var", "Common", "SCommon", "VarRegister", "Variant", "SUndefined",[m
[32m+[m[32m  "Init" };[m
[32m+[m[41m	  [m
[32m+[m[32mmain(argc,argv)[m
[32m+[m[32mint argc;[m
[32m+[m[32mchar *argv[];[m
[32m+[m[32m{[m
[32m+[m[32m  char *filename = "a.out";[m
[32m+[m[32m  FILE *f;[m
[32m+[m[32m  int i;[m
[32m+[m[32m  long l;[m
[32m+[m[32m/*   EXTR filesym; */[m
[32m+[m[32m  char buf[100];[m
[32m+[m
[32m+[m[32m  if (argc == 2) filename = argv[1];[m
[32m+[m[32m  if ((f = fopen(filename,"r")) == NULL) {[m
[32m+[m[32m    printf("out: could not open %s\n",filename);[m
[32m+[m[32m    perror("out");[m
[32m+[m[32m    exit(1);[m
[32m+[m[32m  }[m
[32m+[m[32m  if (!read_struct(f,filehdr) ||[m
[32m+[m[32m      !read_struct(f,aouthdr) ||[m
[32m+[m[32m      filehdr.f_magic != MIPSELMAGIC) {[m
[32m+[m[32m    printf("out: %s is not a MIPS Little-Endian COFF object file\n",filename);[m
[32m+[m[32m    exit(1);[m
[32m+[m[32m  }[m
[32m+[m[32m  if (filehdr.f_nscns > MAXSCNS) {[m
[32m+[m[32m    printf("out: Too many COFF sections.\n");[m
[32m+[m[32m    exit(1);[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i=0; i < filehdr.f_nscns; ++i) {[m
[32m+[m[32m    read_struct(f,scnhdr[i]);[m
[32m+[m[32m    if (scnhdr[i].s_size > MAXDATA*sizeof(long) &&[m
[32m+[m	[32mscnhdr[i].s_scnptr != 0 ||[m
[32m+[m	[32mscnhdr[i].s_nreloc > MAXRELOCS) {[m
[32m+[m[32m      printf("section %s is too big.\n",scnhdr[i].s_name);[m
[32m+[m[32m      exit(1);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  for (i=0; i < filehdr.f_nscns; ++i) {[m
[32m+[m[32m    if (scnhdr[i].s_scnptr != 0) {[m
[32m+[m[32m      section[i].length = scnhdr[i].s_size/4;[m
[32m+[m[32m      fseek(f,scnhdr[i].s_scnptr,0);[m
[32m+[m[32m      fread(section[i].data,sizeof(long),section[i].length,f);[m
[32m+[m[32m      section[i].relocs = scnhdr[i].s_nreloc;[m
[32m+[m[32m      fseek(f,scnhdr[i].s_relptr,0);[m
[32m+[m[32m      fread(section[i].reloc,sizeof(struct reloc),section[i].relocs,f);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      section[i].length = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  fseek(f,filehdr.f_symptr,0);[m
[32m+[m[32m  read_struct(f,symhdr);[m
[32m+[m[32m  if (symhdr.iextMax > MAXSYMS) {[m
[32m+[m[32m    printf("too many symbols to store.\n");[m
[32m+[m[32m  }[m
[32m+[m[32m  fseek(f,symhdr.cbExtOffset,0);[m
[32m+[m[32m  for (i=0; i < MAXSYMS && i<symhdr.iextMax; ++i) {[m
[32m+[m[32m    read_struct(f,symbols[i]);[m
[32m+[m[32m  }[m
[32m+[m[32m  if (symhdr.issExtMax > MAXSSPACE) {[m
[32m+[m[32m    printf("too large a string space.\n");[m
[32m+[m[32m    exit(1);[m
[32m+[m[32m  }[m
[32m+[m[32m  fseek(f,symhdr.cbSsExtOffset,0);[m
[32m+[m[32m  fread(sspace,1,symhdr.issExtMax,f);[m
[32m+[m
[32m+[m[32m  for (i=0; i<filehdr.f_nscns; ++i) {[m
[32m+[m[32m    print_section(i);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  printf("External Symbols:\nValue\t Type\t\tStorage Class\tName\n");[m
[32m+[m[32m  for (i=0; i < MAXSYMS && i < symhdr.iextMax; ++i) {[m
[32m+[m[32m    SYMR *sym = &symbols[i].asym;[m
[32m+[m[32m    if (sym->sc == scUndefined) myprintf("\t ");[m
[32m+[m[32m    else myprintf("%08x ",sym->value);[m
[32m+[m[32m    myprintf("%s",symbol_type[sym->st]);[m
[32m+[m[32m    mytab(25);[m
[32m+[m[32m    myprintf("%s",storage_class[sym->sc]);[m
[32m+[m[32m    mytab(41);[m
[32m+[m[32m    myprintf("%s\n",&sspace[sym->iss]);[m
[32m+[m[32m  }[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic column = 1;[m
[32m+[m[32mstatic FILE *outfile = stdout;[m
[32m+[m
[32m+[m[32m#include <varargs.h>[m
[32m+[m[32m/*VARARGS0*/[m
[32m+[m[32mmyprintf(va_alist)[m
[32m+[m[32mva_dcl[m
[32m+[m[32m{[m
[32m+[m[32m  va_list ap;[m
[32m+[m[32m  char *form;[m
[32m+[m[32m  char buf[100];[m
[32m+[m
[32m+[m[32m  va_start(ap);[m
[32m+[m[32m  form = va_arg(ap,char *);[m
[32m+[m[32m  vsprintf(buf,form,ap);[m
[32m+[m[32m  va_end(ap);[m
[32m+[m
[32m+[m[32m  fputs(buf,outfile);[m
[32m+[m
[32m+[m[32m  for (form = buf; *form != '\0'; ++form) {[m
[32m+[m[32m    if (*form == '\n') column = 1;[m
[32m+[m[32m    else if (*form == '\t') column = ((column + 7)&~7)+1;[m
[32m+[m[32m    else column += 1;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmytab(n)[m
[32m+[m[32mint n;[m
[32m+[m[32m{[m
[32m+[m[32m  while (column < n) {[m
[32m+[m[32m    fputc(' ',outfile);[m
[32m+[m[32m    ++column;[m
[32m+[m[32m  }[m
[32m+[m[32m  return column == n;[m
[32m+[m[32m}[m[41m  [m
[32m+[m
[32m+[m[32mmysetfile(f)[m
[32m+[m[32mFILE *f;[m
[32m+[m[32m{[m
[32m+[m[32m  outfile = f;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#define printf myprintf[m
[32m+[m[32m#include "d.c"[m
[32m+[m
[32m+[m[32mprint_section(i)[m
[32m+[m[32mint i;[m
[32m+[m[32m{[m
[32m+[m[32m  int j,k;[m
[32m+[m[32m  int is_text;[m
[32m+[m[32m  long pc;[m
[32m+[m[32m  long word;[m
[32m+[m[32m  char *s;[m
[32m+[m
[32m+[m[32m  printf("Section: %s\t%d/%d\n",scnhdr[i].s_name,[m
[32m+[m	[32m scnhdr[i].s_size,section[i].relocs);[m
[32m+[m[32m  is_text =  (strncmp(scnhdr[i].s_name,".text",5) == 0);[m
[32m+[m
[32m+[m[32m  for (j=0; j < section[i].length; ++j) {[m
[32m+[m[32m    pc = scnhdr[i].s_vaddr+j*4;[m
[32m+[m[32m    word = section[i].data[j];[m
[32m+[m[32m    if (is_text) {[m
[32m+[m[32m      dump_ascii(word,pc);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      printf("%08x: %08x  ", pc,word);[m
[32m+[m[32m      s = (char *)&word;[m
[32m+[m[32m      for (k=0;k<4;++k) {[m
[32m+[m	[32mif (s[k] >= ' ' && s[k] < 127) printf("%c",s[k]);[m
[32m+[m	[32melse printf(".");[m
[32m+[m[32m      }[m
[32m+[m[32m      printf("\t%d",word);[m
[32m+[m[32m    }[m
[32m+[m[32m    print_reloc(pc,i,j);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar *section_name[] = {[m
[32m+[m[32m  "(null)", ".text", ".rdata", ".data", ".sdata", ".sbss", ".bss",[m
[32m+[m[32m  ".init", ".lit8", ".lit4"[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mchar *reloc_type[] = {[m
[32m+[m[32m  "abs", "16", "32", "26", "hi16", "lo16", "gpdata", "gplit"[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mprint_reloc(vaddr,i,j)[m
[32m+[m[32mint i,j;[m
[32m+[m[32m{[m
[32m+[m[32m  int k;[m
[32m+[m[32m  struct reloc *rp;[m
[32m+[m[32m  for (k=0; k < section[i].relocs; ++k) {[m
[32m+[m[32m    rp = &section[i].reloc[k];[m
[32m+[m[32m    if (vaddr == rp->r_vaddr) {[m
[32m+[m[32m      mytab(57);[m
[32m+[m[32m      if (rp->r_extern) {[m
[32m+[m	[32mif (rp->r_symndx >= MAXSYMS) {[m
[32m+[m	[32m  printf("sym $%d",rp->r_symndx);[m
[32m+[m	[32m} else {[m
[32m+[m	[32m  printf("\"%s\"",&sspace[symbols[rp->r_symndx].asym.iss]);[m
[32m+[m	[32m}[m
[32m+[m[32m      } else {[m
[32m+[m	[32mprintf("%s",section_name[rp->r_symndx]);[m
[32m+[m[32m      }[m
[32m+[m[32m      printf(" %s",reloc_type[rp->r_type]);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  printf("\n");[m
[32m+[m[32m}[m
[1mdiff --git a/code/bin/system.c b/code/bin/system.c[m
[1mnew file mode 100755[m
[1mindex 0000000..d2d347c[m
[1m--- /dev/null[m
[1m+++ b/code/bin/system.c[m
[36m@@ -0,0 +1,143 @@[m
[32m+[m[32m/*[m
[32m+[m[32m Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m of liability and disclaimer of warranty provisions.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <syscall.h>[m
[32m+[m[32m#include "int.h"[m
[32m+[m
[32m+[m[32mextern int Reg[];[m
[32m+[m[32mextern char mem[];[m
[32m+[m[32mextern int Traptrace;[m
[32m+[m
[32m+[m[32mchar *u_to_int_addr();[m
[32m+[m
[32m+[m[32m/* handle system calls */[m
[32m+[m[32msystem_break()[m
[32m+[m[32m{[m
[32m+[m	[32mif  ( Traptrace )[m
[32m+[m		[32mprintf("**breakpoint ");[m
[32m+[m	[32msystem_trap();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32msystem_trap()[m
[32m+[m[32m{[m
[32m+[m	[32mint o0, o1, o2;		/* user out register values */[m
[32m+[m	[32mint syscallno;[m
[32m+[m	[32mextern long lseek();[m
[32m+[m
[32m+[m	[32mif  ( Traptrace )[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("**System call %d\n", Reg[2]);[m
[32m+[m		[32mdump_reg();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m/*	if (Reg[1] == 0)[m
[32m+[m[32m/*	{			/* SYS_indir */[m
[32m+[m[32m/*		syscallno = Reg[8];	/* out reg 0 */[m
[32m+[m[32m/*		o0 = Reg[9];[m
[32m+[m[32m/*		o1 = Reg[10];[m
[32m+[m[32m/*		o2 = Reg[11];[m
[32m+[m[32m/*	}[m
[32m+[m[32m/*	else	/* */[m
[32m+[m	[32m{[m
[32m+[m		[32msyscallno = Reg[2];[m
[32m+[m		[32mo0 = Reg[4];[m
[32m+[m		[32mo1 = Reg[5];[m
[32m+[m		[32mo2 = Reg[6];[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mswitch (syscallno)[m
[32m+[m	[32m{[m
[32m+[m		[32mcase SYS_exit:	/*1*/[m
[32m+[m			[32mprintstatistics();[m
[32m+[m			[32mfflush(stdout);[m
[32m+[m			[32mexit(0);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase SYS_read:	/*3*/[m
[32m+[m			[32mReg[1] =[m[41m [m
[32m+[m				[32mread(u_to_int_fd(o0), u_to_int_addr(o1), o2);[m
[32m+[m			[32mbreak;[m
[32m+[m		[32mcase SYS_write:	/*4*/[m
[32m+[m			[32mReg[1] =[m[41m [m
[32m+[m				[32mwrite(u_to_int_fd(o0), u_to_int_addr(o1), o2);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_open:	/*5*/[m
[32m+[m			[32mReg[1] = open(u_to_int_addr(o0), o1, o2); /* */[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_close:	/*6*/[m
[32m+[m			[32mReg[1] = 0;	/* hack */[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase 17:	/* 17 */[m
[32m+[m			[32m/* old sbreak. where did it go? */[m
[32m+[m			[32mReg[1] = ((o0 / 8192) + 1) * 8192;[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_lseek:	/*19*/[m
[32m+[m			[32mReg[1] = (int) lseek(u_to_int_fd(o0), (long) o1, o2);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_ioctl:/* 54 */[m
[32m+[m			[32m{	/* copied from sas -- I don't understand yet. */[m
[32m+[m				[32m/* see dave weaver */[m
[32m+[m[32m#define	IOCPARM_MASK	0x7f	/* parameters must be < 128 bytes */[m
[32m+[m				[32mint size = (o1 >> 16) & IOCPARM_MASK;[m
[32m+[m				[32mchar ioctl_group = (o1 >> 8) & 0x00ff;[m
[32m+[m				[32mif ((ioctl_group == 't') && (size == 8))[m
[32m+[m				[32m{[m
[32m+[m					[32msize = 6;[m
[32m+[m					[32mo1 = (o1 & ~((IOCPARM_MASK << 16)))[m[41m [m
[32m+[m					[32m   | (size << 16);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32mReg[1] = ioctl(u_to_int_fd(o0),o1,u_to_int_addr(o2));[m
[32m+[m			[32mReg[1] = 0;	/* hack */[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_fstat:		/* 62 */[m
[32m+[m			[32mReg[1] = fstat(o1, o2);[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mcase SYS_getpagesize:	/* 64 */[m
[32m+[m			[32mReg[1] = getpagesize();[m
[32m+[m			[32mbreak;[m
[32m+[m
[32m+[m		[32mdefault:[m
[32m+[m			[32mprintf("Unknown System call %d\n", syscallno);[m
[32m+[m			[32mif  ( ! Traptrace )[m
[32m+[m				[32mdump_reg();[m
[32m+[m			[32mexit(2);[m
[32m+[m			[32mbreak;[m
[32m+[m	[32m}[m
[32m+[m	[32mif  ( Traptrace )[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("**Afterwards:\n");[m
[32m+[m		[32mdump_reg();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar *u_to_int_addr(ptr)[m
[32m+[m[32mint ptr;[m
[32m+[m[32m{	/* convert a user pointer to the real address   */[m
[32m+[m	[32m/* used in the interpreter			*/[m
[32m+[m
[32m+[m	[32m return ((char *) ((int) mem - memoffset  + ptr));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mu_to_int_fd(fd)[m
[32m+[m[32m{[m
[32m+[m	[32mif (fd > 2)[m
[32m+[m	[32m{[m
[32m+[m		[32m/*[m
[32m+[m		[32mprintf("No general file descriptors yet\n");[m
[32m+[m		[32mexit(2);[m
[32m+[m		[32m*/[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn (fd);		/* assume we can handle it for now */[m
[32m+[m[32m}[m
[1mdiff --git a/code/filesys/Makefile b/code/filesys/Makefile[m
[1mnew file mode 100755[m
[1mindex 0000000..e44a1dc[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/Makefile[m
[36m@@ -0,0 +1,612 @@[m
[32m+[m[32m# NOTE: this is a GNU Makefile.  You must use "gmake" rather than "make".[m
[32m+[m[32m#[m
[32m+[m[32m# Makefile for the file system assignment[m
[32m+[m[32m#    Defines set up assuming multiprogramming and virtual memory done first.[m
[32m+[m[32m#    If not, use the "bare bones"  defines below.[m[41m [m
[32m+[m[32m#[m
[32m+[m[32m# Copyright (c) 1992 The Regents of the University of California.[m
[32m+[m[32m# All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m# of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32mDEFINES =-DTHREADS -DUSER_PROGRAM -DVM -DFILESYS_NEEDED -DFILESYS[m
[32m+[m[32mINCPATH = -I../filesys -I../bin -I../vm -I../userprog -I../threads -I../machine[m
[32m+[m[32mHFILES = $(THREAD_H) $(USERPROG_H) $(VM_H) $(FILESYS_H)[m
[32m+[m[32mCFILES = $(THREAD_C) $(USERPROG_C) $(VM_C) $(FILESYS_C)[m
[32m+[m[32mC_OFILES = $(THREAD_O) $(USERPROG_O) $(VM_O) $(FILESYS_O)[m
[32m+[m
[32m+[m[32m# bare bones version[m
[32m+[m[32m# DEFINES =-DTHREADS -DFILESYS_NEEDED -DFILESYS[m
[32m+[m[32m# INCPATH = -I../filesys -I../threads -I../machine[m
[32m+[m[32m# HFILES = $(THREAD_H) $(FILESYS_H)[m
[32m+[m[32m# CFILES = $(THREAD_C) $(FILESYS_C)[m
[32m+[m[32m# C_OFILES = $(THREAD_O) $(FILESYS_O)[m
[32m+[m
[32m+[m[32minclude ../Makefile.common[m
[32m+[m[32minclude ../Makefile.dep[m
[32m+[m[32m#-----------------------------------------------------------------[m
[32m+[m[32m# DO NOT DELETE THIS LINE -- make depend uses it[m
[32m+[m[32m# DEPENDENCIES MUST END AT END OF FILE[m
[32m+[m[32mmain.o: ../threads/main.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/bool.h \[m
[32m+[m[32m ../machine/sysdep.h ../threads/copyright.h /usr/include/stdio.h \[m
[32m+[m[32m /usr/include/features.h /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/system.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../threads/utility.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../machine/stats.h \[m
[32m+[m[32m ../machine/timer.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/synch.h[m
[32m+[m[32mlist.o: ../threads/list.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/list.h ../threads/utility.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h ../threads/copyright.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h[m
[32m+[m[32mscheduler.o: ../threads/scheduler.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m ../threads/copyright.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/system.h ../machine/interrupt.h ../threads/list.h \[m
[32m+[m[32m ../machine/stats.h ../machine/timer.h ../filesys/synchdisk.h \[m
[32m+[m[32m ../machine/disk.h ../threads/synch.h[m
[32m+[m[32msynch.o: ../threads/synch.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/synch.h ../threads/thread.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m ../threads/copyright.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/machine.h ../threads/utility.h \[m
[32m+[m[32m ../machine/translate.h ../machine/disk.h ../userprog/addrspace.h \[m
[32m+[m[32m ../filesys/filesys.h ../filesys/openfile.h ../threads/list.h \[m
[32m+[m[32m ../threads/system.h ../threads/scheduler.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h[m
[32m+[m[32msynchlist.o: ../threads/synchlist.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/synchlist.h ../threads/list.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m ../threads/copyright.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/synch.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../threads/utility.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h[m
[32m+[m[32msystem.o: ../threads/system.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h ../threads/copyright.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h[m
[32m+[m[32mthread.o: ../threads/thread.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/thread.h ../threads/utility.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h ../threads/copyright.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/machine.h ../threads/utility.h \[m
[32m+[m[32m ../machine/translate.h ../machine/disk.h ../userprog/addrspace.h \[m
[32m+[m[32m ../filesys/filesys.h ../filesys/openfile.h ../threads/switch.h \[m
[32m+[m[32m ../threads/synch.h ../threads/list.h ../threads/system.h \[m
[32m+[m[32m ../threads/scheduler.h ../machine/interrupt.h ../threads/list.h \[m
[32m+[m[32m ../machine/stats.h ../machine/timer.h ../filesys/synchdisk.h \[m
[32m+[m[32m ../machine/disk.h ../threads/synch.h[m
[32m+[m[32mutility.o: ../threads/utility.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/bool.h \[m
[32m+[m[32m ../machine/sysdep.h ../threads/copyright.h /usr/include/stdio.h \[m
[32m+[m[32m /usr/include/features.h /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/stdarg.h[m
[32m+[m[32mthreadtest.o: ../threads/threadtest.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h ../threads/copyright.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h[m
[32m+[m[32minterrupt.o: ../machine/interrupt.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/interrupt.h ../threads/list.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/bool.h \[m
[32m+[m[32m ../machine/sysdep.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/system.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../threads/utility.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h[m
[32m+[m[32msysdep.o: ../machine/sysdep.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h /usr/include/signal.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sigset.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/signum.h /usr/include/time.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/siginfo.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sigaction.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sigcontext.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sigstack.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/ucontext.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/pthreadtypes.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sigthread.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/types.h /usr/include/endian.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/endian.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/byteswap.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/byteswap-16.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/select.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/select.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/time.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/sysmacros.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/time.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/socket.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/uio.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/uio.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/socket.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/socket_type.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sockaddr.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/asm/socket.h \[m
[32m+[m[32m /usr/include/asm-generic/socket.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/asm/sockios.h \[m
[32m+[m[32m /usr/include/asm-generic/sockios.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/file.h /usr/include/fcntl.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/fcntl.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/fcntl-linux.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stat.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/un.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/mman.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/mman.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/mman-linux.h /usr/include/unistd.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/posix_opt.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/environments.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/confname.h /usr/include/getopt.h \[m
[32m+[m[32m /usr/include/errno.h /usr/include/i386-linux-gnu/bits/errno.h \[m
[32m+[m[32m /usr/include/linux/errno.h /usr/include/i386-linux-gnu/asm/errno.h \[m
[32m+[m[32m /usr/include/asm-generic/errno.h /usr/include/asm-generic/errno-base.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m ../threads/system.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../machine/stats.h ../machine/timer.h ../filesys/synchdisk.h \[m
[32m+[m[32m ../machine/disk.h ../threads/synch.h[m
[32m+[m[32mstats.o: ../machine/stats.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h /usr/include/stdio.h \[m
[32m+[m[32m /usr/include/features.h /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/stats.h[m
[32m+[m[32mtimer.o: ../machine/timer.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/timer.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/thread.h ../machine/machine.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../machine/stats.h \[m
[32m+[m[32m ../machine/timer.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/synch.h[m
[32m+[m[32maddrspace.o: ../userprog/addrspace.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h \[m
[32m+[m[32m ../userprog/addrspace.h ../bin/noff.h[m
[32m+[m[32mbitmap.o: ../userprog/bitmap.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../userprog/bitmap.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../filesys/openfile.h[m
[32m+[m[32mexception.o: ../userprog/exception.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h \[m
[32m+[m[32m ../userprog/syscall.h[m
[32m+[m[32mprogtest.o: ../userprog/progtest.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h \[m
[32m+[m[32m ../machine/console.h ../userprog/addrspace.h[m
[32m+[m[32mconsole.o: ../machine/console.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/console.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/thread.h ../machine/machine.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../machine/stats.h \[m
[32m+[m[32m ../machine/timer.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/synch.h[m
[32m+[m[32mmachine.o: ../machine/machine.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/machine.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../threads/system.h ../threads/utility.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../machine/stats.h \[m
[32m+[m[32m ../machine/timer.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/synch.h[m
[32m+[m[32mmipssim.o: ../machine/mipssim.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/machine.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../machine/mipssim.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/thread.h ../machine/machine.h ../userprog/addrspace.h \[m
[32m+[m[32m ../filesys/filesys.h ../filesys/openfile.h ../threads/scheduler.h \[m
[32m+[m[32m ../threads/list.h ../machine/interrupt.h ../threads/list.h \[m
[32m+[m[32m ../machine/stats.h ../machine/timer.h ../filesys/synchdisk.h \[m
[32m+[m[32m ../machine/disk.h ../threads/synch.h[m
[32m+[m[32mtranslate.o: ../machine/translate.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/machine.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/system.h ../threads/utility.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../threads/scheduler.h ../threads/list.h \[m
[32m+[m[32m ../machine/interrupt.h ../threads/list.h ../machine/stats.h \[m
[32m+[m[32m ../machine/timer.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/synch.h[m
[32m+[m[32mdirectory.o: ../filesys/directory.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h /usr/include/stdio.h \[m
[32m+[m[32m /usr/include/features.h /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../filesys/filehdr.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/bitmap.h ../filesys/openfile.h ../filesys/directory.h \[m
[32m+[m[32m ../filesys/openfile.h[m
[32m+[m[32mfilehdr.o: ../filesys/filehdr.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/system.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/utility.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/thread.h ../machine/machine.h \[m
[32m+[m[32m ../threads/utility.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h \[m
[32m+[m[32m ../filesys/filehdr.h ../userprog/bitmap.h ../filesys/openfile.h[m
[32m+[m[32mfilesys.o: ../filesys/filesys.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/disk.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../userprog/bitmap.h ../filesys/openfile.h \[m
[32m+[m[32m ../filesys/directory.h ../filesys/openfile.h ../filesys/filehdr.h \[m
[32m+[m[32m ../filesys/filesys.h[m
[32m+[m[32mfstest.o: ../filesys/fstest.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/utility.h ../threads/copyright.h \[m
[32m+[m[32m ../threads/bool.h ../machine/sysdep.h /usr/include/stdio.h \[m
[32m+[m[32m /usr/include/features.h /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/system.h ../threads/utility.h ../threads/thread.h \[m
[32m+[m[32m ../machine/machine.h ../machine/translate.h ../machine/disk.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../threads/scheduler.h \[m
[32m+[m[32m ../threads/list.h ../machine/interrupt.h ../threads/list.h \[m
[32m+[m[32m ../machine/stats.h ../machine/timer.h ../filesys/synchdisk.h \[m
[32m+[m[32m ../machine/disk.h ../threads/synch.h ../threads/thread.h[m
[32m+[m[32mopenfile.o: ../filesys/openfile.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../filesys/filehdr.h ../machine/disk.h \[m
[32m+[m[32m ../threads/utility.h ../threads/copyright.h ../threads/bool.h \[m
[32m+[m[32m ../machine/sysdep.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../userprog/bitmap.h ../filesys/openfile.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/thread.h ../machine/machine.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../threads/synch.h[m
[32m+[m[32msynchdisk.o: ../filesys/synchdisk.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../filesys/synchdisk.h ../machine/disk.h \[m
[32m+[m[32m ../threads/utility.h ../threads/copyright.h ../threads/bool.h \[m
[32m+[m[32m ../machine/sysdep.h /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/synch.h ../threads/thread.h \[m
[32m+[m[32m ../threads/utility.h ../machine/machine.h ../machine/translate.h \[m
[32m+[m[32m ../machine/disk.h ../userprog/addrspace.h ../filesys/filesys.h \[m
[32m+[m[32m ../filesys/openfile.h ../threads/list.h[m
[32m+[m[32mdisk.o: ../machine/disk.cc /usr/include/stdc-predef.h \[m
[32m+[m[32m ../threads/copyright.h ../machine/disk.h ../threads/utility.h \[m
[32m+[m[32m ../threads/copyright.h ../threads/bool.h ../machine/sysdep.h \[m
[32m+[m[32m /usr/include/stdio.h /usr/include/features.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/sys/cdefs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/wordsize.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/gnu/stubs-32.h \[m
[32m+[m[32m /usr/lib/gcc/i686-linux-gnu/5/include/stddef.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/types.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/typesizes.h /usr/include/libio.h \[m
[32m+[m[32m /usr/include/_G_config.h /usr/include/wchar.h ../threads/stdarg.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/stdio_lim.h \[m
[32m+[m[32m /usr/include/i386-linux-gnu/bits/sys_errlist.h /usr/include/string.h \[m
[32m+[m[32m /usr/include/xlocale.h ../threads/system.h ../threads/utility.h \[m
[32m+[m[32m ../threads/thread.h ../machine/machine.h ../machine/translate.h \[m
[32m+[m[32m ../userprog/addrspace.h ../filesys/filesys.h ../filesys/openfile.h \[m
[32m+[m[32m ../threads/scheduler.h ../threads/list.h ../machine/interrupt.h \[m
[32m+[m[32m ../threads/list.h ../machine/stats.h ../machine/timer.h \[m
[32m+[m[32m ../filesys/synchdisk.h ../machine/disk.h ../threads/synch.h[m
[32m+[m[32m# DEPENDENCIES MUST END AT END OF FILE[m
[32m+[m[32m# IF YOU PUT STUFF HERE IT WILL GO AWAY[m
[32m+[m[32m# see make depend above[m
[1mdiff --git a/code/filesys/addrspace.o b/code/filesys/addrspace.o[m
[1mnew file mode 100644[m
[1mindex 0000000..d2b2f4c[m
Binary files /dev/null and b/code/filesys/addrspace.o differ
[1mdiff --git a/code/filesys/bitmap.o b/code/filesys/bitmap.o[m
[1mnew file mode 100644[m
[1mindex 0000000..ebac18c[m
Binary files /dev/null and b/code/filesys/bitmap.o differ
[1mdiff --git a/code/filesys/console.o b/code/filesys/console.o[m
[1mnew file mode 100644[m
[1mindex 0000000..59c8774[m
Binary files /dev/null and b/code/filesys/console.o differ
[1mdiff --git a/code/filesys/directory.cc b/code/filesys/directory.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..2986395[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/directory.cc[m
[36m@@ -0,0 +1,197 @@[m
[32m+[m[32m// directory.cc[m[41m [m
[32m+[m[32m//	Routines to manage a directory of file names.[m
[32m+[m[32m//[m
[32m+[m[32m//	The directory is a table of fixed length entries; each[m
[32m+[m[32m//	entry represents a single file, and contains the file name,[m
[32m+[m[32m//	and the location of the file header on disk.  The fixed size[m
[32m+[m[32m//	of each directory entry means that we have the restriction[m
[32m+[m[32m//	of a fixed maximum size for file names.[m
[32m+[m[32m//[m
[32m+[m[32m//	The constructor initializes an empty directory of a certain size;[m
[32m+[m[32m//	we use ReadFrom/WriteBack to fetch the contents of the directory[m
[32m+[m[32m//	from disk, and to write back any modifications back to disk.[m
[32m+[m[32m//[m
[32m+[m[32m//	Also, this implementation has the restriction that the size[m
[32m+[m[32m//	of the directory cannot expand.  In other words, once all the[m
[32m+[m[32m//	entries in the directory are used, no more files can be created.[m
[32m+[m[32m//	Fixing this is one of the parts to the assignment.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "utility.h"[m
[32m+[m[32m#include "filehdr.h"[m
[32m+[m[32m#include "directory.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::Directory[m
[32m+[m[32m// 	Initialize a directory; initially, the directory is completely[m
[32m+[m[32m//	empty.  If the disk is being formatted, an empty directory[m
[32m+[m[32m//	is all we need, but otherwise, we need to call FetchFrom in order[m
[32m+[m[32m//	to initialize it from disk.[m
[32m+[m[32m//[m
[32m+[m[32m//	"size" is the number of entries in the directory[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDirectory::Directory(int size)[m
[32m+[m[32m{[m
[32m+[m[32m    table = new DirectoryEntry[size];[m
[32m+[m[32m    tableSize = size;[m
[32m+[m[32m    for (int i = 0; i < tableSize; i++)[m
[32m+[m	[32mtable[i].inUse = FALSE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::~Directory[m
[32m+[m[32m// 	De-allocate directory data structure.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDirectory::~Directory()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    delete [] table;[m
[32m+[m[32m}[m[41m [m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::FetchFrom[m
[32m+[m[32m// 	Read the contents of the directory from disk.[m
[32m+[m[32m//[m
[32m+[m[32m//	"file" -- file containing the directory contents[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDirectory::FetchFrom(OpenFile *file)[m
[32m+[m[32m{[m
[32m+[m[32m    (void) file->ReadAt((char *)table, tableSize * sizeof(DirectoryEntry), 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::WriteBack[m
[32m+[m[32m// 	Write any modifications to the directory back to disk[m
[32m+[m[32m//[m
[32m+[m[32m//	"file" -- file to contain the new directory contents[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDirectory::WriteBack(OpenFile *file)[m
[32m+[m[32m{[m
[32m+[m[32m    (void) file->WriteAt((char *)table, tableSize * sizeof(DirectoryEntry), 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::FindIndex[m
[32m+[m[32m// 	Look up file name in directory, and return its location in the table of[m
[32m+[m[32m//	directory entries.  Return -1 if the name isn't in the directory.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the file name to look up[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mDirectory::FindIndex(char *name)[m
[32m+[m[32m{[m
[32m+[m[32m    for (int i = 0; i < tableSize; i++)[m
[32m+[m[32m        if (table[i].inUse && !strncmp(table[i].name, name, FileNameMaxLen))[m
[32m+[m	[32m    return i;[m
[32m+[m[32m    return -1;		// name not in directory[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::Find[m
[32m+[m[32m// 	Look up file name in directory, and return the disk sector number[m
[32m+[m[32m//	where the file's header is stored. Return -1 if the name isn't[m[41m [m
[32m+[m[32m//	in the directory.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the file name to look up[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mDirectory::Find(char *name)[m
[32m+[m[32m{[m
[32m+[m[32m    int i = FindIndex(name);[m
[32m+[m
[32m+[m[32m    if (i != -1)[m
[32m+[m	[32mreturn table[i].sector;[m
[32m+[m[32m    return -1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::Add[m
[32m+[m[32m// 	Add a file into the directory.  Return TRUE if successful;[m
[32m+[m[32m//	return FALSE if the file name is already in the directory, or if[m
[32m+[m[32m//	the directory is completely full, and has no more space for[m
[32m+[m[32m//	additional file names.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the name of the file being added[m
[32m+[m[32m//	"newSector" -- the disk sector containing the added file's header[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mDirectory::Add(char *name, int newSector)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    if (FindIndex(name) != -1)[m
[32m+[m	[32mreturn FALSE;[m
[32m+[m
[32m+[m[32m    for (int i = 0; i < tableSize; i++)[m
[32m+[m[32m        if (!table[i].inUse) {[m
[32m+[m[32m            table[i].inUse = TRUE;[m
[32m+[m[32m            strncpy(table[i].name, name, FileNameMaxLen);[m[41m [m
[32m+[m[32m            table[i].sector = newSector;[m
[32m+[m[32m        return TRUE;[m
[32m+[m	[32m}[m
[32m+[m[32m    return FALSE;	// no space.  Fix when we have extensible files.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::Remove[m
[32m+[m[32m// 	Remove a file name from the directory.  Return TRUE if successful;[m
[32m+[m[32m//	return FALSE if the file isn't in the directory.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the file name to be removed[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mDirectory::Remove(char *name)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    int i = FindIndex(name);[m
[32m+[m
[32m+[m[32m    if (i == -1)[m
[32m+[m	[32mreturn FALSE; 		// name not in directory[m
[32m+[m[32m    table[i].inUse = FALSE;[m
[32m+[m[32m    return TRUE;[m[41m	[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::List[m
[32m+[m[32m// 	List all the file names in the directory.[m[41m [m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDirectory::List()[m
[32m+[m[32m{[m
[32m+[m[32m   for (int i = 0; i < tableSize; i++)[m
[32m+[m	[32mif (table[i].inUse)[m
[32m+[m	[32m    printf("%s\n", table[i].name);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Directory::Print[m
[32m+[m[32m// 	List all the file names in the directory, their FileHeader locations,[m
[32m+[m[32m//	and the contents of each file.  For debugging.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDirectory::Print()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    FileHeader *hdr = new FileHeader;[m
[32m+[m
[32m+[m[32m    printf("Directory contents:\n");[m
[32m+[m[32m    for (int i = 0; i < tableSize; i++)[m
[32m+[m	[32mif (table[i].inUse) {[m
[32m+[m	[32m    printf("Name: %s, Sector: %d\n", table[i].name, table[i].sector);[m
[32m+[m	[32m    hdr->FetchFrom(table[i].sector);[m
[32m+[m	[32m    hdr->Print();[m
[32m+[m	[32m}[m
[32m+[m[32m    printf("\n");[m
[32m+[m[32m    delete hdr;[m
[32m+[m[32m}[m
[1mdiff --git a/code/filesys/directory.h b/code/filesys/directory.h[m
[1mnew file mode 100755[m
[1mindex 0000000..f2be7ae[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/directory.h[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32m// directory.h[m[41m [m
[32m+[m[32m//	Data structures to manage a UNIX-like directory of file names.[m
[32m+[m[32m//[m[41m [m
[32m+[m[32m//      A directory is a table of pairs: <file name, sector #>,[m
[32m+[m[32m//	giving the name of each file in the directory, and[m[41m [m
[32m+[m[32m//	where to find its file header (the data structure describing[m
[32m+[m[32m//	where to find the file's data blocks) on disk.[m
[32m+[m[32m//[m
[32m+[m[32m//      We assume mutual exclusion is provided by the caller.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#ifndef DIRECTORY_H[m
[32m+[m[32m#define DIRECTORY_H[m
[32m+[m
[32m+[m[32m#include "openfile.h"[m
[32m+[m
[32m+[m[32m#define FileNameMaxLen 		9	// for simplicity, we assume[m[41m [m
[32m+[m					[32m// file names are <= 9 characters long[m
[32m+[m
[32m+[m[32m// The following class defines a "directory entry", representing a file[m
[32m+[m[32m// in the directory.  Each entry gives the name of the file, and where[m
[32m+[m[32m// the file's header is to be found on disk.[m
[32m+[m[32m//[m
[32m+[m[32m// Internal data structures kept public so that Directory operations can[m
[32m+[m[32m// access them directly.[m
[32m+[m
[32m+[m[32mclass DirectoryEntry {[m
[32m+[m[32m  public:[m
[32m+[m[32m    bool inUse;				// Is this directory entry in use?[m
[32m+[m[32m    int sector;				// Location on disk to find the[m[41m [m
[32m+[m					[32m//   FileHeader for this file[m[41m [m
[32m+[m[32m    char name[FileNameMaxLen + 1];	// Text name for file, with +1 for[m[41m [m
[32m+[m					[32m// the trailing '\0'[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// The following class defines a UNIX-like "directory".  Each entry in[m
[32m+[m[32m// the directory describes a file, and where to find it on disk.[m
[32m+[m[32m//[m
[32m+[m[32m// The directory data structure can be stored in memory, or on disk.[m
[32m+[m[32m// When it is on disk, it is stored as a regular Nachos file.[m
[32m+[m[32m//[m
[32m+[m[32m// The constructor initializes a directory structure in memory; the[m
[32m+[m[32m// FetchFrom/WriteBack operations shuffle the directory information[m
[32m+[m[32m// from/to disk.[m[41m [m
[32m+[m
[32m+[m[32mclass Directory {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Directory(int size); 		// Initialize an empty directory[m
[32m+[m					[32m// with space for "size" files[m
[32m+[m[32m    ~Directory();			// De-allocate the directory[m
[32m+[m
[32m+[m[32m    void FetchFrom(OpenFile *file);  	// Init directory contents from disk[m
[32m+[m[32m    void WriteBack(OpenFile *file);	// Write modifications to[m[41m [m
[32m+[m					[32m// directory contents back to disk[m
[32m+[m
[32m+[m[32m    int Find(char *name);		// Find the sector number of the[m[41m [m
[32m+[m					[32m// FileHeader for file: "name"[m
[32m+[m
[32m+[m[32m    bool Add(char *name, int newSector);  // Add a file name into the directory[m
[32m+[m
[32m+[m[32m    bool Remove(char *name);		// Remove a file from the directory[m
[32m+[m
[32m+[m[32m    void List();			// Print the names of all the files[m
[32m+[m					[32m//  in the directory[m
[32m+[m[32m    void Print();			// Verbose print of the contents[m
[32m+[m					[32m//  of the directory -- all the file[m
[32m+[m					[32m//  names and their contents.[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    int tableSize;			// Number of directory entries[m
[32m+[m[32m    DirectoryEntry *table;		// Table of pairs:[m[41m [m
[32m+[m					[32m// <file name, file header location>[m[41m [m
[32m+[m
[32m+[m[32m    int FindIndex(char *name);		// Find the index into the directory[m[41m [m
[32m+[m					[32m//  table corresponding to "name"[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // DIRECTORY_H[m
[1mdiff --git a/code/filesys/directory.o b/code/filesys/directory.o[m
[1mnew file mode 100644[m
[1mindex 0000000..e1fa420[m
Binary files /dev/null and b/code/filesys/directory.o differ
[1mdiff --git a/code/filesys/disk.o b/code/filesys/disk.o[m
[1mnew file mode 100644[m
[1mindex 0000000..cbb1dfa[m
Binary files /dev/null and b/code/filesys/disk.o differ
[1mdiff --git a/code/filesys/exception.o b/code/filesys/exception.o[m
[1mnew file mode 100644[m
[1mindex 0000000..fa8786d[m
Binary files /dev/null and b/code/filesys/exception.o differ
[1mdiff --git a/code/filesys/filehdr.cc b/code/filesys/filehdr.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..57fb46c[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/filehdr.cc[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32m// filehdr.cc[m[41m [m
[32m+[m[32m//	Routines for managing the disk file header (in UNIX, this[m
[32m+[m[32m//	would be called the i-node).[m
[32m+[m[32m//[m
[32m+[m[32m//	The file header is used to locate where on disk the[m[41m [m
[32m+[m[32m//	file's data is stored.  We implement this as a fixed size[m
[32m+[m[32m//	table of pointers -- each entry in the table points to the[m[41m [m
[32m+[m[32m//	disk sector containing that portion of the file data[m
[32m+[m[32m//	(in other words, there are no indirect or doubly indirect[m[41m [m
[32m+[m[32m//	blocks). The table size is chosen so that the file header[m
[32m+[m[32m//	will be just big enough to fit in one disk sector,[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//      Unlike in a real system, we do not keep track of file permissions,[m[41m [m
[32m+[m[32m//	ownership, last modification date, etc., in the file header.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	A file header can be initialized in two ways:[m
[32m+[m[32m//	   for a new file, by modifying the in-memory data structure[m
[32m+[m[32m//	     to point to the newly allocated data blocks[m
[32m+[m[32m//	   for a file already on disk, by reading the file header from disk[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#include "system.h"[m
[32m+[m[32m#include "filehdr.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::Allocate[m
[32m+[m[32m// 	Initialize a fresh file header for a newly created file.[m
[32m+[m[32m//	Allocate data blocks for the file out of the map of free disk blocks.[m
[32m+[m[32m//	Return FALSE if there are not enough free blocks to accomodate[m
[32m+[m[32m//	the new file.[m
[32m+[m[32m//[m
[32m+[m[32m//	"freeMap" is the bit map of free disk sectors[m
[32m+[m[32m//	"fileSize" is the bit map of free disk sectors[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mFileHeader::Allocate(BitMap *freeMap, int fileSize)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    numBytes = fileSize;[m
[32m+[m[32m    numSectors  = divRoundUp(fileSize, SectorSize);[m
[32m+[m[32m    if (freeMap->NumClear() < numSectors)[m
[32m+[m	[32mreturn FALSE;		// not enough space[m
[32m+[m
[32m+[m[32m    for (int i = 0; i < numSectors; i++)[m
[32m+[m	[32mdataSectors[i] = freeMap->Find();[m
[32m+[m[32m    return TRUE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::Deallocate[m
[32m+[m[32m// 	De-allocate all the space allocated for data blocks for this file.[m
[32m+[m[32m//[m
[32m+[m[32m//	"freeMap" is the bit map of free disk sectors[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m[41m [m
[32m+[m[32mFileHeader::Deallocate(BitMap *freeMap)[m
[32m+[m[32m{[m
[32m+[m[32m    for (int i = 0; i < numSectors; i++) {[m
[32m+[m	[32mASSERT(freeMap->Test((int) dataSectors[i]));  // ought to be marked![m
[32m+[m	[32mfreeMap->Clear((int) dataSectors[i]);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::FetchFrom[m
[32m+[m[32m// 	Fetch contents of file header from disk.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	"sector" is the disk sector containing the file header[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mFileHeader::FetchFrom(int sector)[m
[32m+[m[32m{[m
[32m+[m[32m    synchDisk->ReadSector(sector, (char *)this);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::WriteBack[m
[32m+[m[32m// 	Write the modified contents of the file header back to disk.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	"sector" is the disk sector to contain the file header[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mFileHeader::WriteBack(int sector)[m
[32m+[m[32m{[m
[32m+[m[32m    synchDisk->WriteSector(sector, (char *)this);[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::ByteToSector[m
[32m+[m[32m// 	Return which disk sector is storing a particular byte within the file.[m
[32m+[m[32m//      This is essentially a translation from a virtual address (the[m
[32m+[m[32m//	offset in the file) to a physical address (the sector where the[m
[32m+[m[32m//	data at the offset is stored).[m
[32m+[m[32m//[m
[32m+[m[32m//	"offset" is the location within the file of the byte in question[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mFileHeader::ByteToSector(int offset)[m
[32m+[m[32m{[m
[32m+[m[32m    return(dataSectors[offset / SectorSize]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::FileLength[m
[32m+[m[32m// 	Return the number of bytes in the file.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mFileHeader::FileLength()[m
[32m+[m[32m{[m
[32m+[m[32m    return numBytes;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileHeader::Print[m
[32m+[m[32m// 	Print the contents of the file header, and the contents of all[m
[32m+[m[32m//	the data blocks pointed to by the file header.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mFileHeader::Print()[m
[32m+[m[32m{[m
[32m+[m[32m    int i, j, k;[m
[32m+[m[32m    char *data = new char[SectorSize];[m
[32m+[m
[32m+[m[32m    printf("FileHeader contents.  File size: %d.  File blocks:\n", numBytes);[m
[32m+[m[32m    for (i = 0; i < numSectors; i++)[m
[32m+[m	[32mprintf("%d ", dataSectors[i]);[m
[32m+[m[32m    printf("\nFile contents:\n");[m
[32m+[m[32m    for (i = k = 0; i < numSectors; i++) {[m
[32m+[m	[32msynchDisk->ReadSector(dataSectors[i], data);[m
[32m+[m[32m        for (j = 0; (j < SectorSize) && (k < numBytes); j++, k++) {[m
[32m+[m	[32m    if ('\040' <= data[j] && data[j] <= '\176')   // isprint(data[j])[m
[32m+[m		[32mprintf("%c", data[j]);[m
[32m+[m[32m            else[m
[32m+[m		[32mprintf("\\%x", (unsigned char)data[j]);[m
[32m+[m	[32m}[m
[32m+[m[32m        printf("\n");[m[41m [m
[32m+[m[32m    }[m
[32m+[m[32m    delete [] data;[m
[32m+[m[32m}[m
[1mdiff --git a/code/filesys/filehdr.h b/code/filesys/filehdr.h[m
[1mnew file mode 100755[m
[1mindex 0000000..b538386[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/filehdr.h[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m// filehdr.h[m[41m [m
[32m+[m[32m//	Data structures for managing a disk file header.[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m//	A file header describes where on disk to find the data in a file,[m
[32m+[m[32m//	along with other information about the file (for instance, its[m
[32m+[m[32m//	length, owner, etc.)[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#ifndef FILEHDR_H[m
[32m+[m[32m#define FILEHDR_H[m
[32m+[m
[32m+[m[32m#include "disk.h"[m
[32m+[m[32m#include "bitmap.h"[m
[32m+[m
[32m+[m[32m#define NumDirect 	((SectorSize - 2 * sizeof(int)) / sizeof(int))[m
[32m+[m[32m#define MaxFileSize 	(NumDirect * SectorSize)[m
[32m+[m
[32m+[m[32m// The following class defines the Nachos "file header" (in UNIX terms,[m[41m  [m
[32m+[m[32m// the "i-node"), describing where on disk to find all of the data in the file.[m
[32m+[m[32m// The file header is organized as a simple table of pointers to[m
[32m+[m[32m// data blocks.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m// The file header data structure can be stored in memory or on disk.[m
[32m+[m[32m// When it is on disk, it is stored in a single sector -- this means[m
[32m+[m[32m// that we assume the size of this data structure to be the same[m
[32m+[m[32m// as one disk sector.  Without indirect addressing, this[m
[32m+[m[32m// limits the maximum file length to just under 4K bytes.[m
[32m+[m[32m//[m
[32m+[m[32m// There is no constructor; rather the file header can be initialized[m
[32m+[m[32m// by allocating blocks for the file (if it is a new file), or by[m
[32m+[m[32m// reading it from disk.[m
[32m+[m
[32m+[m[32mclass FileHeader {[m
[32m+[m[32m  public:[m
[32m+[m[32m    bool Allocate(BitMap *bitMap, int fileSize);// Initialize a file header,[m[41m [m
[32m+[m						[32m//  including allocating space[m[41m [m
[32m+[m						[32m//  on disk for the file data[m
[32m+[m[32m    void Deallocate(BitMap *bitMap);  		// De-allocate this file's[m[41m [m
[32m+[m						[32m//  data blocks[m
[32m+[m
[32m+[m[32m    void FetchFrom(int sectorNumber); 	// Initialize file header from disk[m
[32m+[m[32m    void WriteBack(int sectorNumber); 	// Write modifications to file header[m
[32m+[m					[32m//  back to disk[m
[32m+[m
[32m+[m[32m    int ByteToSector(int offset);	// Convert a byte offset into the file[m
[32m+[m					[32m// to the disk sector containing[m
[32m+[m					[32m// the byte[m
[32m+[m
[32m+[m[32m    int FileLength();			// Return the length of the file[m[41m [m
[32m+[m					[32m// in bytes[m
[32m+[m
[32m+[m[32m    void Print();			// Print the contents of the file.[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    int numBytes;			// Number of bytes in the file[m
[32m+[m[32m    int numSectors;			// Number of data sectors in the file[m
[32m+[m[32m    int dataSectors[NumDirect];		// Disk sector numbers for each data[m[41m [m
[32m+[m					[32m// block in the file[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // FILEHDR_H[m
[1mdiff --git a/code/filesys/filehdr.o b/code/filesys/filehdr.o[m
[1mnew file mode 100644[m
[1mindex 0000000..a5ffc56[m
Binary files /dev/null and b/code/filesys/filehdr.o differ
[1mdiff --git a/code/filesys/filesys.cc b/code/filesys/filesys.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..2a35027[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/filesys.cc[m
[36m@@ -0,0 +1,341 @@[m
[32m+[m[32m// filesys.cc[m[41m [m
[32m+[m[32m//	Routines to manage the overall operation of the file system.[m
[32m+[m[32m//	Implements routines to map from textual file names to files.[m
[32m+[m[32m//[m
[32m+[m[32m//	Each file in the file system has:[m
[32m+[m[32m//	   A file header, stored in a sector on disk[m[41m [m
[32m+[m[32m//		(the size of the file header data structure is arranged[m
[32m+[m[32m//		to be precisely the size of 1 disk sector)[m
[32m+[m[32m//	   A number of data blocks[m
[32m+[m[32m//	   An entry in the file system directory[m
[32m+[m[32m//[m
[32m+[m[32m// 	The file system consists of several data structures:[m
[32m+[m[32m//	   A bitmap of free disk sectors (cf. bitmap.h)[m
[32m+[m[32m//	   A directory of file names and file headers[m
[32m+[m[32m//[m
[32m+[m[32m//      Both the bitmap and the directory are represented as normal[m
[32m+[m[32m//	files.  Their file headers are located in specific sectors[m
[32m+[m[32m//	(sector 0 and sector 1), so that the file system can find them[m[41m [m
[32m+[m[32m//	on bootup.[m
[32m+[m[32m//[m
[32m+[m[32m//	The file system assumes that the bitmap and directory files are[m
[32m+[m[32m//	kept "open" continuously while Nachos is running.[m
[32m+[m[32m//[m
[32m+[m[32m//	For those operations (such as Create, Remove) that modify the[m
[32m+[m[32m//	directory and/or bitmap, if the operation succeeds, the changes[m
[32m+[m[32m//	are written immediately back to disk (the two files are kept[m
[32m+[m[32m//	open during all this time).  If the operation fails, and we have[m
[32m+[m[32m//	modified part of the directory and/or bitmap, we simply discard[m
[32m+[m[32m//	the changed version, without writing it back to disk.[m
[32m+[m[32m//[m
[32m+[m[32m// 	Our implementation at this point has the following restrictions:[m
[32m+[m[32m//[m
[32m+[m[32m//	   there is no synchronization for concurrent accesses[m
[32m+[m[32m//	   files have a fixed size, set when the file is created[m
[32m+[m[32m//	   files cannot be bigger than about 3KB in size[m
[32m+[m[32m//	   there is no hierarchical directory structure, and only a limited[m
[32m+[m[32m//	     number of files can be added to the system[m
[32m+[m[32m//	   there is no attempt to make the system robust to failures[m
[32m+[m[32m//	    (if Nachos exits in the middle of an operation that modifies[m
[32m+[m[32m//	    the file system, it may corrupt the disk)[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#include "disk.h"[m
[32m+[m[32m#include "bitmap.h"[m
[32m+[m[32m#include "directory.h"[m
[32m+[m[32m#include "filehdr.h"[m
[32m+[m[32m#include "filesys.h"[m
[32m+[m
[32m+[m[32m// Sectors containing the file headers for the bitmap of free sectors,[m
[32m+[m[32m// and the directory of files.  These file headers are placed in well-known[m[41m [m
[32m+[m[32m// sectors, so that they can be located on boot-up.[m
[32m+[m[32m#define FreeMapSector 		0[m
[32m+[m[32m#define DirectorySector 	1[m
[32m+[m
[32m+[m[32m// Initial file sizes for the bitmap and directory; until the file system[m
[32m+[m[32m// supports extensible files, the directory size sets the maximum number[m[41m [m
[32m+[m[32m// of files that can be loaded onto the disk.[m
[32m+[m[32m#define FreeMapFileSize 	(NumSectors / BitsInByte)[m
[32m+[m[32m#define NumDirEntries 		10[m
[32m+[m[32m#define DirectoryFileSize 	(sizeof(DirectoryEntry) * NumDirEntries)[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::FileSystem[m
[32m+[m[32m// 	Initialize the file system.  If format = TRUE, the disk has[m
[32m+[m[32m//	nothing on it, and we need to initialize the disk to contain[m
[32m+[m[32m//	an empty directory, and a bitmap of free sectors (with almost but[m
[32m+[m[32m//	not all of the sectors marked as free).[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m//	If format = FALSE, we just have to open the files[m
[32m+[m[32m//	representing the bitmap and the directory.[m
[32m+[m[32m//[m
[32m+[m[32m//	"format" -- should we initialize the disk?[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mFileSystem::FileSystem(bool format)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    DEBUG('f', "Initializing the file system.\n");[m
[32m+[m[32m    if (format) {[m
[32m+[m[32m        BitMap *freeMap = new BitMap(NumSectors);[m
[32m+[m[32m        Directory *directory = new Directory(NumDirEntries);[m
[32m+[m	[32mFileHeader *mapHdr = new FileHeader;[m
[32m+[m	[32mFileHeader *dirHdr = new FileHeader;[m
[32m+[m
[32m+[m[32m        DEBUG('f', "Formatting the file system.\n");[m
[32m+[m
[32m+[m[32m    // First, allocate space for FileHeaders for the directory and bitmap[m
[32m+[m[32m    // (make sure no one else grabs these!)[m
[32m+[m	[32mfreeMap->Mark(FreeMapSector);[m[41m	    [m
[32m+[m	[32mfreeMap->Mark(DirectorySector);[m
[32m+[m
[32m+[m[32m    // Second, allocate space for the data blocks containing the contents[m
[32m+[m[32m    // of the directory and bitmap files.  There better be enough space![m
[32m+[m
[32m+[m	[32mASSERT(mapHdr->Allocate(freeMap, FreeMapFileSize));[m
[32m+[m	[32mASSERT(dirHdr->Allocate(freeMap, DirectoryFileSize));[m
[32m+[m
[32m+[m[32m    // Flush the bitmap and directory FileHeaders back to disk[m
[32m+[m[32m    // We need to do this before we can "Open" the file, since open[m
[32m+[m[32m    // reads the file header off of disk (and currently the disk has garbage[m
[32m+[m[32m    // on it!).[m
[32m+[m
[32m+[m[32m        DEBUG('f', "Writing headers back to disk.\n");[m
[32m+[m	[32mmapHdr->WriteBack(FreeMapSector);[m[41m    [m
[32m+[m	[32mdirHdr->WriteBack(DirectorySector);[m
[32m+[m
[32m+[m[32m    // OK to open the bitmap and directory files now[m
[32m+[m[32m    // The file system operations assume these two files are left open[m
[32m+[m[32m    // while Nachos is running.[m
[32m+[m
[32m+[m[32m        freeMapFile = new OpenFile(FreeMapSector);[m
[32m+[m[32m        directoryFile = new OpenFile(DirectorySector);[m
[32m+[m[41m     [m
[32m+[m[32m    // Once we have the files "open", we can write the initial version[m
[32m+[m[32m    // of each file back to disk.  The directory at this point is completely[m
[32m+[m[32m    // empty; but the bitmap has been changed to reflect the fact that[m
[32m+[m[32m    // sectors on the disk have been allocated for the file headers and[m
[32m+[m[32m    // to hold the file data for the directory and bitmap.[m
[32m+[m
[32m+[m[32m        DEBUG('f', "Writing bitmap and directory back to disk.\n");[m
[32m+[m	[32mfreeMap->WriteBack(freeMapFile);	 // flush changes to disk[m
[32m+[m	[32mdirectory->WriteBack(directoryFile);[m
[32m+[m
[32m+[m	[32mif (DebugIsEnabled('f')) {[m
[32m+[m	[32m    freeMap->Print();[m
[32m+[m	[32m    directory->Print();[m
[32m+[m
[32m+[m[32m        delete freeMap;[m[41m [m
[32m+[m	[32mdelete directory;[m[41m [m
[32m+[m	[32mdelete mapHdr;[m[41m [m
[32m+[m	[32mdelete dirHdr;[m
[32m+[m	[32m}[m
[32m+[m[32m    } else {[m
[32m+[m[32m    // if we are not formatting the disk, just open the files representing[m
[32m+[m[32m    // the bitmap and directory; these are left open while Nachos is running[m
[32m+[m[32m        freeMapFile = new OpenFile(FreeMapSector);[m
[32m+[m[32m        directoryFile = new OpenFile(DirectorySector);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::Create[m
[32m+[m[32m// 	Create a file in the Nachos file system (similar to UNIX create).[m
[32m+[m[32m//	Since we can't increase the size of files dynamically, we have[m
[32m+[m[32m//	to give Create the initial size of the file.[m
[32m+[m[32m//[m
[32m+[m[32m//	The steps to create a file are:[m
[32m+[m[32m//	  Make sure the file doesn't already exist[m
[32m+[m[32m//        Allocate a sector for the file header[m
[32m+[m[32m// 	  Allocate space on disk for the data blocks for the file[m
[32m+[m[32m//	  Add the name to the directory[m
[32m+[m[32m//	  Store the new file header on disk[m[41m [m
[32m+[m[32m//	  Flush the changes to the bitmap and the directory back to disk[m
[32m+[m[32m//[m
[32m+[m[32m//	Return TRUE if everything goes ok, otherwise, return FALSE.[m
[32m+[m[32m//[m
[32m+[m[32m// 	Create fails if:[m
[32m+[m[32m//   		file is already in directory[m
[32m+[m[32m//	 	no free space for file header[m
[32m+[m[32m//	 	no free entry for file in directory[m
[32m+[m[32m//	 	no free space for data blocks for the file[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m// 	Note that this implementation assumes there is no concurrent access[m
[32m+[m[32m//	to the file system![m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- name of file to be created[m
[32m+[m[32m//	"initialSize" -- size of file to be created[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mFileSystem::Create(char *name, int initialSize)[m
[32m+[m[32m{[m
[32m+[m[32m    Directory *directory;[m
[32m+[m[32m    BitMap *freeMap;[m
[32m+[m[32m    FileHeader *hdr;[m
[32m+[m[32m    int sector;[m
[32m+[m[32m    bool success;[m
[32m+[m
[32m+[m[32m    DEBUG('f', "Creating file %s, size %d\n", name, initialSize);[m
[32m+[m
[32m+[m[32m    directory = new Directory(NumDirEntries);[m
[32m+[m[32m    directory->FetchFrom(directoryFile);[m
[32m+[m
[32m+[m[32m    if (directory->Find(name) != -1)[m
[32m+[m[32m      success = FALSE;			// file is already in directory[m
[32m+[m[32m    else {[m[41m	[m
[32m+[m[32m        freeMap = new BitMap(NumSectors);[m
[32m+[m[32m        freeMap->FetchFrom(freeMapFile);[m
[32m+[m[32m        sector = freeMap->Find();	// find a sector to hold the file header[m
[32m+[m[41m    [m	[32mif (sector == -1)[m[41m 		[m
[32m+[m[32m            success = FALSE;		// no free block for file header[m[41m [m
[32m+[m[32m        else if (!directory->Add(name, sector))[m
[32m+[m[32m            success = FALSE;	// no space in directory[m
[32m+[m	[32melse {[m
[32m+[m[41m    [m	[32m    hdr = new FileHeader;[m
[32m+[m	[32m    if (!hdr->Allocate(freeMap, initialSize))[m
[32m+[m[41m            [m	[32msuccess = FALSE;	// no space on disk for data[m
[32m+[m	[32m    else {[m[41m	[m
[32m+[m	[41m    [m	[32msuccess = TRUE;[m
[32m+[m		[32m// everthing worked, flush all changes back to disk[m
[32m+[m[41m    [m	[41m    [m	[32mhdr->WriteBack(sector);[m[41m 		[m
[32m+[m[41m    [m	[41m    [m	[32mdirectory->WriteBack(directoryFile);[m
[32m+[m[41m    [m	[41m    [m	[32mfreeMap->WriteBack(freeMapFile);[m
[32m+[m	[32m    }[m
[32m+[m[32m            delete hdr;[m
[32m+[m	[32m}[m
[32m+[m[32m        delete freeMap;[m
[32m+[m[32m    }[m
[32m+[m[32m    delete directory;[m
[32m+[m[32m    return success;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::Open[m
[32m+[m[32m// 	Open a file for reading and writing.[m[41m  [m
[32m+[m[32m//	To open a file:[m
[32m+[m[32m//	  Find the location of the file's header, using the directory[m[41m [m
[32m+[m[32m//	  Bring the header into memory[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the text name of the file to be opened[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mOpenFile *[m
[32m+[m[32mFileSystem::Open(char *name)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    Directory *directory = new Directory(NumDirEntries);[m
[32m+[m[32m    OpenFile *openFile = NULL;[m
[32m+[m[32m    int sector;[m
[32m+[m
[32m+[m[32m    DEBUG('f', "Opening file %s\n", name);[m
[32m+[m[32m    directory->FetchFrom(directoryFile);[m
[32m+[m[32m    sector = directory->Find(name);[m[41m [m
[32m+[m[32m    if (sector >= 0)[m[41m 		[m
[32m+[m	[32mopenFile = new OpenFile(sector);	// name was found in directory[m[41m [m
[32m+[m[32m    delete directory;[m
[32m+[m[32m    return openFile;				// return NULL if not found[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::Remove[m
[32m+[m[32m// 	Delete a file from the file system.  This requires:[m
[32m+[m[32m//	    Remove it from the directory[m
[32m+[m[32m//	    Delete the space for its header[m
[32m+[m[32m//	    Delete the space for its data blocks[m
[32m+[m[32m//	    Write changes to directory, bitmap back to disk[m
[32m+[m[32m//[m
[32m+[m[32m//	Return TRUE if the file was deleted, FALSE if the file wasn't[m
[32m+[m[32m//	in the file system.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- the text name of the file to be removed[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mbool[m
[32m+[m[32mFileSystem::Remove(char *name)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    Directory *directory;[m
[32m+[m[32m    BitMap *freeMap;[m
[32m+[m[32m    FileHeader *fileHdr;[m
[32m+[m[32m    int sector;[m
[32m+[m[41m    [m
[32m+[m[32m    directory = new Directory(NumDirEntries);[m
[32m+[m[32m    directory->FetchFrom(directoryFile);[m
[32m+[m[32m    sector = directory->Find(name);[m
[32m+[m[32m    if (sector == -1) {[m
[32m+[m[32m       delete directory;[m
[32m+[m[32m       return FALSE;			 // file not found[m[41m [m
[32m+[m[32m    }[m
[32m+[m[32m    fileHdr = new FileHeader;[m
[32m+[m[32m    fileHdr->FetchFrom(sector);[m
[32m+[m
[32m+[m[32m    freeMap = new BitMap(NumSectors);[m
[32m+[m[32m    freeMap->FetchFrom(freeMapFile);[m
[32m+[m
[32m+[m[32m    fileHdr->Deallocate(freeMap);  		// remove data blocks[m
[32m+[m[32m    freeMap->Clear(sector);			// remove header block[m
[32m+[m[32m    directory->Remove(name);[m
[32m+[m
[32m+[m[32m    freeMap->WriteBack(freeMapFile);		// flush to disk[m
[32m+[m[32m    directory->WriteBack(directoryFile);        // flush to disk[m
[32m+[m[32m    delete fileHdr;[m
[32m+[m[32m    delete directory;[m
[32m+[m[32m    delete freeMap;[m
[32m+[m[32m    return TRUE;[m
[32m+[m[32m}[m[41m [m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::List[m
[32m+[m[32m// 	List all the files in the file system directory.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mFileSystem::List()[m
[32m+[m[32m{[m
[32m+[m[32m    Directory *directory = new Directory(NumDirEntries);[m
[32m+[m
[32m+[m[32m    directory->FetchFrom(directoryFile);[m
[32m+[m[32m    directory->List();[m
[32m+[m[32m    delete directory;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// FileSystem::Print[m
[32m+[m[32m// 	Print everything about the file system:[m
[32m+[m[32m//	  the contents of the bitmap[m
[32m+[m[32m//	  the contents of the directory[m
[32m+[m[32m//	  for each file in the directory,[m
[32m+[m[32m//	      the contents of the file header[m
[32m+[m[32m//	      the data in the file[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mFileSystem::Print()[m
[32m+[m[32m{[m
[32m+[m[32m    FileHeader *bitHdr = new FileHeader;[m
[32m+[m[32m    FileHeader *dirHdr = new FileHeader;[m
[32m+[m[32m    BitMap *freeMap = new BitMap(NumSectors);[m
[32m+[m[32m    Directory *directory = new Directory(NumDirEntries);[m
[32m+[m
[32m+[m[32m    printf("Bit map file header:\n");[m
[32m+[m[32m    bitHdr->FetchFrom(FreeMapSector);[m
[32m+[m[32m    bitHdr->Print();[m
[32m+[m
[32m+[m[32m    printf("Directory file header:\n");[m
[32m+[m[32m    dirHdr->FetchFrom(DirectorySector);[m
[32m+[m[32m    dirHdr->Print();[m
[32m+[m
[32m+[m[32m    freeMap->FetchFrom(freeMapFile);[m
[32m+[m[32m    freeMap->Print();[m
[32m+[m
[32m+[m[32m    directory->FetchFrom(directoryFile);[m
[32m+[m[32m    directory->Print();[m
[32m+[m
[32m+[m[32m    delete bitHdr;[m
[32m+[m[32m    delete dirHdr;[m
[32m+[m[32m    delete freeMap;[m
[32m+[m[32m    delete directory;[m
[32m+[m[32m}[m[41m [m
[1mdiff --git a/code/filesys/filesys.h b/code/filesys/filesys.h[m
[1mnew file mode 100755[m
[1mindex 0000000..f3f11f8[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/filesys.h[m
[36m@@ -0,0 +1,97 @@[m
[32m+[m[32m// filesys.h[m[41m [m
[32m+[m[32m//	Data structures to represent the Nachos file system.[m
[32m+[m[32m//[m
[32m+[m[32m//	A file system is a set of files stored on disk, organized[m
[32m+[m[32m//	into directories.  Operations on the file system have to[m
[32m+[m[32m//	do with "naming" -- creating, opening, and deleting files,[m
[32m+[m[32m//	given a textual file name.  Operations on an individual[m
[32m+[m[32m//	"open" file (read, write, close) are to be found in the OpenFile[m
[32m+[m[32m//	class (openfile.h).[m
[32m+[m[32m//[m
[32m+[m[32m//	We define two separate implementations of the file system.[m[41m [m
[32m+[m[32m//	The "STUB" version just re-defines the Nachos file system[m[41m [m
[32m+[m[32m//	operations as operations on the native UNIX file system on the machine[m
[32m+[m[32m//	running the Nachos simulation.  This is provided in case the[m
[32m+[m[32m//	multiprogramming and virtual memory assignments (which make use[m
[32m+[m[32m//	of the file system) are done before the file system assignment.[m
[32m+[m[32m//[m
[32m+[m[32m//	The other version is a "real" file system, built on top of[m[41m [m
[32m+[m[32m//	a disk simulator.  The disk is simulated using the native UNIX[m[41m [m
[32m+[m[32m//	file system (in a file named "DISK").[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	In the "real" implementation, there are two key data structures used[m[41m [m
[32m+[m[32m//	in the file system.  There is a single "root" directory, listing[m
[32m+[m[32m//	all of the files in the file system; unlike UNIX, the baseline[m
[32m+[m[32m//	system does not provide a hierarchical directory structure.[m[41m  [m
[32m+[m[32m//	In addition, there is a bitmap for allocating[m
[32m+[m[32m//	disk sectors.  Both the root directory and the bitmap are themselves[m
[32m+[m[32m//	stored as files in the Nachos file system -- this causes an interesting[m
[32m+[m[32m//	bootstrap problem when the simulated disk is initialized.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef FS_H[m
[32m+[m[32m#define FS_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "openfile.h"[m
[32m+[m
[32m+[m[32m#ifdef FILESYS_STUB 		// Temporarily implement file system calls as[m[41m [m
[32m+[m				[32m// calls to UNIX, until the real file system[m
[32m+[m				[32m// implementation is available[m
[32m+[m[32mclass FileSystem {[m
[32m+[m[32m  public:[m
[32m+[m[32m    FileSystem(bool format) {}[m
[32m+[m
[32m+[m[32m    bool Create(char *name, int initialSize) {[m[41m [m
[32m+[m	[32mint fileDescriptor = OpenForWrite(name);[m
[32m+[m
[32m+[m	[32mif (fileDescriptor == -1) return FALSE;[m
[32m+[m	[32mClose(fileDescriptor);[m[41m [m
[32m+[m	[32mreturn TRUE;[m[41m [m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m    OpenFile* Open(char *name) {[m
[32m+[m	[32m  int fileDescriptor = OpenForReadWrite(name, FALSE);[m
[32m+[m
[32m+[m	[32m  if (fileDescriptor == -1) return NULL;[m
[32m+[m	[32m  return new OpenFile(fileDescriptor);[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m    bool Remove(char *name) { return Unlink(name) == 0; }[m
[32m+[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#else // FILESYS[m
[32m+[m[32mclass FileSystem {[m
[32m+[m[32m  public:[m
[32m+[m[32m    FileSystem(bool format);		// Initialize the file system.[m
[32m+[m					[32m// Must be called *after* "synchDisk"[m[41m [m
[32m+[m					[32m// has been initialized.[m
[32m+[m[41m    [m					[32m// If "format", there is nothing on[m
[32m+[m					[32m// the disk, so initialize the directory[m
[32m+[m[41m    [m					[32m// and the bitmap of free blocks.[m
[32m+[m
[32m+[m[32m    bool Create(char *name, int initialSize);[m[41m  	[m
[32m+[m					[32m// Create a file (UNIX creat)[m
[32m+[m
[32m+[m[32m    OpenFile* Open(char *name); 	// Open a file (UNIX open)[m
[32m+[m
[32m+[m[32m    bool Remove(char *name);  		// Delete a file (UNIX unlink)[m
[32m+[m
[32m+[m[32m    void List();			// List all the files in the file system[m
[32m+[m
[32m+[m[32m    void Print();			// List all the files and their contents[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m   OpenFile* freeMapFile;		// Bit map of free disk blocks,[m
[32m+[m					[32m// represented as a file[m
[32m+[m[32m   OpenFile* directoryFile;		// "Root" directory -- list of[m[41m [m
[32m+[m					[32m// file names, represented as a file[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // FILESYS[m
[32m+[m
[32m+[m[32m#endif // FS_H[m
[1mdiff --git a/code/filesys/filesys.o b/code/filesys/filesys.o[m
[1mnew file mode 100644[m
[1mindex 0000000..8f12288[m
Binary files /dev/null and b/code/filesys/filesys.o differ
[1mdiff --git a/code/filesys/fstest.cc b/code/filesys/fstest.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..bfa7857[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/fstest.cc[m
[36m@@ -0,0 +1,185 @@[m
[32m+[m[32m// fstest.cc[m[41m [m
[32m+[m[32m//	Simple test routines for the file system.[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m//	We implement:[m
[32m+[m[32m//	   Copy -- copy a file from UNIX to Nachos[m
[32m+[m[32m//	   Print -- cat the contents of a Nachos file[m[41m [m
[32m+[m[32m//	   Perftest -- a stress test for the Nachos file system[m
[32m+[m[32m//		read and write a really large file in tiny chunks[m
[32m+[m[32m//		(won't work on baseline system!)[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#include "utility.h"[m
[32m+[m[32m#include "filesys.h"[m
[32m+[m[32m#include "system.h"[m
[32m+[m[32m#include "thread.h"[m
[32m+[m[32m#include "disk.h"[m
[32m+[m[32m#include "stats.h"[m
[32m+[m
[32m+[m[32m#define TransferSize 	10 	// make it small, just to be difficult[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Copy[m
[32m+[m[32m// 	Copy the contents of the UNIX file "from" to the Nachos file "to"[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mCopy(char *from, char *to)[m
[32m+[m[32m{[m
[32m+[m[32m    FILE *fp;[m
[32m+[m[32m    OpenFile* openFile;[m
[32m+[m[32m    int amountRead, fileLength;[m
[32m+[m[32m    char *buffer;[m
[32m+[m
[32m+[m[32m// Open UNIX file[m
[32m+[m[32m    if ((fp = fopen(from, "r")) == NULL) {[m[41m	 [m
[32m+[m	[32mprintf("Copy: couldn't open input file %s\n", from);[m
[32m+[m	[32mreturn;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m// Figure out length of UNIX file[m
[32m+[m[32m    fseek(fp, 0, 2);[m[41m		[m
[32m+[m[32m    fileLength = ftell(fp);[m
[32m+[m[32m    fseek(fp, 0, 0);[m
[32m+[m
[32m+[m[32m// Create a Nachos file of the same length[m
[32m+[m[32m    DEBUG('f', "Copying file %s, size %d, to file %s\n", from, fileLength, to);[m
[32m+[m[32m    if (!fileSystem->Create(to, fileLength)) {	 // Create Nachos file[m
[32m+[m	[32mprintf("Copy: couldn't create output file %s\n", to);[m
[32m+[m	[32mfclose(fp);[m
[32m+[m	[32mreturn;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    openFile = fileSystem->Open(to);[m
[32m+[m[32m    ASSERT(openFile != NULL);[m
[32m+[m[41m    [m
[32m+[m[32m// Copy the data in TransferSize chunks[m
[32m+[m[32m    buffer = new char[TransferSize];[m
[32m+[m[32m    while ((amountRead = fread(buffer, sizeof(char), TransferSize, fp)) > 0)[m
[32m+[m	[32mopenFile->Write(buffer, amountRead);[m[41m	[m
[32m+[m[32m    delete [] buffer;[m
[32m+[m
[32m+[m[32m// Close the UNIX and the Nachos files[m
[32m+[m[32m    delete openFile;[m
[32m+[m[32m    fclose(fp);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Print[m
[32m+[m[32m// 	Print the contents of the Nachos file "name".[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mPrint(char *name)[m
[32m+[m[32m{[m
[32m+[m[32m    OpenFile *openFile;[m[41m    [m
[32m+[m[32m    int i, amountRead;[m
[32m+[m[32m    char *buffer;[m
[32m+[m
[32m+[m[32m    if ((openFile = fileSystem->Open(name)) == NULL) {[m
[32m+[m	[32mprintf("Print: unable to open file %s\n", name);[m
[32m+[m	[32mreturn;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    buffer = new char[TransferSize];[m
[32m+[m[32m    while ((amountRead = openFile->Read(buffer, TransferSize)) > 0)[m
[32m+[m	[32mfor (i = 0; i < amountRead; i++)[m
[32m+[m	[32m    printf("%c", buffer[i]);[m
[32m+[m[32m    delete [] buffer;[m
[32m+[m
[32m+[m[32m    delete openFile;		// close the Nachos file[m
[32m+[m[32m    return;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// PerformanceTest[m
[32m+[m[32m// 	Stress the Nachos file system by creating a large file, writing[m
[32m+[m[32m//	it out a bit at a time, reading it back a bit at a time, and then[m
[32m+[m[32m//	deleting the file.[m
[32m+[m[32m//[m
[32m+[m[32m//	Implemented as three separate routines:[m
[32m+[m[32m//	  FileWrite -- write the file[m
[32m+[m[32m//	  FileRead -- read the file[m
[32m+[m[32m//	  PerformanceTest -- overall control, and print out performance #'s[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m#define FileName 	"TestFile"[m
[32m+[m[32m#define Contents 	"1234567890"[m
[32m+[m[32m#define ContentSize 	strlen(Contents)[m
[32m+[m[32m#define FileSize 	((int)(ContentSize * 5000))[m
[32m+[m
[32m+[m[32mstatic void[m[41m [m
[32m+[m[32mFileWrite()[m
[32m+[m[32m{[m
[32m+[m[32m    OpenFile *openFile;[m[41m    [m
[32m+[m[32m    int i, numBytes;[m
[32m+[m
[32m+[m[32m    printf("Sequential write of %d byte file, in %d byte chunks\n",[m[41m [m
[32m+[m	[32mFileSize, ContentSize);[m
[32m+[m[32m    if (!fileSystem->Create(FileName, 0)) {[m
[32m+[m[32m      printf("Perf test: can't create %s\n", FileName);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    openFile = fileSystem->Open(FileName);[m
[32m+[m[32m    if (openFile == NULL) {[m
[32m+[m	[32mprintf("Perf test: unable to open %s\n", FileName);[m
[32m+[m	[32mreturn;[m
[32m+[m[32m    }[m
[32m+[m[32m    for (i = 0; i < FileSize; i += ContentSize) {[m
[32m+[m[32m        numBytes = openFile->Write(Contents, ContentSize);[m
[32m+[m	[32mif (numBytes < 10) {[m
[32m+[m	[32m    printf("Perf test: unable to write %s\n", FileName);[m
[32m+[m	[32m    delete openFile;[m
[32m+[m	[32m    return;[m
[32m+[m	[32m}[m
[32m+[m[32m    }[m
[32m+[m[32m    delete openFile;	// close file[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m[41m [m
[32m+[m[32mFileRead()[m
[32m+[m[32m{[m
[32m+[m[32m    OpenFile *openFile;[m[41m    [m
[32m+[m[32m    char *buffer = new char[ContentSize];[m
[32m+[m[32m    int i, numBytes;[m
[32m+[m
[32m+[m[32m    printf("Sequential read of %d byte file, in %d byte chunks\n",[m[41m [m
[32m+[m	[32mFileSize, ContentSize);[m
[32m+[m
[32m+[m[32m    if ((openFile = fileSystem->Open(FileName)) == NULL) {[m
[32m+[m	[32mprintf("Perf test: unable to open file %s\n", FileName);[m
[32m+[m	[32mdelete [] buffer;[m
[32m+[m	[32mreturn;[m
[32m+[m[32m    }[m
[32m+[m[32m    for (i = 0; i < FileSize; i += ContentSize) {[m
[32m+[m[32m        numBytes = openFile->Read(buffer, ContentSize);[m
[32m+[m	[32mif ((numBytes < 10) || strncmp(buffer, Contents, ContentSize)) {[m
[32m+[m	[32m    printf("Perf test: unable to read %s\n", FileName);[m
[32m+[m	[32m    delete openFile;[m
[32m+[m	[32m    delete [] buffer;[m
[32m+[m	[32m    return;[m
[32m+[m	[32m}[m
[32m+[m[32m    }[m
[32m+[m[32m    delete [] buffer;[m
[32m+[m[32m    delete openFile;	// close file[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mPerformanceTest()[m
[32m+[m[32m{[m
[32m+[m[32m    printf("Starting file system performance test:\n");[m
[32m+[m[32m    stats->Print();[m
[32m+[m[32m    FileWrite();[m
[32m+[m[32m    FileRead();[m
[32m+[m[32m    if (!fileSystem->Remove(FileName)) {[m
[32m+[m[32m      printf("Perf test: unable to remove %s\n", FileName);[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m[32m    stats->Print();[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/code/filesys/fstest.o b/code/filesys/fstest.o[m
[1mnew file mode 100644[m
[1mindex 0000000..18cbe6f[m
Binary files /dev/null and b/code/filesys/fstest.o differ
[1mdiff --git a/code/filesys/interrupt.o b/code/filesys/interrupt.o[m
[1mnew file mode 100644[m
[1mindex 0000000..4ba7ea0[m
Binary files /dev/null and b/code/filesys/interrupt.o differ
[1mdiff --git a/code/filesys/list.o b/code/filesys/list.o[m
[1mnew file mode 100644[m
[1mindex 0000000..5a2d3a8[m
Binary files /dev/null and b/code/filesys/list.o differ
[1mdiff --git a/code/filesys/machine.o b/code/filesys/machine.o[m
[1mnew file mode 100644[m
[1mindex 0000000..2008b0b[m
Binary files /dev/null and b/code/filesys/machine.o differ
[1mdiff --git a/code/filesys/main.o b/code/filesys/main.o[m
[1mnew file mode 100644[m
[1mindex 0000000..7dac312[m
Binary files /dev/null and b/code/filesys/main.o differ
[1mdiff --git a/code/filesys/mipssim.o b/code/filesys/mipssim.o[m
[1mnew file mode 100644[m
[1mindex 0000000..cd95a4c[m
Binary files /dev/null and b/code/filesys/mipssim.o differ
[1mdiff --git a/code/filesys/nachos b/code/filesys/nachos[m
[1mnew file mode 100755[m
[1mindex 0000000..a745f70[m
Binary files /dev/null and b/code/filesys/nachos differ
[1mdiff --git a/code/filesys/openfile.cc b/code/filesys/openfile.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..e11f155[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/openfile.cc[m
[36m@@ -0,0 +1,197 @@[m
[32m+[m[32m// openfile.cc[m[41m [m
[32m+[m[32m//	Routines to manage an open Nachos file.  As in UNIX, a[m
[32m+[m[32m//	file must be open before we can read or write to it.[m
[32m+[m[32m//	Once we're all done, we can close it (in Nachos, by deleting[m
[32m+[m[32m//	the OpenFile data structure).[m
[32m+[m[32m//[m
[32m+[m[32m//	Also as in UNIX, for convenience, we keep the file header in[m
[32m+[m[32m//	memory while the file is open.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "filehdr.h"[m
[32m+[m[32m#include "openfile.h"[m
[32m+[m[32m#include "system.h"[m
[32m+[m[32m#ifdef HOST_SPARC[m
[32m+[m[32m#include <strings.h>[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::OpenFile[m
[32m+[m[32m// 	Open a Nachos file for reading and writing.  Bring the file header[m
[32m+[m[32m//	into memory while the file is open.[m
[32m+[m[32m//[m
[32m+[m[32m//	"sector" -- the location on disk of the file header for this file[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mOpenFile::OpenFile(int sector)[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    hdr = new FileHeader;[m
[32m+[m[32m    hdr->FetchFrom(sector);[m
[32m+[m[32m    seekPosition = 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::~OpenFile[m
[32m+[m[32m// 	Close a Nachos file, de-allocating any in-memory data structures.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mOpenFile::~OpenFile()[m
[32m+[m[32m{[m
[32m+[m[32m    delete hdr;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::Seek[m
[32m+[m[32m// 	Change the current location within the open file -- the point at[m
[32m+[m[32m//	which the next Read or Write will start from.[m
[32m+[m[32m//[m
[32m+[m[32m//	"position" -- the location within the file for the next Read/Write[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mOpenFile::Seek(int position)[m
[32m+[m[32m{[m
[32m+[m[32m    seekPosition = position;[m
[32m+[m[32m}[m[41m	[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::Read/Write[m
[32m+[m[32m// 	Read/write a portion of a file, starting from seekPosition.[m
[32m+[m[32m//	Return the number of bytes actually written or read, and as a[m
[32m+[m[32m//	side effect, increment the current position within the file.[m
[32m+[m[32m//[m
[32m+[m[32m//	Implemented using the more primitive ReadAt/WriteAt.[m
[32m+[m[32m//[m
[32m+[m[32m//	"into" -- the buffer to contain the data to be read from disk[m[41m [m
[32m+[m[32m//	"from" -- the buffer containing the data to be written to disk[m[41m [m
[32m+[m[32m//	"numBytes" -- the number of bytes to transfer[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mOpenFile::Read(char *into, int numBytes)[m
[32m+[m[32m{[m
[32m+[m[32m   int result = ReadAt(into, numBytes, seekPosition);[m
[32m+[m[32m   seekPosition += result;[m
[32m+[m[32m   return result;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mOpenFile::Write(char *into, int numBytes)[m
[32m+[m[32m{[m
[32m+[m[32m   int result = WriteAt(into, numBytes, seekPosition);[m
[32m+[m[32m   seekPosition += result;[m
[32m+[m[32m   return result;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::ReadAt/WriteAt[m
[32m+[m[32m// 	Read/write a portion of a file, starting at "position".[m
[32m+[m[32m//	Return the number of bytes actually written or read, but has[m
[32m+[m[32m//	no side effects (except that Write modifies the file, of course).[m
[32m+[m[32m//[m
[32m+[m[32m//	There is no guarantee the request starts or ends on an even disk sector[m
[32m+[m[32m//	boundary; however the disk only knows how to read/write a whole disk[m
[32m+[m[32m//	sector at a time.  Thus:[m
[32m+[m[32m//[m
[32m+[m[32m//	For ReadAt:[m
[32m+[m[32m//	   We read in all of the full or partial sectors that are part of the[m
[32m+[m[32m//	   request, but we only copy the part we are interested in.[m
[32m+[m[32m//	For WriteAt:[m
[32m+[m[32m//	   We must first read in any sectors that will be partially written,[m
[32m+[m[32m//	   so that we don't overwrite the unmodified portion.  We then copy[m
[32m+[m[32m//	   in the data that will be modified, and write back all the full[m
[32m+[m[32m//	   or partial sectors that are part of the request.[m
[32m+[m[32m//[m
[32m+[m[32m//	"into" -- the buffer to contain the data to be read from disk[m[41m [m
[32m+[m[32m//	"from" -- the buffer containing the data to be written to disk[m[41m [m
[32m+[m[32m//	"numBytes" -- the number of bytes to transfer[m
[32m+[m[32m//	"position" -- the offset within the file of the first byte to be[m
[32m+[m[32m//			read/written[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mOpenFile::ReadAt(char *into, int numBytes, int position)[m
[32m+[m[32m{[m
[32m+[m[32m    int fileLength = hdr->FileLength();[m
[32m+[m[32m    int i, firstSector, lastSector, numSectors;[m
[32m+[m[32m    char *buf;[m
[32m+[m
[32m+[m[32m    if ((numBytes <= 0) || (position >= fileLength))[m
[32m+[m[41m    [m	[32mreturn 0; 				// check request[m
[32m+[m[32m    if ((position + numBytes) > fileLength)[m[41m		[m
[32m+[m	[32mnumBytes = fileLength - position;[m
[32m+[m[32m    DEBUG('f', "Reading %d bytes at %d, from file of length %d.\n",[m[41m 	[m
[32m+[m			[32mnumBytes, position, fileLength);[m
[32m+[m
[32m+[m[32m    firstSector = divRoundDown(position, SectorSize);[m
[32m+[m[32m    lastSector = divRoundDown(position + numBytes - 1, SectorSize);[m
[32m+[m[32m    numSectors = 1 + lastSector - firstSector;[m
[32m+[m
[32m+[m[32m    // read in all the full and partial sectors that we need[m
[32m+[m[32m    buf = new char[numSectors * SectorSize];[m
[32m+[m[32m    for (i = firstSector; i <= lastSector; i++)[m[41m	[m
[32m+[m[32m        synchDisk->ReadSector(hdr->ByteToSector(i * SectorSize),[m[41m [m
[32m+[m					[32m&buf[(i - firstSector) * SectorSize]);[m
[32m+[m
[32m+[m[32m    // copy the part we want[m
[32m+[m[32m    bcopy(&buf[position - (firstSector * SectorSize)], into, numBytes);[m
[32m+[m[32m    delete [] buf;[m
[32m+[m[32m    return numBytes;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mOpenFile::WriteAt(char *from, int numBytes, int position)[m
[32m+[m[32m{[m
[32m+[m[32m    int fileLength = hdr->FileLength();[m
[32m+[m[32m    int i, firstSector, lastSector, numSectors;[m
[32m+[m[32m    bool firstAligned, lastAligned;[m
[32m+[m[32m    char *buf;[m
[32m+[m
[32m+[m[32m    if ((numBytes <= 0) || (position >= fileLength))[m
[32m+[m	[32mreturn 0;				// check request[m
[32m+[m[32m    if ((position + numBytes) > fileLength)[m
[32m+[m	[32mnumBytes = fileLength - position;[m
[32m+[m[32m    DEBUG('f', "Writing %d bytes at %d, from file of length %d.\n",[m[41m 	[m
[32m+[m			[32mnumBytes, position, fileLength);[m
[32m+[m
[32m+[m[32m    firstSector = divRoundDown(position, SectorSize);[m
[32m+[m[32m    lastSector = divRoundDown(position + numBytes - 1, SectorSize);[m
[32m+[m[32m    numSectors = 1 + lastSector - firstSector;[m
[32m+[m
[32m+[m[32m    buf = new char[numSectors * SectorSize];[m
[32m+[m
[32m+[m[32m    firstAligned = (position == (firstSector * SectorSize));[m
[32m+[m[32m    lastAligned = ((position + numBytes) == ((lastSector + 1) * SectorSize));[m
[32m+[m
[32m+[m[32m// read in first and last sector, if they are to be partially modified[m
[32m+[m[32m    if (!firstAligned)[m
[32m+[m[32m        ReadAt(buf, SectorSize, firstSector * SectorSize);[m[41m	[m
[32m+[m[32m    if (!lastAligned && ((firstSector != lastSector) || firstAligned))[m
[32m+[m[32m        ReadAt(&buf[(lastSector - firstSector) * SectorSize],[m[41m [m
[32m+[m				[32mSectorSize, lastSector * SectorSize);[m[41m	[m
[32m+[m
[32m+[m[32m// copy in the bytes we want to change[m[41m [m
[32m+[m[32m    bcopy(from, &buf[position - (firstSector * SectorSize)], numBytes);[m
[32m+[m
[32m+[m[32m// write modified sectors back[m
[32m+[m[32m    for (i = firstSector; i <= lastSector; i++)[m[41m	[m
[32m+[m[32m        synchDisk->WriteSector(hdr->ByteToSector(i * SectorSize),[m[41m [m
[32m+[m					[32m&buf[(i - firstSector) * SectorSize]);[m
[32m+[m[32m    delete [] buf;[m
[32m+[m[32m    return numBytes;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// OpenFile::Length[m
[32m+[m[32m// 	Return the number of bytes in the file.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mOpenFile::Length()[m[41m [m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    return hdr->FileLength();[m[41m [m
[32m+[m[32m}[m
[1mdiff --git a/code/filesys/openfile.h b/code/filesys/openfile.h[m
[1mnew file mode 100755[m
[1mindex 0000000..f88dd7e[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/openfile.h[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32m// openfile.h[m[41m [m
[32m+[m[32m//	Data structures for opening, closing, reading and writing to[m[41m [m
[32m+[m[32m//	individual files.  The operations supported are similar to[m
[32m+[m[32m//	the UNIX ones -- type 'man open' to the UNIX prompt.[m
[32m+[m[32m//[m
[32m+[m[32m//	There are two implementations.  One is a "STUB" that directly[m
[32m+[m[32m//	turns the file operations into the underlying UNIX operations.[m
[32m+[m[32m//	(cf. comment in filesys.h).[m
[32m+[m[32m//[m
[32m+[m[32m//	The other is the "real" implementation, that turns these[m
[32m+[m[32m//	operations into read and write disk sector requests.[m[41m [m
[32m+[m[32m//	In this baseline implementation of the file system, we don't[m[41m [m
[32m+[m[32m//	worry about concurrent accesses to the file system[m
[32m+[m[32m//	by different threads -- this is part of the assignment.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef OPENFILE_H[m
[32m+[m[32m#define OPENFILE_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "utility.h"[m
[32m+[m
[32m+[m[32m#ifdef FILESYS_STUB			// Temporarily implement calls to[m[41m [m
[32m+[m					[32m// Nachos file system as calls to UNIX![m
[32m+[m					[32m// See definitions listed under #else[m
[32m+[m[32mclass OpenFile {[m
[32m+[m[32m  public:[m
[32m+[m[32m    OpenFile(int f) { file = f; currentOffset = 0; }	// open the file[m
[32m+[m[32m    ~OpenFile() { Close(file); }			// close the file[m
[32m+[m
[32m+[m[32m    int ReadAt(char *into, int numBytes, int position) {[m[41m [m
[32m+[m[41m    [m		[32mLseek(file, position, 0);[m[41m [m
[32m+[m		[32mreturn ReadPartial(file, into, numBytes);[m[41m [m
[32m+[m		[32m}[m[41m	[m
[32m+[m[32m    int WriteAt(char *from, int numBytes, int position) {[m[41m [m
[32m+[m[41m    [m		[32mLseek(file, position, 0);[m[41m [m
[32m+[m		[32mWriteFile(file, from, numBytes);[m[41m [m
[32m+[m		[32mreturn numBytes;[m
[32m+[m		[32m}[m[41m	[m
[32m+[m[32m    int Read(char *into, int numBytes) {[m
[32m+[m		[32mint numRead = ReadAt(into, numBytes, currentOffset);[m[41m [m
[32m+[m		[32mcurrentOffset += numRead;[m
[32m+[m		[32mreturn numRead;[m
[32m+[m[41m    [m		[32m}[m
[32m+[m[32m    int Write(char *from, int numBytes) {[m
[32m+[m		[32mint numWritten = WriteAt(from, numBytes, currentOffset);[m[41m [m
[32m+[m		[32mcurrentOffset += numWritten;[m
[32m+[m		[32mreturn numWritten;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m[32m    int Length() { Lseek(file, 0, 2); return Tell(file); }[m
[32m+[m[41m    [m
[32m+[m[32m  private:[m
[32m+[m[32m    int file;[m
[32m+[m[32m    int currentOffset;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#else // FILESYS[m
[32m+[m[32mclass FileHeader;[m
[32m+[m
[32m+[m[32mclass OpenFile {[m
[32m+[m[32m  public:[m
[32m+[m[32m    OpenFile(int sector);		// Open a file whose header is located[m
[32m+[m					[32m// at "sector" on the disk[m
[32m+[m[32m    ~OpenFile();			// Close the file[m
[32m+[m
[32m+[m[32m    void Seek(int position); 		// Set the position from which to[m[41m [m
[32m+[m					[32m// start reading/writing -- UNIX lseek[m
[32m+[m
[32m+[m[32m    int Read(char *into, int numBytes); // Read/write bytes from the file,[m
[32m+[m					[32m// starting at the implicit position.[m
[32m+[m					[32m// Return the # actually read/written,[m
[32m+[m					[32m// and increment position in file.[m
[32m+[m[32m    int Write(char *from, int numBytes);[m
[32m+[m
[32m+[m[32m    int ReadAt(char *into, int numBytes, int position);[m
[32m+[m[41m    [m					[32m// Read/write bytes from the file,[m
[32m+[m					[32m// bypassing the implicit position.[m
[32m+[m[32m    int WriteAt(char *from, int numBytes, int position);[m
[32m+[m
[32m+[m[32m    int Length(); 			// Return the number of bytes in the[m
[32m+[m					[32m// file (this interface is simpler[m[41m [m
[32m+[m					[32m// than the UNIX idiom -- lseek to[m[41m [m
[32m+[m					[32m// end of file, tell, lseek back[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m  private:[m
[32m+[m[32m    FileHeader *hdr;			// Header for this file[m[41m [m
[32m+[m[32m    int seekPosition;			// Current position within the file[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // FILESYS[m
[32m+[m
[32m+[m[32m#endif // OPENFILE_H[m
[1mdiff --git a/code/filesys/openfile.o b/code/filesys/openfile.o[m
[1mnew file mode 100644[m
[1mindex 0000000..2638f65[m
Binary files /dev/null and b/code/filesys/openfile.o differ
[1mdiff --git a/code/filesys/progtest.o b/code/filesys/progtest.o[m
[1mnew file mode 100644[m
[1mindex 0000000..9865afd[m
Binary files /dev/null and b/code/filesys/progtest.o differ
[1mdiff --git a/code/filesys/scheduler.o b/code/filesys/scheduler.o[m
[1mnew file mode 100644[m
[1mindex 0000000..77ef460[m
Binary files /dev/null and b/code/filesys/scheduler.o differ
[1mdiff --git a/code/filesys/stats.o b/code/filesys/stats.o[m
[1mnew file mode 100644[m
[1mindex 0000000..fd9c199[m
Binary files /dev/null and b/code/filesys/stats.o differ
[1mdiff --git a/code/filesys/switch.o b/code/filesys/switch.o[m
[1mnew file mode 100644[m
[1mindex 0000000..c8c0e44[m
Binary files /dev/null and b/code/filesys/switch.o differ
[1mdiff --git a/code/filesys/swtch.s b/code/filesys/swtch.s[m
[1mnew file mode 100644[m
[1mindex 0000000..e28ca73[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/swtch.s[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m        .text[m
[32m+[m[32m        .align 2[m
[32m+[m[32m        .globl ThreadRoot[m
[32m+[m[32mThreadRoot:[m
[32m+[m[32m        pushl %ebp[m
[32m+[m[32m        movl %esp,%ebp[m
[32m+[m[32m        pushl %edx[m
[32m+[m[32m        call *%ecx[m
[32m+[m[32m        call *%esi[m
[32m+[m[32m        call *%edi[m
[32m+[m[32m        movl %ebp,%esp[m
[32m+[m[32m        popl %ebp[m
[32m+[m[32m        ret[m
[32m+[m[32m        .comm _eax_save,4[m
[32m+[m[32m        .globl SWITCH[m
[32m+[m[32mSWITCH:[m
[32m+[m[32m        movl %eax,_eax_save # save the value of eax[m
[32m+[m[32m        movl 4(%esp),%eax # move pointer to t1 into eax[m
[32m+[m[32m        movl %ebx,8(%eax) # save registers[m
[32m+[m[32m        movl %ecx,12(%eax)[m
[32m+[m[32m        movl %edx,16(%eax)[m
[32m+[m[32m        movl %esi,24(%eax)[m
[32m+[m[32m        movl %edi,28(%eax)[m
[32m+[m[32m        movl %ebp,20(%eax)[m
[32m+[m[32m        movl %esp,0(%eax) # save stack pointer[m
[32m+[m[32m        movl _eax_save,%ebx # get the saved value of eax[m
[32m+[m[32m        movl %ebx,4(%eax) # store it[m
[32m+[m[32m        movl 0(%esp),%ebx # get return address from stack into ebx[m
[32m+[m[32m        movl %ebx,32(%eax) # save it into the pc storage[m
[32m+[m[32m        movl 8(%esp),%eax # move pointer to t2 into eax[m
[32m+[m[32m        movl 4(%eax),%ebx # get new value for eax into ebx[m
[32m+[m[32m        movl %ebx,_eax_save # save it[m
[32m+[m[32m        movl 8(%eax),%ebx # retore old registers[m
[32m+[m[32m        movl 12(%eax),%ecx[m
[32m+[m[32m        movl 16(%eax),%edx[m
[32m+[m[32m        movl 24(%eax),%esi[m
[32m+[m[32m        movl 28(%eax),%edi[m
[32m+[m[32m        movl 20(%eax),%ebp[m
[32m+[m[32m        movl 0(%eax),%esp # restore stack pointer[m
[32m+[m[32m        movl 32(%eax),%eax # restore return address into eax[m
[32m+[m[32m        movl %eax,4(%esp) # copy over the ret address on the stack[m
[32m+[m[32m        movl _eax_save,%eax[m
[32m+[m[32m        ret[m
[1mdiff --git a/code/filesys/synch.o b/code/filesys/synch.o[m
[1mnew file mode 100644[m
[1mindex 0000000..922ced7[m
Binary files /dev/null and b/code/filesys/synch.o differ
[1mdiff --git a/code/filesys/synchdisk.cc b/code/filesys/synchdisk.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..eb9df10[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/synchdisk.cc[m
[36m@@ -0,0 +1,109 @@[m
[32m+[m[32m// synchdisk.cc[m[41m [m
[32m+[m[32m//	Routines to synchronously access the disk.  The physical disk[m[41m [m
[32m+[m[32m//	is an asynchronous device (disk requests return immediately, and[m
[32m+[m[32m//	an interrupt happens later on).  This is a layer on top of[m
[32m+[m[32m//	the disk providing a synchronous interface (requests wait until[m
[32m+[m[32m//	the request completes).[m
[32m+[m[32m//[m
[32m+[m[32m//	Use a semaphore to synchronize the interrupt handlers with the[m
[32m+[m[32m//	pending requests.  And, because the physical disk can only[m
[32m+[m[32m//	handle one operation at a time, use a lock to enforce mutual[m
[32m+[m[32m//	exclusion.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "synchdisk.h"[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// DiskRequestDone[m
[32m+[m[32m// 	Disk interrupt handler.  Need this to be a C routine, because[m[41m [m
[32m+[m[32m//	C++ can't handle pointers to member functions.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mDiskRequestDone (int arg)[m
[32m+[m[32m{[m
[32m+[m[32m    SynchDisk* disk = (SynchDisk *)arg;[m
[32m+[m
[32m+[m[32m    disk->RequestDone();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// SynchDisk::SynchDisk[m
[32m+[m[32m// 	Initialize the synchronous interface to the physical disk, in turn[m
[32m+[m[32m//	initializing the physical disk.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- UNIX file name to be used as storage for the disk data[m
[32m+[m[32m//	   (usually, "DISK")[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mSynchDisk::SynchDisk(char* name)[m
[32m+[m[32m{[m
[32m+[m[32m    semaphore = new Semaphore("synch disk", 0);[m
[32m+[m[32m    lock = new Lock("synch disk lock");[m
[32m+[m[32m    disk = new Disk(name, DiskRequestDone, (int) this);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// SynchDisk::~SynchDisk[m
[32m+[m[32m// 	De-allocate data structures needed for the synchronous disk[m
[32m+[m[32m//	abstraction.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mSynchDisk::~SynchDisk()[m
[32m+[m[32m{[m
[32m+[m[32m    delete disk;[m
[32m+[m[32m    delete lock;[m
[32m+[m[32m    delete semaphore;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// SynchDisk::ReadSector[m
[32m+[m[32m// 	Read the contents of a disk sector into a buffer.  Return only[m
[32m+[m[32m//	after the data has been read.[m
[32m+[m[32m//[m
[32m+[m[32m//	"sectorNumber" -- the disk sector to read[m
[32m+[m[32m//	"data" -- the buffer to hold the contents of the disk sector[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mSynchDisk::ReadSector(int sectorNumber, char* data)[m
[32m+[m[32m{[m
[32m+[m[32m    lock->Acquire();			// only one disk I/O at a time[m
[32m+[m[32m    disk->ReadRequest(sectorNumber, data);[m
[32m+[m[32m    semaphore->P();			// wait for interrupt[m
[32m+[m[32m    lock->Release();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// SynchDisk::WriteSector[m
[32m+[m[32m// 	Write the contents of a buffer into a disk sector.  Return only[m
[32m+[m[32m//	after the data has been written.[m
[32m+[m[32m//[m
[32m+[m[32m//	"sectorNumber" -- the disk sector to be written[m
[32m+[m[32m//	"data" -- the new contents of the disk sector[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mSynchDisk::WriteSector(int sectorNumber, char* data)[m
[32m+[m[32m{[m
[32m+[m[32m    lock->Acquire();			// only one disk I/O at a time[m
[32m+[m[32m    disk->WriteRequest(sectorNumber, data);[m
[32m+[m[32m    semaphore->P();			// wait for interrupt[m
[32m+[m[32m    lock->Release();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// SynchDisk::RequestDone[m
[32m+[m[32m// 	Disk interrupt handler.  Wake up any thread waiting for the disk[m
[32m+[m[32m//	request to finish.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mSynchDisk::RequestDone()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    semaphore->V();[m
[32m+[m[32m}[m
[1mdiff --git a/code/filesys/synchdisk.h b/code/filesys/synchdisk.h[m
[1mnew file mode 100755[m
[1mindex 0000000..7b41005[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/synchdisk.h[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32m// synchdisk.h[m[41m [m
[32m+[m[32m// 	Data structures to export a synchronous interface to the raw[m[41m [m
[32m+[m[32m//	disk device.[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m
[32m+[m[32m#ifndef SYNCHDISK_H[m
[32m+[m[32m#define SYNCHDISK_H[m
[32m+[m
[32m+[m[32m#include "disk.h"[m
[32m+[m[32m#include "synch.h"[m
[32m+[m
[32m+[m[32m// The following class defines a "synchronous" disk abstraction.[m
[32m+[m[32m// As with other I/O devices, the raw physical disk is an asynchronous device --[m
[32m+[m[32m// requests to read or write portions of the disk return immediately,[m
[32m+[m[32m// and an interrupt occurs later to signal that the operation completed.[m
[32m+[m[32m// (Also, the physical characteristics of the disk device assume that[m
[32m+[m[32m// only one operation can be requested at a time).[m
[32m+[m[32m//[m
[32m+[m[32m// This class provides the abstraction that for any individual thread[m
[32m+[m[32m// making a request, it waits around until the operation finishes before[m
[32m+[m[32m// returning.[m
[32m+[m[32mclass SynchDisk {[m
[32m+[m[32m  public:[m
[32m+[m[32m    SynchDisk(char* name);    		// Initialize a synchronous disk,[m
[32m+[m					[32m// by initializing the raw Disk.[m
[32m+[m[32m    ~SynchDisk();			// De-allocate the synch disk data[m
[32m+[m[41m    [m
[32m+[m[32m    void ReadSector(int sectorNumber, char* data);[m
[32m+[m[41m    [m					[32m// Read/write a disk sector, returning[m
[32m+[m[41m    [m					[32m// only once the data is actually read[m[41m [m
[32m+[m					[32m// or written.  These call[m
[32m+[m[41m    [m					[32m// Disk::ReadRequest/WriteRequest and[m
[32m+[m					[32m// then wait until the request is done.[m
[32m+[m[32m    void WriteSector(int sectorNumber, char* data);[m
[32m+[m[41m    [m
[32m+[m[32m    void RequestDone();			// Called by the disk device interrupt[m
[32m+[m					[32m// handler, to signal that the[m
[32m+[m					[32m// current disk operation is complete.[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    Disk *disk;		  		// Raw disk device[m
[32m+[m[32m    Semaphore *semaphore; 		// To synchronize requesting thread[m[41m [m
[32m+[m					[32m// with the interrupt handler[m
[32m+[m[32m    Lock *lock;		  		// Only one read/write request[m
[32m+[m					[32m// can be sent to the disk at a time[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // SYNCHDISK_H[m
[1mdiff --git a/code/filesys/synchdisk.o b/code/filesys/synchdisk.o[m
[1mnew file mode 100644[m
[1mindex 0000000..8ea875a[m
Binary files /dev/null and b/code/filesys/synchdisk.o differ
[1mdiff --git a/code/filesys/synchlist.o b/code/filesys/synchlist.o[m
[1mnew file mode 100644[m
[1mindex 0000000..f5a2f29[m
Binary files /dev/null and b/code/filesys/synchlist.o differ
[1mdiff --git a/code/filesys/sysdep.o b/code/filesys/sysdep.o[m
[1mnew file mode 100644[m
[1mindex 0000000..38f8599[m
Binary files /dev/null and b/code/filesys/sysdep.o differ
[1mdiff --git a/code/filesys/system.o b/code/filesys/system.o[m
[1mnew file mode 100644[m
[1mindex 0000000..4f441ab[m
Binary files /dev/null and b/code/filesys/system.o differ
[1mdiff --git a/code/filesys/test/big b/code/filesys/test/big[m
[1mnew file mode 100755[m
[1mindex 0000000..cc1377b[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/test/big[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[1mdiff --git a/code/filesys/test/medium b/code/filesys/test/medium[m
[1mnew file mode 100755[m
[1mindex 0000000..001f5e5[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/test/medium[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[32m+[m[32mThis is the spring of our discontent.[m
[1mdiff --git a/code/filesys/test/small b/code/filesys/test/small[m
[1mnew file mode 100755[m
[1mindex 0000000..c2e8118[m
[1m--- /dev/null[m
[1m+++ b/code/filesys/test/small[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mThis is the spring of our discontent.[m
[1mdiff --git a/code/filesys/thread.o b/code/filesys/thread.o[m
[1mnew file mode 100644[m
[1mindex 0000000..6aaf739[m
Binary files /dev/null and b/code/filesys/thread.o differ
[1mdiff --git a/code/filesys/threadtest.o b/code/filesys/threadtest.o[m
[1mnew file mode 100644[m
[1mindex 0000000..aa63560[m
Binary files /dev/null and b/code/filesys/threadtest.o differ
[1mdiff --git a/code/filesys/timer.o b/code/filesys/timer.o[m
[1mnew file mode 100644[m
[1mindex 0000000..34957c5[m
Binary files /dev/null and b/code/filesys/timer.o differ
[1mdiff --git a/code/filesys/translate.o b/code/filesys/translate.o[m
[1mnew file mode 100644[m
[1mindex 0000000..24a9247[m
Binary files /dev/null and b/code/filesys/translate.o differ
[1mdiff --git a/code/filesys/utility.o b/code/filesys/utility.o[m
[1mnew file mode 100644[m
[1mindex 0000000..0f25bc6[m
Binary files /dev/null and b/code/filesys/utility.o differ
[1mdiff --git a/code/machine/console.cc b/code/machine/console.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..aec04b8[m
[1m--- /dev/null[m
[1m+++ b/code/machine/console.cc[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32m// console.cc[m[41m [m
[32m+[m[32m//	Routines to simulate a serial port to a console device.[m
[32m+[m[32m//	A console has input (a keyboard) and output (a display).[m
[32m+[m[32m//	These are each simulated by operations on UNIX files.[m
[32m+[m[32m//	The simulated device is asynchronous,[m
[32m+[m[32m//	so we have to invoke the interrupt handler (after a simulated[m
[32m+[m[32m//	delay), to signal that a byte has arrived and/or that a written[m
[32m+[m[32m//	byte has departed.[m
[32m+[m[32m//[m
[32m+[m[32m//  DO NOT CHANGE -- part of the machine emulation[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "console.h"[m
[32m+[m[32m#include "system.h"[m
[32m+[m
[32m+[m[32m// Dummy functions because C++ is weird about pointers to member functions[m
[32m+[m[32mstatic void ConsoleReadPoll(int c)[m[41m [m
[32m+[m[32m{ Console *console = (Console *)c; console->CheckCharAvail(); }[m
[32m+[m[32mstatic void ConsoleWriteDone(int c)[m
[32m+[m[32m{ Console *console = (Console *)c; console->WriteDone(); }[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::Console[m
[32m+[m[32m// 	Initialize the simulation of a hardware console device.[m
[32m+[m[32m//[m
[32m+[m[32m//	"readFile" -- UNIX file simulating the keyboard (NULL -> use stdin)[m
[32m+[m[32m//	"writeFile" -- UNIX file simulating the display (NULL -> use stdout)[m
[32m+[m[32m// 	"readAvail" is the interrupt handler called when a character arrives[m
[32m+[m[32m//		from the keyboard[m
[32m+[m[32m// 	"writeDone" is the interrupt handler called when a character has[m
[32m+[m[32m//		been output, so that it is ok to request the next char be[m
[32m+[m[32m//		output[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mConsole::Console(char *readFile, char *writeFile, VoidFunctionPtr readAvail,[m[41m [m
[32m+[m		[32mVoidFunctionPtr writeDone, int callArg)[m
[32m+[m[32m{[m
[32m+[m[32m    if (readFile == NULL)[m
[32m+[m	[32mreadFileNo = 0;					// keyboard = stdin[m
[32m+[m[32m    else[m
[32m+[m[41m    [m	[32mreadFileNo = OpenForReadWrite(readFile, TRUE);	// should be read-only[m
[32m+[m[32m    if (writeFile == NULL)[m
[32m+[m	[32mwriteFileNo = 1;				// display = stdout[m
[32m+[m[32m    else[m
[32m+[m[41m    [m	[32mwriteFileNo = OpenForWrite(writeFile);[m
[32m+[m
[32m+[m[32m    // set up the stuff to emulate asynchronous interrupts[m
[32m+[m[32m    writeHandler = writeDone;[m
[32m+[m[32m    readHandler = readAvail;[m
[32m+[m[32m    handlerArg = callArg;[m
[32m+[m[32m    putBusy = FALSE;[m
[32m+[m[32m    incoming = EOF;[m
[32m+[m
[32m+[m[32m    // start polling for incoming packets[m
[32m+[m[32m    interrupt->Schedule(ConsoleReadPoll, (int)this, ConsoleTime, ConsoleReadInt);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::~Console[m
[32m+[m[32m// 	Clean up console emulation[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mConsole::~Console()[m
[32m+[m[32m{[m
[32m+[m[32m    if (readFileNo != 0)[m
[32m+[m	[32mClose(readFileNo);[m
[32m+[m[32m    if (writeFileNo != 1)[m
[32m+[m	[32mClose(writeFileNo);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::CheckCharAvail()[m
[32m+[m[32m// 	Periodically called to check if a character is available for[m
[32m+[m[32m//	input from the simulated keyboard (eg, has it been typed?).[m
[32m+[m[32m//[m
[32m+[m[32m//	Only read it in if there is buffer space for it (if the previous[m
[32m+[m[32m//	character has been grabbed out of the buffer by the Nachos kernel).[m
[32m+[m[32m//	Invoke the "read" interrupt handler, once the character has been[m[41m [m
[32m+[m[32m//	put into the buffer.[m[41m [m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mConsole::CheckCharAvail()[m
[32m+[m[32m{[m
[32m+[m[32m    char c;[m
[32m+[m
[32m+[m[32m    // schedule the next time to poll for a packet[m
[32m+[m[32m    interrupt->Schedule(ConsoleReadPoll, (int)this, ConsoleTime,[m[41m [m
[32m+[m			[32mConsoleReadInt);[m
[32m+[m
[32m+[m[32m    // do nothing if character is already buffered, or none to be read[m
[32m+[m[32m    if ((incoming != EOF) || !PollFile(readFileNo))[m
[32m+[m	[32mreturn;[m[41m	  [m
[32m+[m
[32m+[m[32m    // otherwise, read character and tell user about it[m
[32m+[m[32m    Read(readFileNo, &c, sizeof(char));[m
[32m+[m[32m    incoming = c ;[m
[32m+[m[32m    stats->numConsoleCharsRead++;[m
[32m+[m[32m    (*readHandler)(handlerArg);[m[41m	[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::WriteDone()[m
[32m+[m[32m// 	Internal routine called when it is time to invoke the interrupt[m
[32m+[m[32m//	handler to tell the Nachos kernel that the output character has[m
[32m+[m[32m//	completed.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mConsole::WriteDone()[m
[32m+[m[32m{[m
[32m+[m[32m    putBusy = FALSE;[m
[32m+[m[32m    stats->numConsoleCharsWritten++;[m
[32m+[m[32m    (*writeHandler)(handlerArg);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::GetChar()[m
[32m+[m[32m// 	Read a character from the input buffer, if there is any there.[m
[32m+[m[32m//	Either return the character, or EOF if none buffered.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mchar[m
[32m+[m[32mConsole::GetChar()[m
[32m+[m[32m{[m
[32m+[m[32m   char ch = incoming;[m
[32m+[m
[32m+[m[32m   incoming = EOF;[m
[32m+[m[32m   return ch;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Console::PutChar()[m
[32m+[m[32m// 	Write a character to the simulated display, schedule an interrupt[m[41m [m
[32m+[m[32m//	to occur in the future, and return.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mConsole::PutChar(char ch)[m
[32m+[m[32m{[m
[32m+[m[32m    ASSERT(putBusy == FALSE);[m
[32m+[m[32m    WriteFile(writeFileNo, &ch, sizeof(char));[m
[32m+[m[32m    putBusy = TRUE;[m
[32m+[m[32m    interrupt->Schedule(ConsoleWriteDone, (int)this, ConsoleTime,[m
[32m+[m					[32mConsoleWriteInt);[m
[32m+[m[32m}[m
[1mdiff --git a/code/machine/console.h b/code/machine/console.h[m
[1mnew file mode 100755[m
[1mindex 0000000..14a22cb[m
[1m--- /dev/null[m
[1m+++ b/code/machine/console.h[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32m// console.h[m[41m [m
[32m+[m[32m//	Data structures to simulate the behavior of a terminal[m
[32m+[m[32m//	I/O device.  A terminal has two parts -- a keyboard input,[m
[32m+[m[32m//	and a display output, each of which produces/accepts[m[41m [m
[32m+[m[32m//	characters sequentially.[m
[32m+[m[32m//[m
[32m+[m[32m//	The console hardware device is asynchronous.  When a character is[m
[32m+[m[32m//	written to the device, the routine returns immediately, and an[m[41m [m
[32m+[m[32m//	interrupt handler is called later when the I/O completes.[m
[32m+[m[32m//	For reads, an interrupt handler is called when a character arrives.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	The user of the device can specify the routines to be called when[m[41m [m
[32m+[m[32m//	the read/write interrupts occur.  There is a separate interrupt[m
[32m+[m[32m//	for read and write, and the device is "duplex" -- a character[m
[32m+[m[32m//	can be outgoing and incoming at the same time.[m
[32m+[m[32m//[m
[32m+[m[32m//  DO NOT CHANGE -- part of the machine emulation[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef CONSOLE_H[m
[32m+[m[32m#define CONSOLE_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "utility.h"[m
[32m+[m
[32m+[m[32m// The following class defines a hardware console device.[m
[32m+[m[32m// Input and output to the device is simulated by reading[m[41m [m
[32m+[m[32m// and writing to UNIX files ("readFile" and "writeFile").[m
[32m+[m[32m//[m
[32m+[m[32m// Since the device is asynchronous, the interrupt handler "readAvail"[m[41m [m
[32m+[m[32m// is called when a character has arrived, ready to be read in.[m
[32m+[m[32m// The interrupt handler "writeDone" is called when an output character[m[41m [m
[32m+[m[32m// has been "put", so that the next character can be written.[m
[32m+[m
[32m+[m[32mclass Console {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Console(char *readFile, char *writeFile, VoidFunctionPtr readAvail,[m[41m [m
[32m+[m	[32mVoidFunctionPtr writeDone, int callArg);[m
[32m+[m				[32m// initialize the hardware console device[m
[32m+[m[32m    ~Console();			// clean up console emulation[m
[32m+[m
[32m+[m[32m// external interface -- Nachos kernel code can call these[m
[32m+[m[32m    void PutChar(char ch);	// Write "ch" to the console display,[m[41m [m
[32m+[m				[32m// and return immediately.  "writeHandler"[m[41m [m
[32m+[m				[32m// is called when the I/O completes.[m[41m [m
[32m+[m
[32m+[m[32m    char GetChar();	   	// Poll the console input.  If a char is[m[41m [m
[32m+[m				[32m// available, return it.  Otherwise, return EOF.[m
[32m+[m[41m    [m				[32m// "readHandler" is called whenever there is[m[41m [m
[32m+[m				[32m// a char to be gotten[m
[32m+[m
[32m+[m[32m// internal emulation routines -- DO NOT call these.[m[41m [m
[32m+[m[32m    void WriteDone();	 	// internal routines to signal I/O completion[m
[32m+[m[32m    void CheckCharAvail();[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    int readFileNo;			// UNIX file emulating the keyboard[m[41m [m
[32m+[m[32m    int writeFileNo;			// UNIX file emulating the display[m
[32m+[m[32m    VoidFunctionPtr writeHandler; 	// Interrupt handler to call when[m[41m [m
[32m+[m					[32m// the PutChar I/O completes[m
[32m+[m[32m    VoidFunctionPtr readHandler; 	// Interrupt handler to call when[m[41m [m
[32m+[m					[32m// a character arrives from the keyboard[m
[32m+[m[32m    int handlerArg;			// argument to be passed to the[m[41m [m
[32m+[m					[32m// interrupt handlers[m
[32m+[m[32m    bool putBusy;    			// Is a PutChar operation in progress?[m
[32m+[m					[32m// If so, you can't do another one![m
[32m+[m[32m    char incoming;    			// Contains the character to be read,[m
[32m+[m					[32m// if there is one available.[m[41m [m
[32m+[m					[32m// Otherwise contains EOF.[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // CONSOLE_H[m
[1mdiff --git a/code/machine/disk.cc b/code/machine/disk.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..cfd81d9[m
[1m--- /dev/null[m
[1m+++ b/code/machine/disk.cc[m
[36m@@ -0,0 +1,271 @@[m
[32m+[m[32m// disk.cc[m[41m [m
[32m+[m[32m//	Routines to simulate a physical disk device; reading and writing[m
[32m+[m[32m//	to the disk is simulated as reading and writing to a UNIX file.[m
[32m+[m[32m//	See disk.h for details about the behavior of disks (and[m
[32m+[m[32m//	therefore about the behavior of this simulation).[m
[32m+[m[32m//[m
[32m+[m[32m//	Disk operations are asynchronous, so we have to invoke an interrupt[m
[32m+[m[32m//	handler when the simulated operation completes.[m
[32m+[m[32m//[m
[32m+[m[32m//  DO NOT CHANGE -- part of the machine emulation[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "disk.h"[m
[32m+[m[32m#include "system.h"[m
[32m+[m
[32m+[m[32m// We put this at the front of the UNIX file representing the[m
[32m+[m[32m// disk, to make it less likely we will accidentally treat a useful file[m[41m [m
[32m+[m[32m// as a disk (which would probably trash the file's contents).[m
[32m+[m[32m#define MagicNumber 	0x456789ab[m
[32m+[m[32m#define MagicSize 	sizeof(int)[m
[32m+[m
[32m+[m[32m#define DiskSize 	(MagicSize + (NumSectors * SectorSize))[m
[32m+[m
[32m+[m[32m// dummy procedure because we can't take a pointer of a member function[m
[32m+[m[32mstatic void DiskDone(int arg) { ((Disk *)arg)->HandleInterrupt(); }[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::Disk()[m
[32m+[m[32m// 	Initialize a simulated disk.  Open the UNIX file (creating it[m
[32m+[m[32m//	if it doesn't exist), and check the magic number to make sure it's[m[41m [m
[32m+[m[32m// 	ok to treat it as Nachos disk storage.[m
[32m+[m[32m//[m
[32m+[m[32m//	"name" -- text name of the file simulating the Nachos disk[m
[32m+[m[32m//	"callWhenDone" -- interrupt handler to be called when disk read/write[m
[32m+[m[32m//	   request completes[m
[32m+[m[32m//	"callArg" -- argument to pass the interrupt handler[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDisk::Disk(char* name, VoidFunctionPtr callWhenDone, int callArg)[m
[32m+[m[32m{[m
[32m+[m[32m    int magicNum;[m
[32m+[m[32m    int tmp = 0;[m
[32m+[m
[32m+[m[32m    DEBUG('d', "Initializing the disk, 0x%x 0x%x\n", callWhenDone, callArg);[m
[32m+[m[32m    handler = callWhenDone;[m
[32m+[m[32m    handlerArg = callArg;[m
[32m+[m[32m    lastSector = 0;[m
[32m+[m[32m    bufferInit = 0;[m
[32m+[m[41m    [m
[32m+[m[32m    fileno = OpenForReadWrite(name, FALSE);[m
[32m+[m[32m    if (fileno >= 0) {		 	// file exists, check magic number[m[41m [m
[32m+[m	[32mRead(fileno, (char *) &magicNum, MagicSize);[m
[32m+[m	[32mASSERT(magicNum == MagicNumber);[m
[32m+[m[32m    } else {				// file doesn't exist, create it[m
[32m+[m[32m        fileno = OpenForWrite(name);[m
[32m+[m	[32mmagicNum = MagicNumber;[m[41m  [m
[32m+[m	[32mWriteFile(fileno, (char *) &magicNum, MagicSize); // write magic number[m
[32m+[m
[32m+[m	[32m// need to write at end of file, so that reads will not return EOF[m
[32m+[m[32m        Lseek(fileno, DiskSize - sizeof(int), 0);[m[41m	[m
[32m+[m	[32mWriteFile(fileno, (char *)&tmp, sizeof(int));[m[41m  [m
[32m+[m[32m    }[m
[32m+[m[32m    active = FALSE;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::~Disk()[m
[32m+[m[32m// 	Clean up disk simulation, by closing the UNIX file representing the[m
[32m+[m[32m//	disk.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mDisk::~Disk()[m
[32m+[m[32m{[m
[32m+[m[32m    Close(fileno);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::PrintSector()[m
[32m+[m[32m// 	Dump the data in a disk read/write request, for debugging.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mPrintSector (bool writing, int sector, char *data)[m
[32m+[m[32m{[m
[32m+[m[32m    int *p = (int *) data;[m
[32m+[m
[32m+[m[32m    if (writing)[m
[32m+[m[32m        printf("Writing sector: %d\n", sector);[m[41m [m
[32m+[m[32m    else[m
[32m+[m[32m        printf("Reading sector: %d\n", sector);[m[41m [m
[32m+[m[32m    for (unsigned int i = 0; i < (SectorSize/sizeof(int)); i++)[m
[32m+[m	[32mprintf("%x ", p[i]);[m
[32m+[m[32m    printf("\n");[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::ReadRequest/WriteRequest[m
[32m+[m[32m// 	Simulate a request to read/write a single disk sector[m
[32m+[m[32m//	   Do the read/write immediately to the UNIX file[m
[32m+[m[32m//	   Set up an interrupt handler to be called later,[m
[32m+[m[32m//	      that will notify the caller when the simulator says[m
[32m+[m[32m//	      the operation has completed.[m
[32m+[m[32m//[m
[32m+[m[32m//	Note that a disk only allows an entire sector to be read/written,[m
[32m+[m[32m//	not part of a sector.[m
[32m+[m[32m//[m
[32m+[m[32m//	"sectorNumber" -- the disk sector to read/write[m
[32m+[m[32m//	"data" -- the bytes to be written, the buffer to hold the incoming bytes[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDisk::ReadRequest(int sectorNumber, char* data)[m
[32m+[m[32m{[m
[32m+[m[32m    int ticks = ComputeLatency(sectorNumber, FALSE);[m
[32m+[m
[32m+[m[32m    ASSERT(!active);				// only one request at a time[m
[32m+[m[32m    ASSERT((sectorNumber >= 0) && (sectorNumber < NumSectors));[m
[32m+[m[41m    [m
[32m+[m[32m    DEBUG('d', "Reading from sector %d\n", sectorNumber);[m
[32m+[m[32m    Lseek(fileno, SectorSize * sectorNumber + MagicSize, 0);[m
[32m+[m[32m    Read(fileno, data, SectorSize);[m
[32m+[m[32m    if (DebugIsEnabled('d'))[m
[32m+[m	[32mPrintSector(FALSE, sectorNumber, data);[m
[32m+[m[41m    [m
[32m+[m[32m    active = TRUE;[m
[32m+[m[32m    UpdateLast(sectorNumber);[m
[32m+[m[32m    stats->numDiskReads++;[m
[32m+[m[32m    interrupt->Schedule(DiskDone, (int) this, ticks, DiskInt);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDisk::WriteRequest(int sectorNumber, char* data)[m
[32m+[m[32m{[m
[32m+[m[32m    int ticks = ComputeLatency(sectorNumber, TRUE);[m
[32m+[m
[32m+[m[32m    ASSERT(!active);[m
[32m+[m[32m    ASSERT((sectorNumber >= 0) && (sectorNumber < NumSectors));[m
[32m+[m[41m    [m
[32m+[m[32m    DEBUG('d', "Writing to sector %d\n", sectorNumber);[m
[32m+[m[32m    Lseek(fileno, SectorSize * sectorNumber + MagicSize, 0);[m
[32m+[m[32m    WriteFile(fileno, data, SectorSize);[m
[32m+[m[32m    if (DebugIsEnabled('d'))[m
[32m+[m	[32mPrintSector(TRUE, sectorNumber, data);[m
[32m+[m[41m    [m
[32m+[m[32m    active = TRUE;[m
[32m+[m[32m    UpdateLast(sectorNumber);[m
[32m+[m[32m    stats->numDiskWrites++;[m
[32m+[m[32m    interrupt->Schedule(DiskDone, (int) this, ticks, DiskInt);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::HandleInterrupt()[m
[32m+[m[32m// 	Called when it is time to invoke the disk interrupt handler,[m
[32m+[m[32m//	to tell the Nachos kernel that the disk request is done.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDisk::HandleInterrupt ()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    active = FALSE;[m
[32m+[m[32m    (*handler)(handlerArg);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::TimeToSeek()[m
[32m+[m[32m//	Returns how long it will take to position the disk head over the correct[m
[32m+[m[32m//	track on the disk.  Since when we finish seeking, we are likely[m
[32m+[m[32m//	to be in the middle of a sector that is rotating past the head,[m
[32m+[m[32m//	we also return how long until the head is at the next sector boundary.[m
[32m+[m[32m//[m[41m	[m
[32m+[m[32m//   	Disk seeks at one track per SeekTime ticks (cf. stats.h)[m
[32m+[m[32m//   	and rotates at one sector per RotationTime ticks[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mDisk::TimeToSeek(int newSector, int *rotation)[m[41m [m
[32m+[m[32m{[m
[32m+[m[32m    int newTrack = newSector / SectorsPerTrack;[m
[32m+[m[32m    int oldTrack = lastSector / SectorsPerTrack;[m
[32m+[m[32m    int seek = abs(newTrack - oldTrack) * SeekTime;[m
[32m+[m				[32m// how long will seek take?[m
[32m+[m[32m    int over = (stats->totalTicks + seek) % RotationTime;[m[41m [m
[32m+[m				[32m// will we be in the middle of a sector when[m
[32m+[m				[32m// we finish the seek?[m
[32m+[m
[32m+[m[32m    *rotation = 0;[m
[32m+[m[32m    if (over > 0)	 	// if so, need to round up to next full sector[m
[32m+[m[41m   [m	[32m*rotation = RotationTime - over;[m
[32m+[m[32m    return seek;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::ModuloDiff()[m
[32m+[m[32m// 	Return number of sectors of rotational delay between target sector[m
[32m+[m[32m//	"to" and current sector position "from"[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m[41m [m
[32m+[m[32mDisk::ModuloDiff(int to, int from)[m
[32m+[m[32m{[m
[32m+[m[32m    int toOffset = to % SectorsPerTrack;[m
[32m+[m[32m    int fromOffset = from % SectorsPerTrack;[m
[32m+[m
[32m+[m[32m    return ((toOffset - fromOffset) + SectorsPerTrack) % SectorsPerTrack;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::ComputeLatency()[m
[32m+[m[32m// 	Return how long will it take to read/write a disk sector, from[m
[32m+[m[32m//	the current position of the disk head.[m
[32m+[m[32m//[m
[32m+[m[32m//   	Latency = seek time + rotational latency + transfer time[m
[32m+[m[32m//   	Disk seeks at one track per SeekTime ticks (cf. stats.h)[m
[32m+[m[32m//   	and rotates at one sector per RotationTime ticks[m
[32m+[m[32m//[m
[32m+[m[32m//   	To find the rotational latency, we first must figure out where the[m[41m [m
[32m+[m[32m//   	disk head will be after the seek (if any).  We then figure out[m
[32m+[m[32m//   	how long it will take to rotate completely past newSector after[m[41m [m
[32m+[m[32m//	that point.[m
[32m+[m[32m//[m
[32m+[m[32m//   	The disk also has a "track buffer"; the disk continuously reads[m
[32m+[m[32m//   	the contents of the current disk track into the buffer.  This allows[m[41m [m
[32m+[m[32m//   	read requests to the current track to be satisfied more quickly.[m
[32m+[m[32m//   	The contents of the track buffer are discarded after every seek to[m[41m [m
[32m+[m[32m//   	a new track.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mDisk::ComputeLatency(int newSector, bool writing)[m
[32m+[m[32m{[m
[32m+[m[32m    int rotation;[m
[32m+[m[32m    int seek = TimeToSeek(newSector, &rotation);[m
[32m+[m[32m    int timeAfter = stats->totalTicks + seek + rotation;[m
[32m+[m
[32m+[m[32m#ifndef NOTRACKBUF	// turn this on if you don't want the track buffer stuff[m
[32m+[m[32m    // check if track buffer applies[m
[32m+[m[32m    if ((writing == FALSE) && (seek == 0)[m[41m [m
[32m+[m		[32m&& (((timeAfter - bufferInit) / RotationTime)[m[41m [m
[32m+[m	[41m     [m		[32m> ModuloDiff(newSector, bufferInit / RotationTime))) {[m
[32m+[m[32m        DEBUG('d', "Request latency = %d\n", RotationTime);[m
[32m+[m	[32mreturn RotationTime; // time to transfer sector from the track buffer[m
[32m+[m[32m    }[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m    rotation += ModuloDiff(newSector, timeAfter / RotationTime) * RotationTime;[m
[32m+[m
[32m+[m[32m    DEBUG('d', "Request latency = %d\n", seek + rotation + RotationTime);[m
[32m+[m[32m    return(seek + rotation + RotationTime);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Disk::UpdateLast[m
[32m+[m[32m//   	Keep track of the most recently requested sector.  So we can know[m
[32m+[m[32m//	what is in the track buffer.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mDisk::UpdateLast(int newSector)[m
[32m+[m[32m{[m
[32m+[m[32m    int rotate;[m
[32m+[m[32m    int seek = TimeToSeek(newSector, &rotate);[m
[32m+[m[41m    [m
[32m+[m[32m    if (seek != 0)[m
[32m+[m	[32mbufferInit = stats->totalTicks + seek + rotate;[m
[32m+[m[32m    lastSector = newSector;[m
[32m+[m[32m    DEBUG('d', "Updating last sector = %d, %d\n", lastSector, bufferInit);[m
[32m+[m[32m}[m
[1mdiff --git a/code/machine/disk.h b/code/machine/disk.h[m
[1mnew file mode 100755[m
[1mindex 0000000..a58b72f[m
[1m--- /dev/null[m
[1m+++ b/code/machine/disk.h[m
[36m@@ -0,0 +1,93 @@[m
[32m+[m[32m// disk.h[m[41m [m
[32m+[m[32m//	Data structures to emulate a physical disk.  A physical disk[m
[32m+[m[32m//	can accept (one at a time) requests to read/write a disk sector;[m
[32m+[m[32m//	when the request is satisfied, the CPU gets an interrupt, and[m[41m [m
[32m+[m[32m//	the next request can be sent to the disk.[m
[32m+[m[32m//[m
[32m+[m[32m//	Disk contents are preserved across machine crashes, but if[m
[32m+[m[32m//	a file system operation (eg, create a file) is in progress when the[m[41m [m
[32m+[m[32m//	system shuts down, the file system may be corrupted.[m
[32m+[m[32m//[m
[32m+[m[32m//  DO NOT CHANGE -- part of the machine emulation[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#ifndef DISK_H[m
[32m+[m[32m#define DISK_H[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "utility.h"[m
[32m+[m
[32m+[m[32m// The following class defines a physical disk I/O device.  The disk[m
[32m+[m[32m// has a single surface, split up into "tracks", and each track split[m
[32m+[m[32m// up into "sectors" (the same number of sectors on each track, and each[m
[32m+[m[32m// sector has the same number of bytes of storage).[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m// Addressing is by sector number -- each sector on the disk is given[m
[32m+[m[32m// a unique number: track * SectorsPerTrack + offset within a track.[m
[32m+[m[32m//[m
[32m+[m[32m// As with other I/O devices, the raw physical disk is an asynchronous device --[m
[32m+[m[32m// requests to read or write portions of the disk return immediately,[m
[32m+[m[32m// and an interrupt is invoked later to signal that the operation completed.[m
[32m+[m[32m//[m
[32m+[m[32m// The physical disk is in fact simulated via operations on a UNIX file.[m
[32m+[m[32m//[m
[32m+[m[32m// To make life a little more realistic, the simulated time for[m
[32m+[m[32m// each operation reflects a "track buffer" -- RAM to store the contents[m
[32m+[m[32m// of the current track as the disk head passes by.  The idea is that the[m
[32m+[m[32m// disk always transfers to the track buffer, in case that data is requested[m
[32m+[m[32m// later on.  This has the benefit of eliminating the need for[m[41m [m
[32m+[m[32m// "skip-sector" scheduling -- a read request which comes in shortly after[m[41m [m
[32m+[m[32m// the head has passed the beginning of the sector can be satisfied more[m[41m [m
[32m+[m[32m// quickly, because its contents are in the track buffer.  Most[m[41m [m
[32m+[m[32m// disks these days now come with a track buffer.[m
[32m+[m[32m//[m
[32m+[m[32m// The track buffer simulation can be disabled by compiling with -DNOTRACKBUF[m
[32m+[m
[32m+[m[32m#define SectorSize 		128	// number of bytes per disk sector[m
[32m+[m[32m#define SectorsPerTrack 	32	// number of sectors per disk track[m[41m [m
[32m+[m[32m#define NumTracks 		32	// number of tracks per disk[m
[32m+[m[32m#define NumSectors 		(SectorsPerTrack * NumTracks)[m
[32m+[m					[32m// total # of sectors per disk[m
[32m+[m
[32m+[m[32mclass Disk {[m
[32m+[m[32m  public:[m
[32m+[m[32m    Disk(char* name, VoidFunctionPtr callWhenDone, int callArg);[m
[32m+[m[41m    [m					[32m// Create a simulated disk.[m[41m  [m
[32m+[m					[32m// Invoke (*callWhenDone)(callArg)[m[41m [m
[32m+[m					[32m// every time a request completes.[m
[32m+[m[32m    ~Disk();				// Deallocate the disk.[m
[32m+[m[41m    [m
[32m+[m[32m    void ReadRequest(int sectorNumber, char* data);[m
[32m+[m[41m    [m					[32m// Read/write an single disk sector.[m
[32m+[m					[32m// These routines send a request to[m[41m [m
[32m+[m[41m    [m					[32m// the disk and return immediately.[m
[32m+[m[41m    [m					[32m// Only one request allowed at a time![m
[32m+[m[32m    void WriteRequest(int sectorNumber, char* data);[m
[32m+[m
[32m+[m[32m    void HandleInterrupt();		// Interrupt handler, invoked when[m
[32m+[m					[32m// disk request finishes.[m
[32m+[m
[32m+[m[32m    int ComputeLatency(int newSector, bool writing);[m[41m	[m
[32m+[m[41m    [m					[32m// Return how long a request to[m[41m [m
[32m+[m					[32m// newSector will take:[m[41m [m
[32m+[m					[32m// (seek + rotational delay + transfer)[m
[32m+[m
[32m+[m[32m  private:[m
[32m+[m[32m    int fileno;				// UNIX file number for simulated disk[m[41m [m
[32m+[m[32m    VoidFunctionPtr handler;		// Interrupt handler, to be invoked[m[41m [m
[32m+[m					[32m// when any disk request finishes[m
[32m+[m[32m    int handlerArg;			// Argument to interrupt handler[m[41m [m
[32m+[m[32m    bool active;     			// Is a disk operation in progress?[m
[32m+[m[32m    int lastSector;			// The previous disk request[m[41m [m
[32m+[m[32m    int bufferInit;			// When the track buffer started[m[41m [m
[32m+[m					[32m// being loaded[m
[32m+[m
[32m+[m[32m    int TimeToSeek(int newSector, int *rotate); // time to get to the new track[m
[32m+[m[32m    int ModuloDiff(int to, int from);        // # sectors between to and from[m
[32m+[m[32m    void UpdateLast(int newSector);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m#endif // DISK_H[m
[1mdiff --git a/code/machine/interrupt.cc b/code/machine/interrupt.cc[m
[1mnew file mode 100755[m
[1mindex 0000000..1dc3d31[m
[1m--- /dev/null[m
[1m+++ b/code/machine/interrupt.cc[m
[36m@@ -0,0 +1,369 @@[m
[32m+[m[32m// interrupt.cc[m[41m [m
[32m+[m[32m//	Routines to simulate hardware interrupts.[m
[32m+[m[32m//[m
[32m+[m[32m//	The hardware provides a routine (SetLevel) to enable or disable[m
[32m+[m[32m//	interrupts.[m
[32m+[m[32m//[m
[32m+[m[32m//	In order to emulate the hardware, we need to keep track of all[m
[32m+[m[32m//	interrupts the hardware devices would cause, and when they[m
[32m+[m[32m//	are supposed to occur.[m[41m  [m
[32m+[m[32m//[m
[32m+[m[32m//	This module also keeps track of simulated time.  Time advances[m
[32m+[m[32m//	only when the following occur:[m[41m [m
[32m+[m[32m//		interrupts are re-enabled[m
[32m+[m[32m//		a user instruction is executed[m
[32m+[m[32m//		there is nothing in the ready queue[m
[32m+[m[32m//[m
[32m+[m[32m//  DO NOT CHANGE -- part of the machine emulation[m
[32m+[m[32m//[m
[32m+[m[32m// Copyright (c) 1992-1993 The Regents of the University of California.[m
[32m+[m[32m// All rights reserved.  See copyright.h for copyright notice and limitation[m[41m [m
[32m+[m[32m// of liability and disclaimer of warranty provisions.[m
[32m+[m
[32m+[m[32m#include "copyright.h"[m
[32m+[m[32m#include "interrupt.h"[m
[32m+[m[32m#include "system.h"[m
[32m+[m
[32m+[m[32m// String definitions for debugging messages[m
[32m+[m
[32m+[m[32mstatic char *intLevelNames[] = { "off", "on"};[m
[32m+[m[32mstatic char *intTypeNames[] = { "timer", "disk", "console write",[m[41m [m
[32m+[m			[32m"console read", "network send", "network recv"};[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// PendingInterrupt::PendingInterrupt[m
[32m+[m[32m// 	Initialize a hardware device interrupt that is to be scheduled[m[41m [m
[32m+[m[32m//	to occur in the near future.[m
[32m+[m[32m//[m
[32m+[m[32m//	"func" is the procedure to call when the interrupt occurs[m
[32m+[m[32m//	"param" is the argument to pass to the procedure[m
[32m+[m[32m//	"time" is when (in simulated time) the interrupt is to occur[m
[32m+[m[32m//	"kind" is the hardware device that generated the interrupt[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mPendingInterrupt::PendingInterrupt(VoidFunctionPtr func, int param, int time,[m[41m [m
[32m+[m				[32mIntType kind)[m
[32m+[m[32m{[m
[32m+[m[32m    handler = func;[m
[32m+[m[32m    arg = param;[m
[32m+[m[32m    when = time;[m
[32m+[m[32m    type = kind;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::Interrupt[m
[32m+[m[32m// 	Initialize the simulation of hardware device interrupts.[m
[32m+[m[32m//[m[41m	[m
[32m+[m[32m//	Interrupts start disabled, with no interrupts pending, etc.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mInterrupt::Interrupt()[m
[32m+[m[32m{[m
[32m+[m[32m    level = IntOff;[m
[32m+[m[32m    pending = new List();[m
[32m+[m[32m    inHandler = FALSE;[m
[32m+[m[32m    yieldOnReturn = FALSE;[m
[32m+[m[32m    status = SystemMode;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::~Interrupt[m
[32m+[m[32m// 	De-allocate the data structures needed by the interrupt simulation.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mInterrupt::~Interrupt()[m
[32m+[m[32m{[m
[32m+[m[32m    while (!pending->IsEmpty())[m
[32m+[m	[32mdelete (PendingInterrupt *)pending->Remove();[m
[32m+[m[32m    delete pending;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::ChangeLevel[m
[32m+[m[32m// 	Change interrupts to be enabled or disabled, without advancing[m[41m [m
[32m+[m[32m//	the simulated time (normally, enabling interrupts advances the time).[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::ChangeLevel[m
[32m+[m[32m// 	Change interrupts to be enabled or disabled, without advancing[m[41m [m
[32m+[m[32m//	the simulated time (normally, enabling interrupts advances the time).[m
[32m+[m[32m//[m
[32m+[m[32m//	Used internally.[m
[32m+[m[32m//[m
[32m+[m[32m//	"old" -- the old interrupt status[m
[32m+[m[32m//	"now" -- the new interrupt status[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::ChangeLevel(IntStatus old, IntStatus now)[m
[32m+[m[32m{[m
[32m+[m[32m    level = now;[m
[32m+[m[32m    DEBUG('i',"\tinterrupts: %s -> %s\n",intLevelNames[old],intLevelNames[now]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::SetLevel[m
[32m+[m[32m// 	Change interrupts to be enabled or disabled, and if interrupts[m
[32m+[m[32m//	are being enabled, advance simulated time by calling OneTick().[m
[32m+[m[32m//[m
[32m+[m[32m// Returns:[m
[32m+[m[32m//	The old interrupt status.[m
[32m+[m[32m// Parameters:[m
[32m+[m[32m//	"now" -- the new interrupt status[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mIntStatus[m
[32m+[m[32mInterrupt::SetLevel(IntStatus now)[m
[32m+[m[32m{[m
[32m+[m[32m    IntStatus old = level;[m
[32m+[m[41m    [m
[32m+[m[32m    ASSERT((now == IntOff) || (inHandler == FALSE));// interrupt handlers are[m[41m [m
[32m+[m						[32m// prohibited from enabling[m[41m [m
[32m+[m						[32m// interrupts[m
[32m+[m
[32m+[m[32m    ChangeLevel(old, now);			// change to new state[m
[32m+[m[32m    if ((now == IntOn) && (old == IntOff))[m
[32m+[m	[32mOneTick();				// advance simulated time[m
[32m+[m[32m    return old;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::Enable[m
[32m+[m[32m// 	Turn interrupts on.  Who cares what they used to be?[m[41m [m
[32m+[m[32m//	Used in ThreadRoot, to turn interrupts on when first starting up[m
[32m+[m[32m//	a thread.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::Enable()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    (void) SetLevel(IntOn);[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::OneTick[m
[32m+[m[32m// 	Advance simulated time and check if there are any pending[m[41m [m
[32m+[m[32m//	interrupts to be called.[m[41m [m
[32m+[m[32m//[m
[32m+[m[32m//	Two things can cause OneTick to be called:[m
[32m+[m[32m//		interrupts are re-enabled[m
[32m+[m[32m//		a user instruction is executed[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::OneTick()[m
[32m+[m[32m{[m
[32m+[m[32m    MachineStatus old = status;[m
[32m+[m
[32m+[m[32m// advance simulated time[m
[32m+[m[32m    if (status == SystemMode) {[m
[32m+[m[32m        stats->totalTicks += SystemTick;[m
[32m+[m	[32mstats->systemTicks += SystemTick;[m
[32m+[m[32m    } else {					// USER_PROGRAM[m
[32m+[m	[32mstats->totalTicks += UserTick;[m
[32m+[m	[32mstats->userTicks += UserTick;[m
[32m+[m[32m    }[m
[32m+[m[32m    DEBUG('i', "\n== Tick %d ==\n", stats->totalTicks);[m
[32m+[m
[32m+[m[32m// check any pending interrupts are now ready to fire[m
[32m+[m[32m    ChangeLevel(IntOn, IntOff);		// first, turn off interrupts[m
[32m+[m					[32m// (interrupt handlers run with[m
[32m+[m					[32m// interrupts disabled)[m
[32m+[m[32m    while (CheckIfDue(FALSE))		// check for pending interrupts[m
[32m+[m	[32m;[m
[32m+[m[32m    ChangeLevel(IntOff, IntOn);		// re-enable interrupts[m
[32m+[m[32m    if (yieldOnReturn) {		// if the timer device handler asked[m[41m [m
[32m+[m					[32m// for a context switch, ok to do it now[m
[32m+[m	[32myieldOnReturn = FALSE;[m
[32m+[m[41m [m	[32mstatus = SystemMode;		// yield is a kernel routine[m
[32m+[m	[32mcurrentThread->Yield();[m
[32m+[m	[32mstatus = old;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::YieldOnReturn[m
[32m+[m[32m// 	Called from within an interrupt handler, to cause a context switch[m
[32m+[m[32m//	(for example, on a time slice) in the interrupted thread,[m
[32m+[m[32m//	when the handler returns.[m
[32m+[m[32m//[m
[32m+[m[32m//	We can't do the context switch here, because that would switch[m
[32m+[m[32m//	out the interrupt handler, and we want to switch out the[m[41m [m
[32m+[m[32m//	interrupted thread.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::YieldOnReturn()[m
[32m+[m[32m{[m[41m [m
[32m+[m[32m    ASSERT(inHandler == TRUE);[m[41m  [m
[32m+[m[32m    yieldOnReturn = TRUE;[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::Idle[m
[32m+[m[32m// 	Routine called when there is nothing in the ready queue.[m
[32m+[m[32m//[m
[32m+[m[32m//	Since something has to be running in order to put a thread[m
[32m+[m[32m//	on the ready queue, the only thing to do is to advance[m[41m [m
[32m+[m[32m//	simulated time until the next scheduled hardware interrupt.[m
[32m+[m[32m//[m
[32m+[m[32m//	If there are no pending interrupts, stop.  There's nothing[m
[32m+[m[32m//	more for us to do.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::Idle()[m
[32m+[m[32m{[m
[32m+[m[32m    DEBUG('i', "Machine idling; checking for interrupts.\n");[m
[32m+[m[32m    status = IdleMode;[m
[32m+[m[32m    if (CheckIfDue(TRUE)) {		// check for any pending interrupts[m
[32m+[m[41m    [m	[32mwhile (CheckIfDue(FALSE))	// check for any other pending[m[41m [m
[32m+[m	[32m    ;				// interrupts[m
[32m+[m[32m        yieldOnReturn = FALSE;		// since there's nothing in the[m
[32m+[m					[32m// ready queue, the yield is automatic[m
[32m+[m[32m        status = SystemMode;[m
[32m+[m	[32mreturn;				// return in case there's now[m
[32m+[m					[32m// a runnable thread[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // if there are no pending interrupts, and nothing is on the ready[m
[32m+[m[32m    // queue, it is time to stop.   If the console or the network is[m[41m [m
[32m+[m[32m    // operating, there are *always* pending interrupts, so this code[m
[32m+[m[32m    // is not reached.  Instead, the halt must be invoked by the user program.[m
[32m+[m
[32m+[m[32m    DEBUG('i', "Machine idle.  No interrupts to do.\n");[m
[32m+[m[32m    printf("No threads ready or runnable, and no pending interrupts.\n");[m
[32m+[m[32m    printf("Assuming the program completed.\n");[m
[32m+[m[32m    Halt();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::Halt[m
[32m+[m[32m// 	Shut down Nachos cleanly, printing out performance statistics.[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32mvoid[m
[32m+[m[32mInterrupt::Halt()[m
[32m+[m[32m{[m
[32m+[m[32m    printf("Machine halting!\n\n");[m
[32m+[m[32m    stats->Print();[m
[32m+[m[32m    Cleanup();     // Never returns.[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[32m// Interrupt::Schedule[m
[32m+[m[32m// 	Arrange for the CPU to be interrupted when simulated time[m
[32m+[m[32m//	reaches "now + when".[m
[32m+[m[32m//[m
[32m+[m[32m//	Implementation: just put it on a 